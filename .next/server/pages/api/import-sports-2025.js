"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/import-sports-2025";
exports.ids = ["pages/api/import-sports-2025"];
exports.modules = {

/***/ "@next-auth/prisma-adapter":
/*!********************************************!*\
  !*** external "@next-auth/prisma-adapter" ***!
  \********************************************/
/***/ ((module) => {

module.exports = require("@next-auth/prisma-adapter");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("bcryptjs");

/***/ }),

/***/ "next-auth/next":
/*!*********************************!*\
  !*** external "next-auth/next" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("next-auth/next");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "next-auth/providers/github":
/*!*********************************************!*\
  !*** external "next-auth/providers/github" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/github");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fimport-sports-2025&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fimport-sports-2025.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fimport-sports-2025&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fimport-sports-2025.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_import_sports_2025_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/import-sports-2025.ts */ \"(api)/./pages/api/import-sports-2025.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_import_sports_2025_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_import_sports_2025_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/import-sports-2025\",\n        pathname: \"/api/import-sports-2025\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_import_sports_2025_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmltcG9ydC1zcG9ydHMtMjAyNSZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGaW1wb3J0LXNwb3J0cy0yMDI1LnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQzhEO0FBQzlEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyw2REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsNkRBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZm9vdHJhdGUvPzFiNzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9pbXBvcnQtc3BvcnRzLTIwMjUudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9pbXBvcnQtc3BvcnRzLTIwMjVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9pbXBvcnQtc3BvcnRzLTIwMjVcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fimport-sports-2025&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fimport-sports-2025.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var _next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @next-auth/prisma-adapter */ \"@next-auth/prisma-adapter\");\n/* harmony import */ var _next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/github */ \"next-auth/providers/github\");\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./prisma */ \"(api)/./lib/prisma.ts\");\n\n\n\n\n\nconst authOptions = {\n    adapter: (0,_next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__.PrismaAdapter)(_prisma__WEBPACK_IMPORTED_MODULE_4__.prisma),\n    providers: [\n        next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1___default()({\n            clientId: process.env.GITHUB_ID,\n            clientSecret: process.env.GITHUB_SECRET\n        }),\n        next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2___default()({\n            name: \"credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Mot de passe\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    return null;\n                }\n                const user = await _prisma__WEBPACK_IMPORTED_MODULE_4__.prisma.user.findUnique({\n                    where: {\n                        email: credentials.email\n                    }\n                });\n                if (!user || !user.password) {\n                    return null;\n                }\n                const isPasswordValid = await bcryptjs__WEBPACK_IMPORTED_MODULE_3___default().compare(credentials.password, user.password);\n                if (!isPasswordValid) {\n                    return null;\n                }\n                return {\n                    id: user.id,\n                    email: user.email,\n                    name: user.name,\n                    username: user.username\n                };\n            }\n        })\n    ],\n    callbacks: {\n        session: async ({ session, token })=>{\n            if (session?.user) {\n                session.user.id = token.sub;\n            }\n            return session;\n        },\n        jwt: async ({ user, token })=>{\n            if (user) {\n                token.uid = user.id;\n            }\n            return token;\n        }\n    },\n    session: {\n        strategy: \"jwt\"\n    },\n    pages: {\n        signIn: \"/auth/signin\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvYXV0aC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQ3lEO0FBQ0Y7QUFDVTtBQUNwQztBQUNJO0FBRTFCLE1BQU1LLGNBQStCO0lBQzFDQyxTQUFTTix3RUFBYUEsQ0FBQ0ksMkNBQU1BO0lBQzdCRyxXQUFXO1FBQ1ROLGlFQUFjQSxDQUFDO1lBQ2JPLFVBQVVDLFFBQVFDLEdBQUcsQ0FBQ0MsU0FBUztZQUMvQkMsY0FBY0gsUUFBUUMsR0FBRyxDQUFDRyxhQUFhO1FBQ3pDO1FBQ0FYLHNFQUFtQkEsQ0FBQztZQUNsQlksTUFBTTtZQUNOQyxhQUFhO2dCQUNYQyxPQUFPO29CQUFFQyxPQUFPO29CQUFTQyxNQUFNO2dCQUFRO2dCQUN2Q0MsVUFBVTtvQkFBRUYsT0FBTztvQkFBZ0JDLE1BQU07Z0JBQVc7WUFDdEQ7WUFDQSxNQUFNRSxXQUFVTCxXQUFXO2dCQUN6QixJQUFJLENBQUNBLGFBQWFDLFNBQVMsQ0FBQ0QsYUFBYUksVUFBVTtvQkFDakQsT0FBTztnQkFDVDtnQkFFQSxNQUFNRSxPQUFPLE1BQU1qQiwyQ0FBTUEsQ0FBQ2lCLElBQUksQ0FBQ0MsVUFBVSxDQUFDO29CQUN4Q0MsT0FBTzt3QkFDTFAsT0FBT0QsWUFBWUMsS0FBSztvQkFDMUI7Z0JBQ0Y7Z0JBRUEsSUFBSSxDQUFDSyxRQUFRLENBQUNBLEtBQUtGLFFBQVEsRUFBRTtvQkFDM0IsT0FBTztnQkFDVDtnQkFFQSxNQUFNSyxrQkFBa0IsTUFBTXJCLHVEQUFjLENBQzFDWSxZQUFZSSxRQUFRLEVBQ3BCRSxLQUFLRixRQUFRO2dCQUdmLElBQUksQ0FBQ0ssaUJBQWlCO29CQUNwQixPQUFPO2dCQUNUO2dCQUVBLE9BQU87b0JBQ0xFLElBQUlMLEtBQUtLLEVBQUU7b0JBQ1hWLE9BQU9LLEtBQUtMLEtBQUs7b0JBQ2pCRixNQUFNTyxLQUFLUCxJQUFJO29CQUNmYSxVQUFVTixLQUFLTSxRQUFRO2dCQUN6QjtZQUNGO1FBQ0Y7S0FDRDtJQUNEQyxXQUFXO1FBQ1RDLFNBQVMsT0FBTyxFQUFFQSxPQUFPLEVBQUVDLEtBQUssRUFBRTtZQUNoQyxJQUFJRCxTQUFTUixNQUFNO2dCQUNqQlEsUUFBUVIsSUFBSSxDQUFDSyxFQUFFLEdBQUdJLE1BQU1DLEdBQUc7WUFDN0I7WUFDQSxPQUFPRjtRQUNUO1FBQ0FHLEtBQUssT0FBTyxFQUFFWCxJQUFJLEVBQUVTLEtBQUssRUFBRTtZQUN6QixJQUFJVCxNQUFNO2dCQUNSUyxNQUFNRyxHQUFHLEdBQUdaLEtBQUtLLEVBQUU7WUFDckI7WUFDQSxPQUFPSTtRQUNUO0lBQ0Y7SUFDQUQsU0FBUztRQUNQSyxVQUFVO0lBQ1o7SUFDQUMsT0FBTztRQUNMQyxRQUFRO0lBQ1Y7QUFDRixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZm9vdHJhdGUvLi9saWIvYXV0aC50cz9iZjdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBdXRoT3B0aW9ucyB9IGZyb20gXCJuZXh0LWF1dGhcIlxuaW1wb3J0IHsgUHJpc21hQWRhcHRlciB9IGZyb20gXCJAbmV4dC1hdXRoL3ByaXNtYS1hZGFwdGVyXCJcbmltcG9ydCBHaXRodWJQcm92aWRlciBmcm9tIFwibmV4dC1hdXRoL3Byb3ZpZGVycy9naXRodWJcIlxuaW1wb3J0IENyZWRlbnRpYWxzUHJvdmlkZXIgZnJvbSBcIm5leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHNcIlxuaW1wb3J0IGJjcnlwdCBmcm9tIFwiYmNyeXB0anNcIlxuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSBcIi4vcHJpc21hXCJcblxuZXhwb3J0IGNvbnN0IGF1dGhPcHRpb25zOiBOZXh0QXV0aE9wdGlvbnMgPSB7XG4gIGFkYXB0ZXI6IFByaXNtYUFkYXB0ZXIocHJpc21hKSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgR2l0aHViUHJvdmlkZXIoe1xuICAgICAgY2xpZW50SWQ6IHByb2Nlc3MuZW52LkdJVEhVQl9JRCEsXG4gICAgICBjbGllbnRTZWNyZXQ6IHByb2Nlc3MuZW52LkdJVEhVQl9TRUNSRVQhLFxuICAgIH0pLFxuICAgIENyZWRlbnRpYWxzUHJvdmlkZXIoe1xuICAgICAgbmFtZTogXCJjcmVkZW50aWFsc1wiLFxuICAgICAgY3JlZGVudGlhbHM6IHtcbiAgICAgICAgZW1haWw6IHsgbGFiZWw6IFwiRW1haWxcIiwgdHlwZTogXCJlbWFpbFwiIH0sXG4gICAgICAgIHBhc3N3b3JkOiB7IGxhYmVsOiBcIk1vdCBkZSBwYXNzZVwiLCB0eXBlOiBcInBhc3N3b3JkXCIgfVxuICAgICAgfSxcbiAgICAgIGFzeW5jIGF1dGhvcml6ZShjcmVkZW50aWFscykge1xuICAgICAgICBpZiAoIWNyZWRlbnRpYWxzPy5lbWFpbCB8fCAhY3JlZGVudGlhbHM/LnBhc3N3b3JkKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHtcbiAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgZW1haWw6IGNyZWRlbnRpYWxzLmVtYWlsXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIGlmICghdXNlciB8fCAhdXNlci5wYXNzd29yZCkge1xuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBpc1Bhc3N3b3JkVmFsaWQgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShcbiAgICAgICAgICBjcmVkZW50aWFscy5wYXNzd29yZCxcbiAgICAgICAgICB1c2VyLnBhc3N3b3JkXG4gICAgICAgIClcblxuICAgICAgICBpZiAoIWlzUGFzc3dvcmRWYWxpZCkge1xuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGlkOiB1c2VyLmlkLFxuICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxuICAgICAgICAgIG5hbWU6IHVzZXIubmFtZSxcbiAgICAgICAgICB1c2VybmFtZTogdXNlci51c2VybmFtZSxcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIF0sXG4gIGNhbGxiYWNrczoge1xuICAgIHNlc3Npb246IGFzeW5jICh7IHNlc3Npb24sIHRva2VuIH0pID0+IHtcbiAgICAgIGlmIChzZXNzaW9uPy51c2VyKSB7XG4gICAgICAgIHNlc3Npb24udXNlci5pZCA9IHRva2VuLnN1YiFcbiAgICAgIH1cbiAgICAgIHJldHVybiBzZXNzaW9uXG4gICAgfSxcbiAgICBqd3Q6IGFzeW5jICh7IHVzZXIsIHRva2VuIH0pID0+IHtcbiAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgIHRva2VuLnVpZCA9IHVzZXIuaWRcbiAgICAgIH1cbiAgICAgIHJldHVybiB0b2tlblxuICAgIH0sXG4gIH0sXG4gIHNlc3Npb246IHtcbiAgICBzdHJhdGVneTogJ2p3dCcsXG4gIH0sXG4gIHBhZ2VzOiB7XG4gICAgc2lnbkluOiAnL2F1dGgvc2lnbmluJyxcbiAgfSxcbn1cbiJdLCJuYW1lcyI6WyJQcmlzbWFBZGFwdGVyIiwiR2l0aHViUHJvdmlkZXIiLCJDcmVkZW50aWFsc1Byb3ZpZGVyIiwiYmNyeXB0IiwicHJpc21hIiwiYXV0aE9wdGlvbnMiLCJhZGFwdGVyIiwicHJvdmlkZXJzIiwiY2xpZW50SWQiLCJwcm9jZXNzIiwiZW52IiwiR0lUSFVCX0lEIiwiY2xpZW50U2VjcmV0IiwiR0lUSFVCX1NFQ1JFVCIsIm5hbWUiLCJjcmVkZW50aWFscyIsImVtYWlsIiwibGFiZWwiLCJ0eXBlIiwicGFzc3dvcmQiLCJhdXRob3JpemUiLCJ1c2VyIiwiZmluZFVuaXF1ZSIsIndoZXJlIiwiaXNQYXNzd29yZFZhbGlkIiwiY29tcGFyZSIsImlkIiwidXNlcm5hbWUiLCJjYWxsYmFja3MiLCJzZXNzaW9uIiwidG9rZW4iLCJzdWIiLCJqd3QiLCJ1aWQiLCJzdHJhdGVneSIsInBhZ2VzIiwic2lnbkluIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/auth.ts\n");

/***/ }),

/***/ "(api)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUU3QyxNQUFNQyxrQkFBa0JDO0FBSWpCLE1BQU1DLFNBQVNGLGdCQUFnQkUsTUFBTSxJQUFJLElBQUlILHdEQUFZQSxHQUFFO0FBRWxFLElBQUlJLElBQXlCLEVBQWNILGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zvb3RyYXRlLy4vbGliL3ByaXNtYS50cz85ODIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50J1xuXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWxUaGlzIGFzIHVua25vd24gYXMge1xuICBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxufVxuXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/PyBuZXcgUHJpc21hQ2xpZW50KClcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWFcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwicHJpc21hIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/prisma.ts\n");

/***/ }),

/***/ "(api)/./lib/working-sports-api.ts":
/*!***********************************!*\
  !*** ./lib/working-sports-api.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   workingSportsAPI: () => (/* binding */ workingSportsAPI)\n/* harmony export */ });\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prisma */ \"(api)/./lib/prisma.ts\");\n// lib/working-sports-api.ts\n// Version modifiée avec tes ligues exactes et sans limites\n\nconst RAPIDAPI_KEY = process.env.RAPIDAPI_KEY;\n// 🏆 TES LIGUES EXACTES POUR 2025\nconst WORKING_SPORTS_CONFIG = {\n    football: {\n        host: \"api-football-v1.p.rapidapi.com\",\n        baseUrl: \"https://api-football-v1.p.rapidapi.com/v3\",\n        // 🆕 CHANGÉ POUR 2025\n        season: 2025,\n        leagues: {\n            // 🇪🇺 TES 5 LIGUES EUROPÉENNES\n            \"Ligue 1\": 61,\n            \"La Liga\": 140,\n            \"Premier League\": 39,\n            \"Bundesliga\": 78,\n            \"Serie A\": 135,\n            // 🏆 COMPÉTITIONS EUROPÉENNES\n            \"Champions League\": 2,\n            \"Europa League\": 3,\n            // 🌍 AUTRES LIGUES\n            \"MLS\": 253,\n            \"Saudi Pro League\": 307,\n            // 🌏 INTERNATIONAL\n            \"Nations League\": 5,\n            \"World Cup Qualifiers\": 14\n        }\n    },\n    basketball: {\n        host: \"api-basketball.p.rapidapi.com\",\n        baseUrl: \"https://api-basketball.p.rapidapi.com\",\n        season: \"2024-2025\",\n        leagues: {\n            \"NBA\": 12,\n            \"EuroLeague\": 120,\n            \"LNB Pro A\": 113,\n            \"EuroBasket\": 16,\n            \"FIBA World Cup\": 15\n        }\n    }\n};\nclass WorkingSportsAPI {\n    // 🔧 REQUÊTE API SÉCURISÉE\n    async makeAPIRequest(url, host) {\n        if (this.requestCount >= this.MAX_REQUESTS_PER_MINUTE) {\n            console.log(\"⏸️ Pause 60s pour respecter les quotas API...\");\n            await this.sleep(60000);\n            this.requestCount = 0;\n        }\n        try {\n            console.log(`🔍 API Request: ${url}`);\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    \"X-RapidAPI-Key\": RAPIDAPI_KEY,\n                    \"X-RapidAPI-Host\": host,\n                    \"Accept\": \"application/json\"\n                }\n            });\n            this.requestCount++;\n            if (!response.ok) {\n                throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n            }\n            const data = await response.json();\n            // Structure standardisée de réponse API-Football\n            if (data.response) {\n                return data.response;\n            }\n            // Structure alternative\n            if (data.results) {\n                return data.results;\n            }\n            return data;\n        } catch (error) {\n            console.error(`❌ API Error: ${error.message}`);\n            throw error;\n        }\n    }\n    // ⚽ IMPORT FOOTBALL 2025 SANS LIMITES\n    async importFootball2025() {\n        const stats = {\n            sport: \"football\",\n            imported: 0,\n            skipped: 0,\n            errors: 0,\n            examples: []\n        };\n        console.log(\"⚽ IMPORT FOOTBALL 2025 D\\xc9MARR\\xc9\");\n        console.log(\"\\uD83C\\uDFAF TES 11 LIGUES: Ligue 1, Premier League, La Liga, Bundesliga, Serie A, Champions League, Europa League, MLS, Saudi Pro League, Nations League, World Cup Qualifiers\");\n        const config = WORKING_SPORTS_CONFIG.football;\n        for (const [leagueName, leagueId] of Object.entries(config.leagues)){\n            try {\n                console.log(`📊 Import ${leagueName} (ID: ${leagueId})...`);\n                // Récupérer TOUS les matchs de 2025 pour cette ligue\n                const url = `${config.baseUrl}/fixtures?league=${leagueId}&season=${config.season}`;\n                const fixtures = await this.makeAPIRequest(url, config.host);\n                console.log(`   📋 ${fixtures.length} matchs trouvés pour ${leagueName} en ${config.season}`);\n                // 🆕 TRAITER TOUS LES MATCHS (PLUS DE .slice(0, 20))\n                for (const fixture of fixtures){\n                    try {\n                        const existingMatch = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.match.findFirst({\n                            where: {\n                                apiMatchId: fixture.fixture.id\n                            }\n                        });\n                        if (existingMatch) {\n                            stats.skipped++;\n                            continue;\n                        }\n                        // Créer le match en base\n                        await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.match.create({\n                            data: {\n                                apiMatchId: fixture.fixture.id,\n                                sport: \"FOOTBALL\",\n                                homeTeam: fixture.teams.home.name,\n                                awayTeam: fixture.teams.away.name,\n                                homeScore: fixture.goals.home || 0,\n                                awayScore: fixture.goals.away || 0,\n                                date: new Date(fixture.fixture.date),\n                                status: fixture.fixture.status.short === \"FT\" ? \"FINISHED\" : fixture.fixture.status.short,\n                                competition: leagueName,\n                                season: \"2025\",\n                                venue: fixture.fixture.venue?.name || \"Stadium\",\n                                referee: fixture.fixture.referee || \"Unknown\",\n                                homeTeamLogo: fixture.teams.home.logo,\n                                awayTeamLogo: fixture.teams.away.logo,\n                                details: {\n                                    fixtureId: fixture.fixture.id,\n                                    round: fixture.league.round,\n                                    halftime: fixture.score.halftime,\n                                    fulltime: fixture.score.fulltime,\n                                    extratime: fixture.score.extratime,\n                                    penalty: fixture.score.penalty\n                                }\n                            }\n                        });\n                        stats.imported++;\n                        // Ajouter un exemple\n                        if (stats.examples.length < 3) {\n                            stats.examples.push(`${fixture.teams.home.name} ${fixture.goals.home || 0}-${fixture.goals.away || 0} ${fixture.teams.away.name}`);\n                        }\n                        // Log périodique pour voir l'avancement\n                        if (stats.imported % 50 === 0) {\n                            console.log(`     ✅ ${stats.imported} matchs importés pour ${leagueName}...`);\n                        }\n                    } catch (error) {\n                        stats.errors++;\n                        console.error(`     ❌ Erreur match ${fixture.fixture.id}:`, error.message);\n                    }\n                }\n                console.log(`   ✅ ${leagueName} terminé: ${stats.imported} importés, ${stats.skipped} existants`);\n                // Pause entre ligues\n                await this.sleep(2000);\n            } catch (error) {\n                stats.errors++;\n                console.error(`❌ Erreur ${leagueName}:`, error.message);\n            }\n        }\n        console.log(`⚽ Football terminé: ${stats.imported} matchs importés`);\n        return stats;\n    }\n    // 🏀 IMPORT BASKETBALL 2025 SANS LIMITES\n    async importBasketball2025() {\n        const stats = {\n            sport: \"basketball\",\n            imported: 0,\n            skipped: 0,\n            errors: 0,\n            examples: []\n        };\n        console.log(\"\\uD83C\\uDFC0 IMPORT BASKETBALL 2025 D\\xc9MARR\\xc9\");\n        console.log(\"\\uD83C\\uDFAF TES 5 LIGUES: NBA, EuroLeague, LNB Pro A, EuroBasket, FIBA World Cup\");\n        const config = WORKING_SPORTS_CONFIG.basketball;\n        for (const [leagueName, leagueId] of Object.entries(config.leagues)){\n            try {\n                console.log(`📊 Import ${leagueName} (ID: ${leagueId})...`);\n                // URL pour récupérer tous les matchs\n                const url = `${config.baseUrl}/games?league=${leagueId}&season=${config.season}`;\n                const games = await this.makeAPIRequest(url, config.host);\n                console.log(`   📋 ${games.length} matchs trouvés pour ${leagueName}`);\n                // 🆕 TRAITER TOUS LES MATCHS (PLUS DE .slice(0, 15))\n                for (const game of games){\n                    try {\n                        const existingMatch = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.match.findFirst({\n                            where: {\n                                apiMatchId: game.id\n                            }\n                        });\n                        if (existingMatch) {\n                            stats.skipped++;\n                            continue;\n                        }\n                        await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.match.create({\n                            data: {\n                                apiMatchId: game.id,\n                                sport: \"BASKETBALL\",\n                                homeTeam: game.teams?.home?.name || \"Home Team\",\n                                awayTeam: game.teams?.away?.name || \"Away Team\",\n                                homeScore: game.scores?.home?.total || 0,\n                                awayScore: game.scores?.away?.total || 0,\n                                date: new Date(game.date),\n                                status: game.status?.short === \"FT\" || game.status?.long === \"Finished\" ? \"FINISHED\" : game.status?.short || \"SCHEDULED\",\n                                competition: leagueName,\n                                season: \"2025\",\n                                venue: game.venue || \"Arena\",\n                                details: {\n                                    gameId: game.id,\n                                    quarter1: {\n                                        home: game.scores?.home?.quarter_1 || 0,\n                                        away: game.scores?.away?.quarter_1 || 0\n                                    },\n                                    quarter2: {\n                                        home: game.scores?.home?.quarter_2 || 0,\n                                        away: game.scores?.away?.quarter_2 || 0\n                                    },\n                                    quarter3: {\n                                        home: game.scores?.home?.quarter_3 || 0,\n                                        away: game.scores?.away?.quarter_3 || 0\n                                    },\n                                    quarter4: {\n                                        home: game.scores?.home?.quarter_4 || 0,\n                                        away: game.scores?.away?.quarter_4 || 0\n                                    },\n                                    overtime: game.scores?.home?.over_time ? {\n                                        home: game.scores.home.over_time,\n                                        away: game.scores.away.over_time\n                                    } : null\n                                }\n                            }\n                        });\n                        stats.imported++;\n                        if (stats.examples.length < 3) {\n                            stats.examples.push(`${game.teams?.home?.name || \"Home\"} ${game.scores?.home?.total || 0}-${game.scores?.away?.total || 0} ${game.teams?.away?.name || \"Away\"}`);\n                        }\n                        if (stats.imported % 25 === 0) {\n                            console.log(`     ✅ ${stats.imported} matchs importés pour ${leagueName}...`);\n                        }\n                    } catch (error) {\n                        stats.errors++;\n                        console.error(`     ❌ Erreur match ${game.id}:`, error.message);\n                    }\n                }\n                console.log(`   ✅ ${leagueName} terminé: ${stats.imported} importés, ${stats.skipped} existants`);\n                await this.sleep(3000);\n            } catch (error) {\n                stats.errors++;\n                console.error(`❌ Erreur ${leagueName}:`, error.message);\n            }\n        }\n        console.log(`🏀 Basketball terminé: ${stats.imported} matchs importés`);\n        return stats;\n    }\n    // 🚀 IMPORT COMPLET 2025\n    async importAllSports2025() {\n        const startTime = Date.now();\n        console.log(\"\\uD83D\\uDE80 IMPORT COMPLET 2025 D\\xc9MARR\\xc9\");\n        console.log(\"⚽ Football: 11 comp\\xe9titions\");\n        console.log(\"\\uD83C\\uDFC0 Basketball: 5 comp\\xe9titions\");\n        console.log(\"\\uD83D\\uDCCA TOUTES LES DONN\\xc9ES (plus de limites)\");\n        try {\n            // Import en séquence pour éviter les limites de rate\n            const football = await this.importFootball2025();\n            await this.sleep(5000) // Pause entre sports\n            ;\n            const basketball = await this.importBasketball2025();\n            const total = football.imported + basketball.imported;\n            const duration = Math.round((Date.now() - startTime) / 1000);\n            console.log(`\\n🎉 IMPORT TERMINÉ en ${Math.floor(duration / 60)}min ${duration % 60}s !`);\n            console.log(`⚽ Football: ${football.imported} matchs`);\n            console.log(`🏀 Basketball: ${basketball.imported} matchs`);\n            console.log(`📊 TOTAL: ${total} événements importés`);\n            return {\n                football,\n                basketball,\n                total,\n                duration\n            };\n        } catch (error) {\n            console.error(\"❌ Erreur import global:\", error);\n            throw error;\n        }\n    }\n    // 📅 IMPORT QUOTIDIEN OPTIMISÉ\n    async importTodaysMatches() {\n        console.log(\"\\uD83D\\uDCC5 Import des matchs d'aujourd'hui...\");\n        const today = new Date().toISOString().split(\"T\")[0] // YYYY-MM-DD\n        ;\n        let totalImported = 0;\n        const sportsUpdated = [];\n        const examples = [];\n        try {\n            // Football aujourd'hui\n            const footballUrl = `${WORKING_SPORTS_CONFIG.football.baseUrl}/fixtures?date=${today}&status=FT`;\n            const footballMatches = await this.makeAPIRequest(footballUrl, WORKING_SPORTS_CONFIG.football.host);\n            for (const match of footballMatches.slice(0, 10)){\n                try {\n                    const existing = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.match.findFirst({\n                        where: {\n                            apiMatchId: match.fixture.id\n                        }\n                    });\n                    if (!existing) {\n                        await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.match.create({\n                            data: {\n                                apiMatchId: match.fixture.id,\n                                sport: \"FOOTBALL\",\n                                homeTeam: match.teams.home.name,\n                                awayTeam: match.teams.away.name,\n                                homeScore: match.goals.home || 0,\n                                awayScore: match.goals.away || 0,\n                                date: new Date(match.fixture.date),\n                                status: \"FINISHED\",\n                                competition: match.league.name,\n                                season: \"2025\",\n                                venue: match.fixture.venue?.name || \"Stadium\",\n                                homeTeamLogo: match.teams.home.logo,\n                                awayTeamLogo: match.teams.away.logo\n                            }\n                        });\n                        totalImported++;\n                        examples.push(`${match.teams.home.name} ${match.goals.home}-${match.goals.away} ${match.teams.away.name}`);\n                    }\n                } catch (error) {\n                    console.error(\"Erreur match football:\", error.message);\n                }\n            }\n            if (footballMatches.length > 0) sportsUpdated.push(\"football\");\n            console.log(`✅ Import quotidien terminé: ${totalImported} nouveaux matchs`);\n            return {\n                imported: totalImported,\n                sports: sportsUpdated,\n                examples: examples.slice(0, 3)\n            };\n        } catch (error) {\n            console.error(\"❌ Erreur import quotidien:\", error);\n            return {\n                imported: 0,\n                sports: [],\n                examples: []\n            };\n        }\n    }\n    // 🔍 TEST DE CONNEXION API\n    async testAPIConnection() {\n        console.log(\"\\uD83D\\uDD0D Test de connexion aux APIs...\");\n        const results = {\n            football: false,\n            basketball: false,\n            details: {\n                football: null,\n                basketball: null\n            }\n        };\n        try {\n            // Test API Football\n            const footballUrl = `${WORKING_SPORTS_CONFIG.football.baseUrl}/leagues?current=true`;\n            const footballData = await this.makeAPIRequest(footballUrl, WORKING_SPORTS_CONFIG.football.host);\n            if (footballData && footballData.length > 0) {\n                results.football = true;\n                results.details.football = {\n                    status: \"OK\",\n                    leagues: footballData.length,\n                    example: footballData[0]?.league?.name\n                };\n                console.log(\"✅ API Football connect\\xe9e\");\n            }\n        } catch (error) {\n            results.details.football = {\n                status: \"ERROR\",\n                error: error.message\n            };\n            console.log(\"❌ API Football non disponible:\", error.message);\n        }\n        try {\n            // Test API Basketball\n            const basketballUrl = `${WORKING_SPORTS_CONFIG.basketball.baseUrl}/leagues`;\n            const basketballData = await this.makeAPIRequest(basketballUrl, WORKING_SPORTS_CONFIG.basketball.host);\n            if (basketballData && basketballData.length > 0) {\n                results.basketball = true;\n                results.details.basketball = {\n                    status: \"OK\",\n                    leagues: basketballData.length,\n                    example: basketballData[0]?.name\n                };\n                console.log(\"✅ API Basketball connect\\xe9e\");\n            }\n        } catch (error) {\n            results.details.basketball = {\n                status: \"ERROR\",\n                error: error.message\n            };\n            console.log(\"❌ API Basketball non disponible:\", error.message);\n        }\n        return results;\n    }\n    async sleep(ms) {\n        return new Promise((resolve)=>setTimeout(resolve, ms));\n    }\n    constructor(){\n        this.requestCount = 0;\n        this.MAX_REQUESTS_PER_MINUTE = 50;\n    }\n}\nconst workingSportsAPI = new WorkingSportsAPI();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/working-sports-api.ts\n");

/***/ }),

/***/ "(api)/./pages/api/import-sports-2025.ts":
/*!*****************************************!*\
  !*** ./pages/api/import-sports-2025.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/next */ \"next-auth/next\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_next__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/auth */ \"(api)/./lib/auth.ts\");\n/* harmony import */ var _lib_working_sports_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/working-sports-api */ \"(api)/./lib/working-sports-api.ts\");\n// pages/api/import-sports-2025.ts\n// Endpoint principal pour import des données sportives 2025\n\n\n\nasync function handler(req, res) {\n    const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_0__.getServerSession)(req, res, _lib_auth__WEBPACK_IMPORTED_MODULE_1__.authOptions);\n    if (!session?.user?.id) {\n        return res.status(401).json({\n            error: \"Connexion requise\"\n        });\n    }\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    const { action = \"import_all\", sport } = req.body;\n    try {\n        console.log(`🚀 Import Sports 2025: ${action}`);\n        if (action === \"test_connection\") {\n            // 🔍 TESTER LA CONNEXION AUX APIS\n            console.log(\"\\uD83D\\uDD0D Test de connexion aux APIs...\");\n            const connectionTest = await _lib_working_sports_api__WEBPACK_IMPORTED_MODULE_2__.workingSportsAPI.testAPIConnection();\n            return res.status(200).json({\n                success: true,\n                action: \"test_connection\",\n                results: connectionTest,\n                message: connectionTest.football && connectionTest.basketball ? \"✅ Toutes les APIs sont connect\\xe9es !\" : connectionTest.football || connectionTest.basketball ? \"⚠️ Certaines APIs sont disponibles\" : \"❌ Aucune API n'est disponible\",\n                recommendations: {\n                    football: connectionTest.football ? \"✅ API Football OK - Pr\\xeat pour import\" : \"❌ V\\xe9rifiez votre RAPIDAPI_KEY et les permissions\",\n                    basketball: connectionTest.basketball ? \"✅ API Basketball OK - Pr\\xeat pour import\" : \"❌ V\\xe9rifiez votre RAPIDAPI_KEY et les permissions\"\n                }\n            });\n        }\n        if (action === \"import_all\") {\n            // 🌍 IMPORT COMPLET FOOTBALL + BASKETBALL 2025\n            console.log(\"\\uD83C\\uDFC6 IMPORT COMPLET 2025 : Football + Basketball\");\n            console.log(\"\\uD83D\\uDCC5 Donn\\xe9es saison 2024-2025 avec vraies APIs\");\n            const result = await _lib_working_sports_api__WEBPACK_IMPORTED_MODULE_2__.workingSportsAPI.importAllSports2025();\n            return res.status(200).json({\n                success: true,\n                action: \"import_all\",\n                message: \"\\uD83C\\uDF89 IMPORT COMPLET TERMIN\\xc9 !\",\n                result,\n                summary: {\n                    duration: `${result.duration}s`,\n                    total: `${result.total} événements importés`,\n                    football: `⚽ ${result.football.imported} matchs (${result.football.examples.join(\", \")})`,\n                    basketball: `🏀 ${result.basketball.imported} matchs (${result.basketball.examples.join(\", \")})`\n                },\n                stats: {\n                    football: {\n                        imported: result.football.imported,\n                        skipped: result.football.skipped,\n                        errors: result.football.errors,\n                        examples: result.football.examples\n                    },\n                    basketball: {\n                        imported: result.basketball.imported,\n                        skipped: result.basketball.skipped,\n                        errors: result.basketball.errors,\n                        examples: result.basketball.examples\n                    }\n                },\n                period: \"2024-2025\",\n                note: \"Donn\\xe9es r\\xe9elles import\\xe9es avec succ\\xe8s ! Actualisez la page d'accueil.\"\n            });\n        }\n        if (action === \"import_sport\" && sport) {\n            // Import d'un sport spécifique\n            let result;\n            let sportName = \"\";\n            switch(sport){\n                case \"football\":\n                    result = await _lib_working_sports_api__WEBPACK_IMPORTED_MODULE_2__.workingSportsAPI.importFootball2025();\n                    sportName = \"⚽ Football\";\n                    break;\n                case \"basketball\":\n                    result = await _lib_working_sports_api__WEBPACK_IMPORTED_MODULE_2__.workingSportsAPI.importBasketball2025();\n                    sportName = \"\\uD83C\\uDFC0 Basketball\";\n                    break;\n                default:\n                    return res.status(400).json({\n                        error: \"Sport non support\\xe9\",\n                        availableSports: [\n                            \"football\",\n                            \"basketball\"\n                        ]\n                    });\n            }\n            return res.status(200).json({\n                success: true,\n                action: \"import_sport\",\n                sport: sportName,\n                imported: result.imported,\n                skipped: result.skipped,\n                errors: result.errors,\n                examples: result.examples,\n                message: `${sportName} : ${result.imported} événements importés`,\n                period: \"2024-2025\"\n            });\n        }\n        if (action === \"import_daily\") {\n            // 📅 Import quotidien des matchs d'aujourd'hui\n            console.log(\"\\uD83D\\uDCC5 Import quotidien des matchs termin\\xe9s aujourd'hui...\");\n            const result = await _lib_working_sports_api__WEBPACK_IMPORTED_MODULE_2__.workingSportsAPI.importTodaysMatches();\n            return res.status(200).json({\n                success: true,\n                action: \"import_daily\",\n                imported: result.imported,\n                sports: result.sports,\n                examples: result.examples,\n                message: `📅 ${result.imported} nouveaux matchs d'aujourd'hui`,\n                period: \"Aujourd'hui\"\n            });\n        }\n        return res.status(400).json({\n            error: \"Action inconnue\",\n            availableActions: [\n                \"test_connection\",\n                \"import_all\",\n                \"import_sport\",\n                \"import_daily\"\n            ],\n            availableSports: [\n                \"football\",\n                \"basketball\"\n            ]\n        });\n    } catch (error) {\n        console.error(\"❌ Erreur import sports 2025:\", error);\n        // Diagnostic d'erreur détaillé\n        let errorMessage = \"Erreur inconnue\";\n        let troubleshooting = [];\n        if (error.message.includes(\"fetch\")) {\n            errorMessage = \"Erreur de connexion \\xe0 l'API\";\n            troubleshooting = [\n                \"V\\xe9rifiez votre connexion internet\",\n                \"V\\xe9rifiez que RAPIDAPI_KEY est d\\xe9finie dans .env\",\n                \"V\\xe9rifiez que vous avez un abonnement RapidAPI actif\"\n            ];\n        } else if (error.message.includes(\"429\")) {\n            errorMessage = \"Quota API d\\xe9pass\\xe9\";\n            troubleshooting = [\n                \"Attendez 1 minute et r\\xe9essayez\",\n                \"V\\xe9rifiez vos quotas sur RapidAPI\",\n                \"Consid\\xe9rez upgrader votre plan RapidAPI\"\n            ];\n        } else if (error.message.includes(\"401\")) {\n            errorMessage = \"Cl\\xe9 API invalide\";\n            troubleshooting = [\n                \"V\\xe9rifiez votre RAPIDAPI_KEY dans .env\",\n                \"Assurez-vous d'\\xeatre abonn\\xe9 aux APIs sur RapidAPI\",\n                \"R\\xe9g\\xe9n\\xe9rez votre cl\\xe9 si n\\xe9cessaire\"\n            ];\n        }\n        res.status(500).json({\n            success: false,\n            error: errorMessage,\n            originalError: error.message,\n            action,\n            troubleshooting,\n            help: {\n                rapidapi: \"Visitez https://rapidapi.com pour g\\xe9rer vos abonnements\",\n                apis: [\n                    \"API-Football: https://rapidapi.com/api-sports/api/api-football\",\n                    \"API-Basketball: https://rapidapi.com/api-sports/api/api-basketball\"\n                ]\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/import-sports-2025.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fimport-sports-2025&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fimport-sports-2025.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();