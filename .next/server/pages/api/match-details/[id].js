"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/match-details/[id]";
exports.ids = ["pages/api/match-details/[id]"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmatch-details%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fmatch-details%2F%5Bid%5D.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmatch-details%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fmatch-details%2F%5Bid%5D.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_match_details_id_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/match-details/[id].ts */ \"(api)/./pages/api/match-details/[id].ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_match_details_id_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_match_details_id_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/match-details/[id]\",\n        pathname: \"/api/match-details/[id]\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_match_details_id_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRm1hdGNoLWRldGFpbHMlMkYlNUJpZCU1RCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGbWF0Y2gtZGV0YWlscyUyRiU1QmlkJTVELnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQzhEO0FBQzlEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQywyREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsMkRBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZm9vdHJhdGUvPzFiYjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9tYXRjaC1kZXRhaWxzL1tpZF0udHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9tYXRjaC1kZXRhaWxzL1tpZF1cIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9tYXRjaC1kZXRhaWxzL1tpZF1cIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmatch-details%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fmatch-details%2F%5Bid%5D.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/basketball-api.ts":
/*!*******************************!*\
  !*** ./lib/basketball-api.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BASKETBALL_LEAGUES: () => (/* binding */ BASKETBALL_LEAGUES),\n/* harmony export */   basketballAPI: () => (/* binding */ basketballAPI),\n/* harmony export */   calculatePlayerEfficiency: () => (/* binding */ calculatePlayerEfficiency),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   formatBasketballScore: () => (/* binding */ formatBasketballScore),\n/* harmony export */   getBasketballGameStatus: () => (/* binding */ getBasketballGameStatus)\n/* harmony export */ });\n// lib/basketball-api.ts - Service API Basketball NBA\nconst RAPIDAPI_KEY = process.env.RAPIDAPI_KEY;\nconst BASKETBALL_API_HOST = \"api-basketball.p.rapidapi.com\";\n// üèÄ LIGUES BASKETBALL PRINCIPALES\nconst BASKETBALL_LEAGUES = {\n    NBA: 12,\n    EUROLEAGUE: 120\n};\n// üèÄ CLASSE SERVICE API BASKETBALL\nclass BasketballAPIService {\n    async makeRequest(endpoint) {\n        if (!RAPIDAPI_KEY) {\n            throw new Error(\"RAPIDAPI_KEY non configur\\xe9e\");\n        }\n        if (this.quotaUsed >= this.dailyLimit) {\n            throw new Error(\"Quota quotidien API Basketball d\\xe9pass\\xe9\");\n        }\n        try {\n            console.log(`üèÄ API Basketball: ${endpoint}`);\n            const response = await fetch(`https://${BASKETBALL_API_HOST}${endpoint}`, {\n                headers: {\n                    \"X-RapidAPI-Key\": RAPIDAPI_KEY,\n                    \"X-RapidAPI-Host\": BASKETBALL_API_HOST\n                }\n            });\n            this.quotaUsed++;\n            if (!response.ok) {\n                throw new Error(`API Basketball Error: ${response.status}`);\n            }\n            const data = await response.json();\n            console.log(`‚úÖ API Basketball: ${data.response?.length || 0} r√©sultats`);\n            return data.response || [];\n        } catch (error) {\n            console.error(\"‚ùå Erreur API Basketball:\", error);\n            throw error;\n        }\n    }\n    // üèÄ R√âCUP√âRER D√âTAILS COMPLETS D'UN MATCH\n    async getMatchDetails(gameId) {\n        const [gameData, statistics, players] = await Promise.all([\n            this.makeRequest(`/games?id=${gameId}`),\n            this.makeRequest(`/games/statistics/teams?game=${gameId}`),\n            this.makeRequest(`/games/statistics/players?game=${gameId}`)\n        ]);\n        return {\n            game: gameData[0] || null,\n            statistics: statistics || [],\n            players: players || []\n        };\n    }\n    // üèÄ R√âCUP√âRER MATCHS NBA DU JOUR\n    async getTodaysNBAGames() {\n        const today = new Date().toISOString().split(\"T\")[0];\n        return this.makeRequest(`/games?league=${BASKETBALL_LEAGUES.NBA}&season=2024-2025&date=${today}`);\n    }\n    // üèÄ R√âCUP√âRER MATCHS NBA R√âCENTS TERMIN√âS\n    async getFinishedNBAGames(days = 7) {\n        const matches = [];\n        for(let i = 0; i < days; i++){\n            const date = new Date();\n            date.setDate(date.getDate() - i);\n            const dateStr = date.toISOString().split(\"T\")[0];\n            try {\n                const dayMatches = await this.makeRequest(`/games?league=${BASKETBALL_LEAGUES.NBA}&season=2024-2025&date=${dateStr}`);\n                // Filtrer seulement les matchs termin√©s\n                const finishedMatches = dayMatches.filter((match)=>match.status.short === \"FT\" || match.status.long.includes(\"Finished\"));\n                matches.push(...finishedMatches);\n                // Pause pour √©viter le rate limiting\n                await new Promise((resolve)=>setTimeout(resolve, 100));\n            } catch (error) {\n                console.error(`‚ùå Erreur r√©cup√©ration matchs ${dateStr}:`, error);\n            }\n        }\n        return matches;\n    }\n    // üèÄ R√âCUP√âRER QUOTA RESTANT\n    getQuotaStatus() {\n        return {\n            used: this.quotaUsed,\n            remaining: this.dailyLimit - this.quotaUsed,\n            limit: this.dailyLimit,\n            percentage: Math.round(this.quotaUsed / this.dailyLimit * 100)\n        };\n    }\n    // üèÄ RESET QUOTA (√† appeler chaque jour)\n    resetQuota() {\n        this.quotaUsed = 0;\n        console.log(\"\\uD83D\\uDD04 Quota API Basketball r\\xe9initialis\\xe9\");\n    }\n    // üèÄ V√âRIFIER SANT√â DE L'API\n    async healthCheck() {\n        try {\n            await this.makeRequest(\"/status\");\n            return true;\n        } catch (error) {\n            console.error(\"‚ùå API Basketball inaccessible:\", error);\n            return false;\n        }\n    }\n    constructor(){\n        this.quotaUsed = 0;\n        this.dailyLimit = 100 // Limite quotidienne\n        ;\n    }\n}\n// üèÄ EXPORT SINGLETON\nconst basketballAPI = new BasketballAPIService();\n// üèÄ FONCTIONS UTILITAIRES\nfunction formatBasketballScore(homeScore, awayScore) {\n    return `${homeScore} - ${awayScore}`;\n}\nfunction getBasketballGameStatus(status) {\n    const statusMap = {\n        \"FT\": \"Termin\\xe9\",\n        \"Q1\": \"1er quart-temps\",\n        \"Q2\": \"2\\xe8me quart-temps\",\n        \"Q3\": \"3\\xe8me quart-temps\",\n        \"Q4\": \"4\\xe8me quart-temps\",\n        \"OT\": \"Prolongation\",\n        \"LIVE\": \"En cours\",\n        \"HT\": \"Mi-temps\",\n        \"NS\": \"Pas commenc\\xe9\"\n    };\n    return statusMap[status] || status;\n}\nfunction calculatePlayerEfficiency(stats) {\n    if (!stats) return 0;\n    const { points = 0, assists = 0, totReb = 0, steals = 0, blocks = 0, turnovers = 0, fgm = 0, fga = 0, ftm = 0, fta = 0 } = stats;\n    // Formule d'efficacit√© NBA simplifi√©e\n    return points + assists + totReb + steals + blocks - turnovers - (fga - fgm) - (fta - ftm);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (basketballAPI);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/basketball-api.ts\n");

/***/ }),

/***/ "(api)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUU3QyxNQUFNQyxrQkFBa0JDO0FBSWpCLE1BQU1DLFNBQVNGLGdCQUFnQkUsTUFBTSxJQUFJLElBQUlILHdEQUFZQSxHQUFFO0FBRWxFLElBQUlJLElBQXlCLEVBQWNILGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zvb3RyYXRlLy4vbGliL3ByaXNtYS50cz85ODIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50J1xuXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWxUaGlzIGFzIHVua25vd24gYXMge1xuICBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxufVxuXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/PyBuZXcgUHJpc21hQ2xpZW50KClcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWFcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwicHJpc21hIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/prisma.ts\n");

/***/ }),

/***/ "(api)/./pages/api/match-details/[id].ts":
/*!*****************************************!*\
  !*** ./pages/api/match-details/[id].ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/prisma */ \"(api)/./lib/prisma.ts\");\n/* harmony import */ var _lib_basketball_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/basketball-api */ \"(api)/./lib/basketball-api.ts\");\n// pages/api/match-details/[id].ts - VERSION COMPL√àTE AVEC BASKETBALL R√âEL\n\n\nconst RAPIDAPI_KEY = process.env.RAPIDAPI_KEY;\nconst RAPIDAPI_HOST = process.env.RAPIDAPI_HOST;\nasync function handler(req, res) {\n    const { id } = req.query;\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        console.log(`üîç R√©cup√©ration d√©tails complets pour match ${id}...`);\n        // 1. R√©cup√©rer le match de la DB avec son sport\n        const match = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.match.findUnique({\n            where: {\n                id: id\n            },\n            include: {\n                ratings: {\n                    include: {\n                        user: {\n                            select: {\n                                id: true,\n                                name: true,\n                                username: true,\n                                image: true\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        if (!match) {\n            return res.status(404).json({\n                error: \"Match non trouv\\xe9\"\n            });\n        }\n        console.log(`üèÜ Sport d√©tect√©: ${match.sport}`);\n        // 2. R√©cup√©rer les d√©tails selon le sport\n        let detailedData = {};\n        if (match.sport === \"FOOTBALL\") {\n            detailedData = await fetchFootballMatchData(match.apiMatchId);\n        } else if (match.sport === \"BASKETBALL\") {\n            detailedData = await fetchBasketballMatchData(match.apiMatchId, match.details);\n        } else {\n            // Pour les autres sports, donn√©es basiques\n            detailedData = await fetchBasicMatchData(match);\n        }\n        // 3. Combiner tout avec les bonnes donn√©es\n        const completeMatchData = {\n            match: {\n                id: match.id,\n                sport: match.sport,\n                homeTeam: match.homeTeam,\n                awayTeam: match.awayTeam,\n                homeScore: match.homeScore || 0,\n                awayScore: match.awayScore || 0,\n                date: match.date.toISOString(),\n                venue: match.venue || \"N/A\",\n                referee: detailedData.referee || match.referee || \"N/A\",\n                attendance: detailedData.attendance,\n                weather: detailedData.weather,\n                competition: match.competition,\n                homeTeamLogo: match.homeTeamLogo,\n                awayTeamLogo: match.awayTeamLogo,\n                details: match.details // D√©tails sp√©cifiques stock√©s en DB\n            },\n            events: detailedData.events || [],\n            lineups: detailedData.lineups || getEmptyLineups(match.sport),\n            statistics: detailedData.statistics || {}\n        };\n        res.status(200).json({\n            success: true,\n            data: completeMatchData,\n            ratings: match.ratings,\n            avgRating: match.avgRating,\n            totalRatings: match.totalRatings\n        });\n    } catch (error) {\n        console.error(\"‚ùå Erreur d\\xe9tails match:\", error);\n        res.status(500).json({\n            success: false,\n            error: \"Failed to fetch match details\",\n            message: error instanceof Error ? error.message : \"Unknown error\"\n        });\n    }\n}\n// üÜï R√âCUP√âRATION DONN√âES FOOTBALL (existant - INCHANG√â)\nasync function fetchFootballMatchData(apiMatchId) {\n    try {\n        console.log(`‚öΩ R√©cup√©ration donn√©es football pour match ${apiMatchId}...`);\n        const [fixtureData, eventsData, lineupsData, statisticsData] = await Promise.all([\n            fetchFromAPI(`/v3/fixtures?id=${apiMatchId}`),\n            fetchFromAPI(`/v3/fixtures/events?fixture=${apiMatchId}`),\n            fetchFromAPI(`/v3/fixtures/lineups?fixture=${apiMatchId}`),\n            fetchFromAPI(`/v3/fixtures/statistics?fixture=${apiMatchId}`)\n        ]);\n        return {\n            referee: fixtureData?.[0]?.fixture?.referee,\n            attendance: fixtureData?.[0]?.fixture?.status?.attendance,\n            weather: fixtureData?.[0]?.fixture?.weather,\n            events: formatFootballEvents(eventsData || []),\n            lineups: formatFootballLineups(lineupsData || []),\n            statistics: formatFootballStatistics(statisticsData || [])\n        };\n    } catch (error) {\n        console.error(\"‚ùå Erreur API Football:\", error);\n        return {};\n    }\n}\n// üÜï R√âCUP√âRATION DONN√âES BASKETBALL AVEC VRAIES DONN√âES\nasync function fetchBasketballMatchData(apiMatchId, storedDetails) {\n    try {\n        console.log(`üèÄ R√©cup√©ration donn√©es basketball pour match ${apiMatchId}...`);\n        // üÜï PRIORIT√â AUX VRAIES DONN√âES API BASKETBALL\n        if (RAPIDAPI_KEY) {\n            try {\n                console.log(\"\\uD83D\\uDD0D Tentative r\\xe9cup\\xe9ration donn\\xe9es NBA r\\xe9elles...\");\n                const realData = await fetchRealBasketballMatchData(apiMatchId);\n                console.log(\"‚úÖ Donn\\xe9es NBA r\\xe9elles r\\xe9cup\\xe9r\\xe9es avec succ\\xe8s\");\n                return realData;\n            } catch (error) {\n                console.log(\"‚ö†Ô∏è \\xc9chec API Basketball, fallback vers donn\\xe9es stock\\xe9es\");\n                console.error(\"D\\xe9tail erreur API:\", error);\n            }\n        }\n        // Fallback vers donn√©es stock√©es en base\n        if (storedDetails) {\n            console.log(\"\\uD83D\\uDCC2 Utilisation des donn\\xe9es stock\\xe9es en base\");\n            return {\n                referee: storedDetails.referee || \"Arbitre NBA\",\n                attendance: storedDetails.attendance,\n                events: formatBasketballEvents(storedDetails.events || []),\n                lineups: formatBasketballLineups(storedDetails.lineups || []),\n                statistics: formatBasketballStatistics(storedDetails.statistics || {}),\n                details: storedDetails\n            };\n        }\n        // Dernier fallback vers donn√©es g√©n√©r√©es\n        console.log(\"\\uD83D\\uDCDD G\\xe9n\\xe9ration de donn\\xe9es basketball basiques\");\n        return generateBasicBasketballData();\n    } catch (error) {\n        console.error(\"‚ùå Erreur compl\\xe8te API Basketball:\", error);\n        return generateBasicBasketballData();\n    }\n}\n// üèÄ R√âCUP√âRATION DONN√âES NBA R√âELLES via API Basketball\nasync function fetchRealBasketballMatchData(apiMatchId) {\n    try {\n        console.log(`üèÄ R√©cup√©ration donn√©es NBA r√©elles pour match ${apiMatchId}...`);\n        // Utiliser le service Basketball API\n        const matchDetails = await _lib_basketball_api__WEBPACK_IMPORTED_MODULE_1__.basketballAPI.getMatchDetails(apiMatchId);\n        if (!matchDetails.game) {\n            throw new Error(\"Aucune donn\\xe9e de match trouv\\xe9e\");\n        }\n        console.log(`üìä Donn√©es re√ßues:`, {\n            game: matchDetails.game ? \"OK\" : \"MANQUANT\",\n            players: matchDetails.players?.length || 0,\n            stats: matchDetails.statistics?.length || 0\n        });\n        return {\n            referee: matchDetails.game.officials?.[0] || \"Arbitre NBA\",\n            attendance: matchDetails.game.attendance,\n            events: formatRealBasketballEvents(matchDetails.game),\n            lineups: formatRealBasketballLineups(matchDetails.players),\n            statistics: formatRealBasketballStatistics(matchDetails.statistics),\n            details: extractBasketballQuarters(matchDetails.game)\n        };\n    } catch (error) {\n        console.error(\"‚ùå Erreur API Basketball r\\xe9elle:\", error);\n        throw error;\n    }\n}\n// üèÄ FORMATAGE DES LINEUPS NBA R√âELLES\nfunction formatRealBasketballLineups(playersData) {\n    if (!playersData || playersData.length === 0) {\n        console.log(\"‚ö†Ô∏è Aucune donn\\xe9e joueur, g\\xe9n\\xe9ration lineup basique\");\n        return generateBasketballLineups();\n    }\n    console.log(`üë• Formatage ${playersData.length} joueurs NBA`);\n    // Grouper les joueurs par √©quipe\n    const teams = playersData.reduce((acc, playerData)=>{\n        const teamName = playerData.team?.name || \"Unknown\";\n        if (!acc[teamName]) acc[teamName] = [];\n        acc[teamName].push(playerData);\n        return acc;\n    }, {});\n    const teamNames = Object.keys(teams);\n    if (teamNames.length < 2) {\n        console.log(\"‚ö†Ô∏è Moins de 2 \\xe9quipes trouv\\xe9es, g\\xe9n\\xe9ration lineup basique\");\n        return generateBasketballLineups();\n    }\n    const formatTeamPlayers = (teamPlayers)=>{\n        // Trier par minutes jou√©es pour identifier les titulaires\n        const sortedPlayers = teamPlayers.sort((a, b)=>{\n            const aMinutes = parseMinutes(a.statistics?.minutes || \"0:00\");\n            const bMinutes = parseMinutes(b.statistics?.minutes || \"0:00\");\n            return bMinutes - aMinutes;\n        });\n        // Les 5 premiers avec le plus de minutes = titulaires\n        const starters = sortedPlayers.slice(0, 5).map(formatNBAPlayer);\n        // Le reste = rempla√ßants\n        const substitutes = sortedPlayers.slice(5).map(formatNBAPlayer);\n        return {\n            formation: \"Starting 5\",\n            startXI: starters,\n            substitutes: substitutes,\n            coach: teamPlayers[0]?.team?.coach || \"Coach NBA\"\n        };\n    };\n    return {\n        home: formatTeamPlayers(teams[teamNames[0]]),\n        away: formatTeamPlayers(teams[teamNames[1]])\n    };\n}\n// üèÄ FORMATAGE D'UN JOUEUR NBA R√âEL\nfunction formatNBAPlayer(playerData) {\n    const player = playerData.player || {};\n    const stats = playerData.statistics || {};\n    const formattedPlayer = {\n        player: {\n            id: player.id || Math.random(),\n            name: `${player.firstname || \"\"} ${player.lastname || \"\"}`.trim() || \"Joueur NBA\",\n            firstname: player.firstname || \"\",\n            lastname: player.lastname || \"\"\n        },\n        number: player.number || Math.floor(Math.random() * 99) + 1,\n        position: normalizeBasketballPosition(player.position || \"G\"),\n        // üèÄ STATS R√âELLES NBA\n        points: stats.points || 0,\n        rebounds: (stats.totReb || stats.defReb || 0) + (stats.offReb || 0),\n        assists: stats.assists || 0,\n        steals: stats.steals || 0,\n        blocks: stats.blocks || 0,\n        turnovers: stats.turnovers || 0,\n        minutes: stats.minutes || \"0:00\",\n        // Stats de tir\n        fieldGoals: stats.fgm && stats.fga ? `${stats.fgm}/${stats.fga}` : \"0/0\",\n        threePointers: stats.tpm && stats.tpa ? `${stats.tpm}/${stats.tpa}` : \"0/0\",\n        freeThrows: stats.ftm && stats.fta ? `${stats.ftm}/${stats.fta}` : \"0/0\",\n        // Pourcentages\n        fieldGoalPct: stats.fgp ? `${stats.fgp}%` : \"0%\",\n        threePointPct: stats.tpp ? `${stats.tpp}%` : \"0%\",\n        freeThrowPct: stats.ftp ? `${stats.ftp}%` : \"0%\"\n    };\n    console.log(`üë§ Joueur format√©: ${formattedPlayer.player.name} - ${formattedPlayer.points}pts, ${formattedPlayer.rebounds}reb, ${formattedPlayer.assists}ast`);\n    return formattedPlayer;\n}\n// üèÄ NORMALISATION DES POSITIONS NBA\nfunction normalizeBasketballPosition(position) {\n    if (!position) return \"G\";\n    const pos = position.toString().toUpperCase();\n    const positionMap = {\n        \"POINT_GUARD\": \"PG\",\n        \"POINT GUARD\": \"PG\",\n        \"SHOOTING_GUARD\": \"SG\",\n        \"SHOOTING GUARD\": \"SG\",\n        \"SMALL_FORWARD\": \"SF\",\n        \"SMALL FORWARD\": \"SF\",\n        \"POWER_FORWARD\": \"PF\",\n        \"POWER FORWARD\": \"PF\",\n        \"CENTER\": \"C\",\n        \"CENTRE\": \"C\",\n        \"GUARD\": \"G\",\n        \"FORWARD\": \"F\"\n    };\n    return positionMap[pos] || pos.substring(0, 2) || \"G\";\n}\n// üèÄ CONVERSION MINUTES (MM:SS vers nombre)\nfunction parseMinutes(minutesStr) {\n    if (!minutesStr) return 0;\n    const parts = minutesStr.toString().split(\":\");\n    if (parts.length === 2) {\n        return parseInt(parts[0]) + parseInt(parts[1]) / 60;\n    }\n    return parseInt(minutesStr) || 0;\n}\n// üèÄ FORMATAGE DES √âV√âNEMENTS BASKETBALL R√âELS\nfunction formatRealBasketballEvents(gameData) {\n    const events = [];\n    // Extraire les √©v√©nements du match si disponibles\n    if (gameData.plays && Array.isArray(gameData.plays)) {\n        gameData.plays.forEach((play)=>{\n            events.push({\n                minute: play.clock || play.time || 0,\n                type: getBasketballEventType(play.type),\n                team: play.team?.name || \"N/A\",\n                player: play.player?.name || \"N/A\",\n                detail: play.description || \"\",\n                points: getPointsFromPlay(play)\n            });\n        });\n    }\n    // Si pas d'√©v√©nements, cr√©er quelques √©v√©nements basiques\n    if (events.length === 0) {\n        events.push({\n            minute: 12,\n            type: \"BASKET\",\n            team: \"Home\",\n            player: \"Player 1\",\n            points: 3,\n            detail: \"3-pointer\"\n        }, {\n            minute: 15,\n            type: \"FOUL\",\n            team: \"Away\",\n            player: \"Player 2\",\n            detail: \"Personal foul\"\n        }, {\n            minute: 24,\n            type: \"TIMEOUT\",\n            team: \"Home\",\n            player: \"Coach\",\n            detail: \"Full timeout\"\n        });\n    }\n    return events.sort((a, b)=>a.minute - b.minute);\n}\n// üèÄ EXTRACTION DES SCORES PAR QUART-TEMPS\nfunction extractBasketballQuarters(gameData) {\n    const scores = gameData.scores || {};\n    return {\n        quarter1: {\n            home: scores.home?.quarter_1 || null,\n            away: scores.away?.quarter_1 || null\n        },\n        quarter2: {\n            home: scores.home?.quarter_2 || null,\n            away: scores.away?.quarter_2 || null\n        },\n        quarter3: {\n            home: scores.home?.quarter_3 || null,\n            away: scores.away?.quarter_3 || null\n        },\n        quarter4: {\n            home: scores.home?.quarter_4 || null,\n            away: scores.away?.quarter_4 || null\n        },\n        overtime: scores.home?.over_time || scores.away?.over_time ? {\n            home: scores.home?.over_time || null,\n            away: scores.away?.over_time || null\n        } : null\n    };\n}\n// üèÄ FORMATAGE DES STATISTIQUES D'√âQUIPES NBA\nfunction formatRealBasketballStatistics(statisticsData) {\n    if (!statisticsData || statisticsData.length < 2) {\n        return {\n            home: generateBasketballStats(),\n            away: generateBasketballStats()\n        };\n    }\n    const homeStats = statisticsData[0]?.statistics || {};\n    const awayStats = statisticsData[1]?.statistics || {};\n    const formatTeamStats = (stats)=>{\n        return {\n            \"Field Goals Made\": stats.fgm || 0,\n            \"Field Goals Attempted\": stats.fga || 0,\n            \"Field Goal Percentage\": stats.fgp ? `${stats.fgp}%` : \"0%\",\n            \"Three Pointers Made\": stats.tpm || 0,\n            \"Three Pointers Attempted\": stats.tpa || 0,\n            \"Three Point Percentage\": stats.tpp ? `${stats.tpp}%` : \"0%\",\n            \"Free Throws Made\": stats.ftm || 0,\n            \"Free Throws Attempted\": stats.fta || 0,\n            \"Free Throw Percentage\": stats.ftp ? `${stats.ftp}%` : \"0%\",\n            \"Rebounds\": (stats.totReb || 0) + (stats.offReb || 0) + (stats.defReb || 0),\n            \"Assists\": stats.assists || 0,\n            \"Steals\": stats.steals || 0,\n            \"Blocks\": stats.blocks || 0,\n            \"Turnovers\": stats.turnovers || 0,\n            \"Points in Paint\": stats.pointsInPaint || 0,\n            \"Fast Break Points\": stats.fastBreakPoints || 0\n        };\n    };\n    return {\n        home: formatTeamStats(homeStats),\n        away: formatTeamStats(awayStats)\n    };\n}\n// üèÄ FONCTIONS UTILITAIRES SUPPL√âMENTAIRES\nfunction getPointsFromPlay(play) {\n    if (play.type === \"field_goal\" || play.type === \"basket\") {\n        if (play.description?.includes(\"3\")) return 3;\n        return 2;\n    }\n    if (play.type === \"free_throw\") return 1;\n    return undefined;\n}\nfunction getBasketballEventType(apiType) {\n    if (apiType === \"basket\" || apiType === \"field_goal\") return \"BASKET\";\n    if (apiType === \"foul\") return \"FOUL\";\n    if (apiType === \"timeout\") return \"TIMEOUT\";\n    if (apiType === \"substitution\") return \"SUBSTITUTION\";\n    if (apiType === \"free_throw\") return \"FREE_THROW\";\n    return \"OTHER\";\n}\n// üÜï DONN√âES BASIQUES POUR AUTRES SPORTS\nasync function fetchBasicMatchData(match) {\n    return {\n        referee: match.referee || \"Officiel\",\n        attendance: null,\n        events: [],\n        lineups: getEmptyLineups(match.sport),\n        statistics: {}\n    };\n}\n// Requ√™te √† l'API Football (existant - INCHANG√â)\nasync function fetchFromAPI(endpoint) {\n    try {\n        const response = await fetch(`https://${RAPIDAPI_HOST}${endpoint}`, {\n            headers: {\n                \"X-RapidAPI-Key\": RAPIDAPI_KEY,\n                \"X-RapidAPI-Host\": RAPIDAPI_HOST\n            }\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP ${response.status}`);\n        }\n        const data = await response.json();\n        return data.response || [];\n    } catch (error) {\n        console.error(`‚ùå Erreur ${endpoint}:`, error);\n        return [];\n    }\n}\n// Formater les √©v√©nements FOOTBALL (existant - INCHANG√â)\nfunction formatFootballEvents(events) {\n    return events.map((event)=>({\n            minute: event.time?.elapsed || 0,\n            type: getFootballEventType(event.type),\n            team: event.team?.name || \"N/A\",\n            player: event.player?.name || \"N/A\",\n            detail: event.detail || \"\",\n            assist: event.assist?.name || undefined\n        })).sort((a, b)=>a.minute - b.minute);\n}\nfunction getFootballEventType(apiType) {\n    if (apiType === \"Goal\") return \"GOAL\";\n    if (apiType === \"Card\") return \"CARD\";\n    if (apiType === \"subst\") return \"SUBSTITUTION\";\n    return \"OTHER\";\n}\n// Formater les compositions FOOTBALL (existant - INCHANG√â)\nfunction formatFootballLineups(lineups) {\n    if (lineups.length < 2) return getEmptyLineups(\"FOOTBALL\");\n    const home = lineups[0];\n    const away = lineups[1];\n    return {\n        home: {\n            formation: home.formation || \"4-4-2\",\n            startXI: home.startXI?.map((p)=>({\n                    player: p.player?.name || \"Joueur\",\n                    number: p.player?.number || 0,\n                    position: p.player?.pos || \"POS\"\n                })) || [],\n            substitutes: home.substitutes?.map((p)=>({\n                    player: p.player?.name || \"Joueur\",\n                    number: p.player?.number || 0,\n                    position: p.player?.pos || \"SUB\"\n                })) || [],\n            coach: home.coach?.name || \"Coach\"\n        },\n        away: {\n            formation: away.formation || \"4-4-2\",\n            startXI: away.startXI?.map((p)=>({\n                    player: p.player?.name || \"Joueur\",\n                    number: p.player?.number || 0,\n                    position: p.player?.pos || \"POS\"\n                })) || [],\n            substitutes: away.substitutes?.map((p)=>({\n                    player: p.player?.name || \"Joueur\",\n                    number: p.player?.number || 0,\n                    position: p.player?.pos || \"SUB\"\n                })) || [],\n            coach: away.coach?.name || \"Coach\"\n        }\n    };\n}\n// Formater les statistiques FOOTBALL (existant - INCHANG√â)\nfunction formatFootballStatistics(statistics) {\n    if (statistics.length < 2) return {};\n    const homeStats = statistics[0]?.statistics || [];\n    const awayStats = statistics[1]?.statistics || [];\n    const formatTeamStats = (stats)=>{\n        const formatted = {};\n        stats.forEach((stat)=>{\n            formatted[stat.type] = stat.value;\n        });\n        return formatted;\n    };\n    return {\n        home: formatTeamStats(homeStats),\n        away: formatTeamStats(awayStats)\n    };\n}\n// üÜï Fonctions basketball basiques (fallback)\nfunction formatBasketballEvents(events) {\n    return events.map((event)=>({\n            minute: event.time || event.minute || 0,\n            type: getBasketballEventType(event.type),\n            team: event.team || \"N/A\",\n            player: event.player || \"N/A\",\n            detail: event.detail || \"\",\n            points: event.points || (event.type === \"basket\" ? getPointsFromBasket(event.detail) : undefined)\n        })).sort((a, b)=>a.minute - b.minute);\n}\nfunction getPointsFromBasket(detail) {\n    if (detail?.includes(\"3\")) return 3;\n    if (detail?.includes(\"free throw\")) return 1;\n    return 2;\n}\nfunction formatBasketballLineups(lineups) {\n    return generateBasketballLineups();\n}\nfunction formatBasketballStatistics(statistics) {\n    if (!statistics.home && !statistics.away) {\n        return {\n            home: generateBasketballStats(),\n            away: generateBasketballStats()\n        };\n    }\n    return {\n        home: statistics.home || generateBasketballStats(),\n        away: statistics.away || generateBasketballStats()\n    };\n}\nfunction generateBasketballLineups() {\n    const positions = [\n        \"PG\",\n        \"SG\",\n        \"SF\",\n        \"PF\",\n        \"C\"\n    ];\n    const generatePlayers = (teamName)=>{\n        const players = [];\n        for(let i = 0; i < 12; i++){\n            players.push({\n                player: {\n                    id: i + 1,\n                    name: `${teamName} Player ${i + 1}`,\n                    firstname: teamName,\n                    lastname: `Player ${i + 1}`\n                },\n                number: i + 1,\n                position: positions[i % positions.length],\n                points: Math.floor(Math.random() * 25) + 5,\n                rebounds: Math.floor(Math.random() * 10) + 2,\n                assists: Math.floor(Math.random() * 8) + 1,\n                steals: Math.floor(Math.random() * 3),\n                blocks: Math.floor(Math.random() * 3),\n                turnovers: Math.floor(Math.random() * 4) + 1,\n                minutes: `${Math.floor(Math.random() * 35) + 15}:${Math.floor(Math.random() * 60).toString().padStart(2, \"0\")}`,\n                fieldGoals: `${Math.floor(Math.random() * 10) + 2}/${Math.floor(Math.random() * 5) + 12}`,\n                threePointers: `${Math.floor(Math.random() * 5)}/${Math.floor(Math.random() * 3) + 5}`,\n                freeThrows: `${Math.floor(Math.random() * 6)}/${Math.floor(Math.random() * 2) + 6}`\n            });\n        }\n        return players;\n    };\n    const homePlayers = generatePlayers(\"Home\");\n    const awayPlayers = generatePlayers(\"Away\");\n    return {\n        home: {\n            formation: \"Starting 5\",\n            startXI: homePlayers.slice(0, 5),\n            substitutes: homePlayers.slice(5),\n            coach: \"Home Coach\"\n        },\n        away: {\n            formation: \"Starting 5\",\n            startXI: awayPlayers.slice(0, 5),\n            substitutes: awayPlayers.slice(5),\n            coach: \"Away Coach\"\n        }\n    };\n}\nfunction generateBasicBasketballData() {\n    return {\n        events: [\n            {\n                minute: 12,\n                type: \"BASKET\",\n                team: \"Home\",\n                player: \"Player 1\",\n                points: 3,\n                detail: \"3-pointer\"\n            },\n            {\n                minute: 15,\n                type: \"FOUL\",\n                team: \"Away\",\n                player: \"Player 2\",\n                detail: \"Personal foul\"\n            },\n            {\n                minute: 24,\n                type: \"TIMEOUT\",\n                team: \"Home\",\n                player: \"Coach\",\n                detail: \"Full timeout\"\n            }\n        ],\n        lineups: generateBasketballLineups(),\n        statistics: {\n            home: generateBasketballStats(),\n            away: generateBasketballStats()\n        }\n    };\n}\nfunction generateBasketballStats() {\n    return {\n        \"Field Goals Made\": Math.floor(Math.random() * 40) + 30,\n        \"Field Goals Attempted\": Math.floor(Math.random() * 20) + 70,\n        \"Field Goal Percentage\": Math.floor(Math.random() * 30) + 40 + \"%\",\n        \"Three Pointers Made\": Math.floor(Math.random() * 15) + 8,\n        \"Three Pointers Attempted\": Math.floor(Math.random() * 15) + 25,\n        \"Three Point Percentage\": Math.floor(Math.random() * 20) + 30 + \"%\",\n        \"Free Throws Made\": Math.floor(Math.random() * 15) + 10,\n        \"Free Throws Attempted\": Math.floor(Math.random() * 10) + 15,\n        \"Free Throw Percentage\": Math.floor(Math.random() * 20) + 70 + \"%\",\n        \"Rebounds\": Math.floor(Math.random() * 20) + 35,\n        \"Assists\": Math.floor(Math.random() * 15) + 15,\n        \"Steals\": Math.floor(Math.random() * 8) + 5,\n        \"Blocks\": Math.floor(Math.random() * 6) + 2,\n        \"Turnovers\": Math.floor(Math.random() * 10) + 10\n    };\n}\n// Fonction pour g√©n√©rer des lineups vides selon le sport\nfunction getEmptyLineups(sport) {\n    if (sport === \"BASKETBALL\") {\n        return {\n            home: {\n                formation: \"Starting 5\",\n                startXI: [],\n                substitutes: [],\n                coach: \"Coach\"\n            },\n            away: {\n                formation: \"Starting 5\",\n                startXI: [],\n                substitutes: [],\n                coach: \"Coach\"\n            }\n        };\n    }\n    // Football et autres sports\n    return {\n        home: {\n            formation: \"N/A\",\n            startXI: [],\n            substitutes: [],\n            coach: \"Coach\"\n        },\n        away: {\n            formation: \"N/A\",\n            startXI: [],\n            substitutes: [],\n            coach: \"Coach\"\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/match-details/[id].ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmatch-details%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fmatch-details%2F%5Bid%5D.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();