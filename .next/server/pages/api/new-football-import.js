"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/new-football-import";
exports.ids = ["pages/api/new-football-import"];
exports.modules = {

/***/ "@next-auth/prisma-adapter":
/*!********************************************!*\
  !*** external "@next-auth/prisma-adapter" ***!
  \********************************************/
/***/ ((module) => {

module.exports = require("@next-auth/prisma-adapter");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("bcryptjs");

/***/ }),

/***/ "next-auth/next":
/*!*********************************!*\
  !*** external "next-auth/next" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("next-auth/next");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "next-auth/providers/github":
/*!*********************************************!*\
  !*** external "next-auth/providers/github" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/github");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnew-football-import&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fnew-football-import.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnew-football-import&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fnew-football-import.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_new_football_import_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/new-football-import.ts */ \"(api)/./pages/api/new-football-import.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_new_football_import_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_new_football_import_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/new-football-import\",\n        pathname: \"/api/new-football-import\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_new_football_import_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRm5ldy1mb290YmFsbC1pbXBvcnQmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRm5ldy1mb290YmFsbC1pbXBvcnQudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDK0Q7QUFDL0Q7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLDhEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyw4REFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mb290cmF0ZS8/YWM0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL25ldy1mb290YmFsbC1pbXBvcnQudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9uZXctZm9vdGJhbGwtaW1wb3J0XCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvbmV3LWZvb3RiYWxsLWltcG9ydFwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnew-football-import&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fnew-football-import.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var _next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @next-auth/prisma-adapter */ \"@next-auth/prisma-adapter\");\n/* harmony import */ var _next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/github */ \"next-auth/providers/github\");\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./prisma */ \"(api)/./lib/prisma.ts\");\n\n\n\n\n\nconst authOptions = {\n    adapter: (0,_next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__.PrismaAdapter)(_prisma__WEBPACK_IMPORTED_MODULE_4__.prisma),\n    providers: [\n        next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1___default()({\n            clientId: process.env.GITHUB_ID,\n            clientSecret: process.env.GITHUB_SECRET\n        }),\n        next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2___default()({\n            name: \"credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Mot de passe\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    return null;\n                }\n                const user = await _prisma__WEBPACK_IMPORTED_MODULE_4__.prisma.user.findUnique({\n                    where: {\n                        email: credentials.email\n                    }\n                });\n                if (!user || !user.password) {\n                    return null;\n                }\n                const isPasswordValid = await bcryptjs__WEBPACK_IMPORTED_MODULE_3___default().compare(credentials.password, user.password);\n                if (!isPasswordValid) {\n                    return null;\n                }\n                return {\n                    id: user.id,\n                    email: user.email,\n                    name: user.name,\n                    username: user.username\n                };\n            }\n        })\n    ],\n    callbacks: {\n        session: async ({ session, token })=>{\n            if (session?.user) {\n                session.user.id = token.sub;\n            }\n            return session;\n        },\n        jwt: async ({ user, token })=>{\n            if (user) {\n                token.uid = user.id;\n            }\n            return token;\n        }\n    },\n    session: {\n        strategy: \"jwt\"\n    },\n    pages: {\n        signIn: \"/auth/signin\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvYXV0aC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQ3lEO0FBQ0Y7QUFDVTtBQUNwQztBQUNJO0FBRTFCLE1BQU1LLGNBQStCO0lBQzFDQyxTQUFTTix3RUFBYUEsQ0FBQ0ksMkNBQU1BO0lBQzdCRyxXQUFXO1FBQ1ROLGlFQUFjQSxDQUFDO1lBQ2JPLFVBQVVDLFFBQVFDLEdBQUcsQ0FBQ0MsU0FBUztZQUMvQkMsY0FBY0gsUUFBUUMsR0FBRyxDQUFDRyxhQUFhO1FBQ3pDO1FBQ0FYLHNFQUFtQkEsQ0FBQztZQUNsQlksTUFBTTtZQUNOQyxhQUFhO2dCQUNYQyxPQUFPO29CQUFFQyxPQUFPO29CQUFTQyxNQUFNO2dCQUFRO2dCQUN2Q0MsVUFBVTtvQkFBRUYsT0FBTztvQkFBZ0JDLE1BQU07Z0JBQVc7WUFDdEQ7WUFDQSxNQUFNRSxXQUFVTCxXQUFXO2dCQUN6QixJQUFJLENBQUNBLGFBQWFDLFNBQVMsQ0FBQ0QsYUFBYUksVUFBVTtvQkFDakQsT0FBTztnQkFDVDtnQkFFQSxNQUFNRSxPQUFPLE1BQU1qQiwyQ0FBTUEsQ0FBQ2lCLElBQUksQ0FBQ0MsVUFBVSxDQUFDO29CQUN4Q0MsT0FBTzt3QkFDTFAsT0FBT0QsWUFBWUMsS0FBSztvQkFDMUI7Z0JBQ0Y7Z0JBRUEsSUFBSSxDQUFDSyxRQUFRLENBQUNBLEtBQUtGLFFBQVEsRUFBRTtvQkFDM0IsT0FBTztnQkFDVDtnQkFFQSxNQUFNSyxrQkFBa0IsTUFBTXJCLHVEQUFjLENBQzFDWSxZQUFZSSxRQUFRLEVBQ3BCRSxLQUFLRixRQUFRO2dCQUdmLElBQUksQ0FBQ0ssaUJBQWlCO29CQUNwQixPQUFPO2dCQUNUO2dCQUVBLE9BQU87b0JBQ0xFLElBQUlMLEtBQUtLLEVBQUU7b0JBQ1hWLE9BQU9LLEtBQUtMLEtBQUs7b0JBQ2pCRixNQUFNTyxLQUFLUCxJQUFJO29CQUNmYSxVQUFVTixLQUFLTSxRQUFRO2dCQUN6QjtZQUNGO1FBQ0Y7S0FDRDtJQUNEQyxXQUFXO1FBQ1RDLFNBQVMsT0FBTyxFQUFFQSxPQUFPLEVBQUVDLEtBQUssRUFBRTtZQUNoQyxJQUFJRCxTQUFTUixNQUFNO2dCQUNqQlEsUUFBUVIsSUFBSSxDQUFDSyxFQUFFLEdBQUdJLE1BQU1DLEdBQUc7WUFDN0I7WUFDQSxPQUFPRjtRQUNUO1FBQ0FHLEtBQUssT0FBTyxFQUFFWCxJQUFJLEVBQUVTLEtBQUssRUFBRTtZQUN6QixJQUFJVCxNQUFNO2dCQUNSUyxNQUFNRyxHQUFHLEdBQUdaLEtBQUtLLEVBQUU7WUFDckI7WUFDQSxPQUFPSTtRQUNUO0lBQ0Y7SUFDQUQsU0FBUztRQUNQSyxVQUFVO0lBQ1o7SUFDQUMsT0FBTztRQUNMQyxRQUFRO0lBQ1Y7QUFDRixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZm9vdHJhdGUvLi9saWIvYXV0aC50cz9iZjdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBdXRoT3B0aW9ucyB9IGZyb20gXCJuZXh0LWF1dGhcIlxuaW1wb3J0IHsgUHJpc21hQWRhcHRlciB9IGZyb20gXCJAbmV4dC1hdXRoL3ByaXNtYS1hZGFwdGVyXCJcbmltcG9ydCBHaXRodWJQcm92aWRlciBmcm9tIFwibmV4dC1hdXRoL3Byb3ZpZGVycy9naXRodWJcIlxuaW1wb3J0IENyZWRlbnRpYWxzUHJvdmlkZXIgZnJvbSBcIm5leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHNcIlxuaW1wb3J0IGJjcnlwdCBmcm9tIFwiYmNyeXB0anNcIlxuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSBcIi4vcHJpc21hXCJcblxuZXhwb3J0IGNvbnN0IGF1dGhPcHRpb25zOiBOZXh0QXV0aE9wdGlvbnMgPSB7XG4gIGFkYXB0ZXI6IFByaXNtYUFkYXB0ZXIocHJpc21hKSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgR2l0aHViUHJvdmlkZXIoe1xuICAgICAgY2xpZW50SWQ6IHByb2Nlc3MuZW52LkdJVEhVQl9JRCEsXG4gICAgICBjbGllbnRTZWNyZXQ6IHByb2Nlc3MuZW52LkdJVEhVQl9TRUNSRVQhLFxuICAgIH0pLFxuICAgIENyZWRlbnRpYWxzUHJvdmlkZXIoe1xuICAgICAgbmFtZTogXCJjcmVkZW50aWFsc1wiLFxuICAgICAgY3JlZGVudGlhbHM6IHtcbiAgICAgICAgZW1haWw6IHsgbGFiZWw6IFwiRW1haWxcIiwgdHlwZTogXCJlbWFpbFwiIH0sXG4gICAgICAgIHBhc3N3b3JkOiB7IGxhYmVsOiBcIk1vdCBkZSBwYXNzZVwiLCB0eXBlOiBcInBhc3N3b3JkXCIgfVxuICAgICAgfSxcbiAgICAgIGFzeW5jIGF1dGhvcml6ZShjcmVkZW50aWFscykge1xuICAgICAgICBpZiAoIWNyZWRlbnRpYWxzPy5lbWFpbCB8fCAhY3JlZGVudGlhbHM/LnBhc3N3b3JkKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHtcbiAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgZW1haWw6IGNyZWRlbnRpYWxzLmVtYWlsXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIGlmICghdXNlciB8fCAhdXNlci5wYXNzd29yZCkge1xuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBpc1Bhc3N3b3JkVmFsaWQgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShcbiAgICAgICAgICBjcmVkZW50aWFscy5wYXNzd29yZCxcbiAgICAgICAgICB1c2VyLnBhc3N3b3JkXG4gICAgICAgIClcblxuICAgICAgICBpZiAoIWlzUGFzc3dvcmRWYWxpZCkge1xuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGlkOiB1c2VyLmlkLFxuICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxuICAgICAgICAgIG5hbWU6IHVzZXIubmFtZSxcbiAgICAgICAgICB1c2VybmFtZTogdXNlci51c2VybmFtZSxcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIF0sXG4gIGNhbGxiYWNrczoge1xuICAgIHNlc3Npb246IGFzeW5jICh7IHNlc3Npb24sIHRva2VuIH0pID0+IHtcbiAgICAgIGlmIChzZXNzaW9uPy51c2VyKSB7XG4gICAgICAgIHNlc3Npb24udXNlci5pZCA9IHRva2VuLnN1YiFcbiAgICAgIH1cbiAgICAgIHJldHVybiBzZXNzaW9uXG4gICAgfSxcbiAgICBqd3Q6IGFzeW5jICh7IHVzZXIsIHRva2VuIH0pID0+IHtcbiAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgIHRva2VuLnVpZCA9IHVzZXIuaWRcbiAgICAgIH1cbiAgICAgIHJldHVybiB0b2tlblxuICAgIH0sXG4gIH0sXG4gIHNlc3Npb246IHtcbiAgICBzdHJhdGVneTogJ2p3dCcsXG4gIH0sXG4gIHBhZ2VzOiB7XG4gICAgc2lnbkluOiAnL2F1dGgvc2lnbmluJyxcbiAgfSxcbn1cbiJdLCJuYW1lcyI6WyJQcmlzbWFBZGFwdGVyIiwiR2l0aHViUHJvdmlkZXIiLCJDcmVkZW50aWFsc1Byb3ZpZGVyIiwiYmNyeXB0IiwicHJpc21hIiwiYXV0aE9wdGlvbnMiLCJhZGFwdGVyIiwicHJvdmlkZXJzIiwiY2xpZW50SWQiLCJwcm9jZXNzIiwiZW52IiwiR0lUSFVCX0lEIiwiY2xpZW50U2VjcmV0IiwiR0lUSFVCX1NFQ1JFVCIsIm5hbWUiLCJjcmVkZW50aWFscyIsImVtYWlsIiwibGFiZWwiLCJ0eXBlIiwicGFzc3dvcmQiLCJhdXRob3JpemUiLCJ1c2VyIiwiZmluZFVuaXF1ZSIsIndoZXJlIiwiaXNQYXNzd29yZFZhbGlkIiwiY29tcGFyZSIsImlkIiwidXNlcm5hbWUiLCJjYWxsYmFja3MiLCJzZXNzaW9uIiwidG9rZW4iLCJzdWIiLCJqd3QiLCJ1aWQiLCJzdHJhdGVneSIsInBhZ2VzIiwic2lnbkluIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/auth.ts\n");

/***/ }),

/***/ "(api)/./lib/new-football-api.ts":
/*!*********************************!*\
  !*** ./lib/new-football-api.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   newFootballAPI: () => (/* binding */ newFootballAPI)\n/* harmony export */ });\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prisma */ \"(api)/./lib/prisma.ts\");\n// lib/new-football-api.ts\n// 🏆 NOUVEAU SYSTÈME D'IMPORT FOOTBALL 2025 AVEC ABONNEMENT UPGRADÉ\n\nconst RAPIDAPI_KEY = process.env.RAPIDAPI_KEY;\nconst RAPIDAPI_HOST = \"api-football-v1.p.rapidapi.com\";\nconst BASE_URL = \"https://api-football-v1.p.rapidapi.com/v3\";\n// 🏆 CONFIGURATION DES COMPÉTITIONS CIBLÉES\nconst FOOTBALL_COMPETITIONS_2025 = {\n    // 🇪🇺 TOP 5 LIGUES EUROPÉENNES\n    european_leagues: {\n        \"Premier League\": {\n            id: 39,\n            country: \"England\",\n            priority: 1\n        },\n        \"Ligue 1\": {\n            id: 61,\n            country: \"France\",\n            priority: 1\n        },\n        \"La Liga\": {\n            id: 140,\n            country: \"Spain\",\n            priority: 1\n        },\n        \"Serie A\": {\n            id: 135,\n            country: \"Italy\",\n            priority: 1\n        },\n        \"Bundesliga\": {\n            id: 78,\n            country: \"Germany\",\n            priority: 1\n        }\n    },\n    // 🌍 LIGUES INTERNATIONALES\n    international_leagues: {\n        \"MLS\": {\n            id: 253,\n            country: \"USA\",\n            priority: 2\n        },\n        \"Saudi Pro League\": {\n            id: 307,\n            country: \"Saudi Arabia\",\n            priority: 2\n        },\n        \"Eredivisie\": {\n            id: 88,\n            country: \"Netherlands\",\n            priority: 3\n        } // 🆕 BONUS\n    },\n    // 🏆 COMPÉTITIONS EUROPÉENNES\n    european_competitions: {\n        \"UEFA Champions League\": {\n            id: 2,\n            country: \"Europe\",\n            priority: 1\n        },\n        \"UEFA Europa League\": {\n            id: 3,\n            country: \"Europe\",\n            priority: 2\n        },\n        \"UEFA Conference League\": {\n            id: 848,\n            country: \"Europe\",\n            priority: 3\n        },\n        \"UEFA Nations League\": {\n            id: 5,\n            country: \"Europe\",\n            priority: 2\n        }\n    },\n    // 🌍 COMPÉTITIONS MONDIALES\n    world_competitions: {\n        \"FIFA World Cup\": {\n            id: 1,\n            country: \"World\",\n            priority: 1\n        },\n        \"FIFA Club World Cup\": {\n            id: 15,\n            country: \"World\",\n            priority: 2\n        },\n        \"UEFA European Championship\": {\n            id: 4,\n            country: \"Europe\",\n            priority: 1\n        }\n    },\n    // 🇫🇷 MATCHS ÉQUIPE DE FRANCE (et autres grandes nations)\n    international_teams: {\n        \"France National Team\": {\n            team_id: 2,\n            priority: 1\n        },\n        \"England National Team\": {\n            team_id: 10,\n            priority: 2\n        },\n        \"Spain National Team\": {\n            team_id: 9,\n            priority: 2\n        },\n        \"Germany National Team\": {\n            team_id: 25,\n            priority: 2\n        },\n        \"Brazil National Team\": {\n            team_id: 6,\n            priority: 2\n        },\n        \"Argentina National Team\": {\n            team_id: 26,\n            priority: 2\n        }\n    }\n};\nclass NewFootballAPI {\n    // 🔧 REQUÊTE API SÉCURISÉE AVEC GESTION D'ERREUR\n    async makeAPIRequest(endpoint) {\n        if (this.requestCount >= this.MAX_REQUESTS_PER_MINUTE) {\n            console.log(\"⏸️ Pause 60s pour respecter les quotas API...\");\n            await this.sleep(60000);\n            this.requestCount = 0;\n        }\n        try {\n            const url = `${BASE_URL}${endpoint}`;\n            console.log(`🔍 API Request: ${url}`);\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    \"X-RapidAPI-Key\": RAPIDAPI_KEY,\n                    \"X-RapidAPI-Host\": RAPIDAPI_HOST,\n                    \"Accept\": \"application/json\"\n                }\n            });\n            this.requestCount++;\n            if (!response.ok) {\n                throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n            }\n            const data = await response.json();\n            if (data.response) {\n                return data.response;\n            }\n            return data.results || [];\n        } catch (error) {\n            console.error(`❌ API Error: ${error}`);\n            throw error;\n        }\n    }\n    // 🏆 IMPORT COMPLET TOUTES COMPÉTITIONS\n    async importAllCompetitions() {\n        const startTime = Date.now();\n        console.log(\"\\uD83D\\uDE80 D\\xc9MARRAGE IMPORT COMPLET FOOTBALL 2025\");\n        console.log(\"\\uD83C\\uDFAF Comp\\xe9titions cibl\\xe9es: 8 ligues + 7 coupes + \\xe9quipes nationales\");\n        const result = {\n            totalImported: 0,\n            totalSkipped: 0,\n            totalErrors: 0,\n            competitionsProcessed: 0,\n            duration: 0,\n            byCompetition: [],\n            summary: {\n                topMatches: [],\n                dateRange: {\n                    start: \"\",\n                    end: \"\"\n                },\n                countries: []\n            }\n        };\n        try {\n            // 1️⃣ LIGUES EUROPÉENNES (priorité 1)\n            console.log(\"\\uD83C\\uDDEA\\uD83C\\uDDFA Import des TOP 5 ligues europ\\xe9ennes...\");\n            for (const [name, config] of Object.entries(FOOTBALL_COMPETITIONS_2025.european_leagues)){\n                const stats = await this.importLeagueMatches(name, config.id, config.country);\n                result.byCompetition.push(stats);\n                result.totalImported += stats.imported;\n                result.totalSkipped += stats.skipped;\n                result.totalErrors += stats.errors;\n                result.competitionsProcessed++;\n            }\n            // 2️⃣ LIGUES INTERNATIONALES (priorité 2)\n            console.log(\"\\uD83C\\uDF0D Import des ligues internationales...\");\n            for (const [name, config] of Object.entries(FOOTBALL_COMPETITIONS_2025.international_leagues)){\n                const stats = await this.importLeagueMatches(name, config.id, config.country);\n                result.byCompetition.push(stats);\n                result.totalImported += stats.imported;\n                result.totalSkipped += stats.skipped;\n                result.totalErrors += stats.errors;\n                result.competitionsProcessed++;\n            }\n            // 3️⃣ COMPÉTITIONS EUROPÉENNES (priorité 1-3)\n            console.log(\"\\uD83C\\uDFC6 Import des comp\\xe9titions europ\\xe9ennes...\");\n            for (const [name, config] of Object.entries(FOOTBALL_COMPETITIONS_2025.european_competitions)){\n                const stats = await this.importLeagueMatches(name, config.id, config.country);\n                result.byCompetition.push(stats);\n                result.totalImported += stats.imported;\n                result.totalSkipped += stats.skipped;\n                result.totalErrors += stats.errors;\n                result.competitionsProcessed++;\n            }\n            // 4️⃣ COMPÉTITIONS MONDIALES (priorité 1-2)\n            console.log(\"\\uD83C\\uDF0D Import des comp\\xe9titions mondiales...\");\n            for (const [name, config] of Object.entries(FOOTBALL_COMPETITIONS_2025.world_competitions)){\n                const stats = await this.importLeagueMatches(name, config.id, config.country);\n                result.byCompetition.push(stats);\n                result.totalImported += stats.imported;\n                result.totalSkipped += stats.skipped;\n                result.totalErrors += stats.errors;\n                result.competitionsProcessed++;\n            }\n            // 5️⃣ MATCHS DES ÉQUIPES NATIONALES\n            console.log(\"\\uD83C\\uDDEB\\uD83C\\uDDF7 Import des matchs des \\xe9quipes nationales...\");\n            for (const [name, config] of Object.entries(FOOTBALL_COMPETITIONS_2025.international_teams)){\n                const stats = await this.importNationalTeamMatches(name, config.team_id);\n                if (stats.imported > 0) {\n                    result.byCompetition.push(stats);\n                    result.totalImported += stats.imported;\n                    result.totalSkipped += stats.skipped;\n                    result.totalErrors += stats.errors;\n                    result.competitionsProcessed++;\n                }\n            }\n            result.duration = Math.round((Date.now() - startTime) / 1000);\n            // Générer le résumé\n            result.summary = this.generateSummary(result.byCompetition);\n            console.log(`🎉 IMPORT TERMINÉ en ${Math.floor(result.duration / 60)}min ${result.duration % 60}s !`);\n            console.log(`📊 RÉSULTATS: ${result.totalImported} matchs importés, ${result.competitionsProcessed} compétitions`);\n            return result;\n        } catch (error) {\n            console.error(\"❌ Erreur import global:\", error);\n            throw error;\n        }\n    }\n    // 🏆 IMPORT D'UNE LIGUE SPÉCIFIQUE\n    async importLeagueMatches(leagueName, leagueId, country) {\n        console.log(`📊 Import ${leagueName} (ID: ${leagueId})...`);\n        const stats = {\n            competition: leagueName,\n            imported: 0,\n            skipped: 0,\n            errors: 0,\n            examples: [],\n            dateRange: {\n                start: \"\",\n                end: \"\"\n            }\n        };\n        try {\n            // Récupérer les matchs des 3 derniers mois + 1 mois à venir\n            const fixtures = await this.makeAPIRequest(`/fixtures?league=${leagueId}&season=${this.SEASON}&last=90`);\n            console.log(`   📋 ${fixtures.length} matchs trouvés pour ${leagueName}`);\n            if (fixtures.length === 0) {\n                console.log(`   ⚠️ Aucun match trouvé pour ${leagueName}`);\n                return stats;\n            }\n            // Trier par date pour traiter les plus récents\n            fixtures.sort((a, b)=>new Date(b.fixture.date).getTime() - new Date(a.fixture.date).getTime());\n            for (const fixture of fixtures){\n                try {\n                    const existingMatch = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.match.findFirst({\n                        where: {\n                            apiMatchId: fixture.fixture.id\n                        }\n                    });\n                    if (existingMatch) {\n                        stats.skipped++;\n                        continue;\n                    }\n                    // Créer le match\n                    await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.match.create({\n                        data: {\n                            apiMatchId: fixture.fixture.id,\n                            sport: \"FOOTBALL\",\n                            homeTeam: fixture.teams.home.name,\n                            awayTeam: fixture.teams.away.name,\n                            homeScore: fixture.goals.home || 0,\n                            awayScore: fixture.goals.away || 0,\n                            date: new Date(fixture.fixture.date),\n                            status: this.mapStatus(fixture.fixture.status.short),\n                            competition: leagueName,\n                            season: this.SEASON.toString(),\n                            venue: fixture.fixture.venue?.name || \"Stadium\",\n                            referee: fixture.fixture.referee || \"Referee\",\n                            homeTeamLogo: fixture.teams.home.logo,\n                            awayTeamLogo: fixture.teams.away.logo,\n                            details: {\n                                fixtureId: fixture.fixture.id,\n                                round: fixture.league.round,\n                                country: country,\n                                timezone: fixture.fixture.timezone,\n                                halftime: fixture.score.halftime,\n                                fulltime: fixture.score.fulltime,\n                                extratime: fixture.score.extratime,\n                                penalty: fixture.score.penalty\n                            }\n                        }\n                    });\n                    stats.imported++;\n                    // Ajouter des exemples\n                    if (stats.examples.length < 3) {\n                        stats.examples.push(`${fixture.teams.home.name} ${fixture.goals.home || 0}-${fixture.goals.away || 0} ${fixture.teams.away.name}`);\n                    }\n                    // Suivre la plage de dates\n                    const matchDate = fixture.fixture.date.split(\"T\")[0];\n                    if (!stats.dateRange.start || matchDate < stats.dateRange.start) {\n                        stats.dateRange.start = matchDate;\n                    }\n                    if (!stats.dateRange.end || matchDate > stats.dateRange.end) {\n                        stats.dateRange.end = matchDate;\n                    }\n                    // Log de progression\n                    if (stats.imported % 50 === 0) {\n                        console.log(`     ✅ ${stats.imported} matchs importés pour ${leagueName}...`);\n                    }\n                } catch (error) {\n                    stats.errors++;\n                    console.error(`     ❌ Erreur match ${fixture.fixture.id}:`, error);\n                }\n            }\n            console.log(`   ✅ ${leagueName} terminé: ${stats.imported} importés, ${stats.skipped} existants`);\n            // Pause entre ligues pour être gentil avec l'API\n            await this.sleep(2000);\n            return stats;\n        } catch (error) {\n            stats.errors++;\n            console.error(`❌ Erreur ${leagueName}:`, error);\n            return stats;\n        }\n    }\n    // 🇫🇷 IMPORT MATCHS ÉQUIPE NATIONALE\n    async importNationalTeamMatches(teamName, teamId) {\n        console.log(`🇫🇷 Import ${teamName}...`);\n        const stats = {\n            competition: teamName,\n            imported: 0,\n            skipped: 0,\n            errors: 0,\n            examples: [],\n            dateRange: {\n                start: \"\",\n                end: \"\"\n            }\n        };\n        try {\n            // Récupérer les matchs de l'équipe nationale\n            const fixtures = await this.makeAPIRequest(`/fixtures?team=${teamId}&last=50`);\n            console.log(`   📋 ${fixtures.length} matchs trouvés pour ${teamName}`);\n            for (const fixture of fixtures){\n                try {\n                    const existingMatch = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.match.findFirst({\n                        where: {\n                            apiMatchId: fixture.fixture.id\n                        }\n                    });\n                    if (existingMatch) {\n                        stats.skipped++;\n                        continue;\n                    }\n                    // Déterminer la compétition\n                    let competitionName = fixture.league.name;\n                    if (competitionName.includes(\"Friendlies\")) {\n                        competitionName = \"International Friendlies\";\n                    } else if (competitionName.includes(\"Nations League\")) {\n                        competitionName = \"UEFA Nations League\";\n                    } else if (competitionName.includes(\"World Cup\")) {\n                        competitionName = \"FIFA World Cup Qualifiers\";\n                    } else if (competitionName.includes(\"Euro\")) {\n                        competitionName = \"UEFA Euro Qualifiers\";\n                    }\n                    await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.match.create({\n                        data: {\n                            apiMatchId: fixture.fixture.id,\n                            sport: \"FOOTBALL\",\n                            homeTeam: fixture.teams.home.name,\n                            awayTeam: fixture.teams.away.name,\n                            homeScore: fixture.goals.home || 0,\n                            awayScore: fixture.goals.away || 0,\n                            date: new Date(fixture.fixture.date),\n                            status: this.mapStatus(fixture.fixture.status.short),\n                            competition: competitionName,\n                            season: this.SEASON.toString(),\n                            venue: fixture.fixture.venue?.name || \"Stadium\",\n                            referee: fixture.fixture.referee || \"Referee\",\n                            homeTeamLogo: fixture.teams.home.logo,\n                            awayTeamLogo: fixture.teams.away.logo,\n                            details: {\n                                fixtureId: fixture.fixture.id,\n                                round: fixture.league.round,\n                                country: \"International\",\n                                isNationalTeam: true,\n                                targetTeam: teamName\n                            }\n                        }\n                    });\n                    stats.imported++;\n                    if (stats.examples.length < 2) {\n                        stats.examples.push(`${fixture.teams.home.name} ${fixture.goals.home || 0}-${fixture.goals.away || 0} ${fixture.teams.away.name}`);\n                    }\n                } catch (error) {\n                    stats.errors++;\n                    console.error(`     ❌ Erreur match ${fixture.fixture.id}:`, error);\n                }\n            }\n            console.log(`   ✅ ${teamName}: ${stats.imported} matchs importés`);\n            await this.sleep(1500);\n            return stats;\n        } catch (error) {\n            stats.errors++;\n            console.error(`❌ Erreur ${teamName}:`, error);\n            return stats;\n        }\n    }\n    // 🔧 MAPPAGE DES STATUTS\n    mapStatus(apiStatus) {\n        const statusMap = {\n            \"FT\": \"FINISHED\",\n            \"AET\": \"FINISHED\",\n            \"PEN\": \"FINISHED\",\n            \"NS\": \"SCHEDULED\",\n            \"TBD\": \"SCHEDULED\",\n            \"1H\": \"LIVE\",\n            \"2H\": \"LIVE\",\n            \"HT\": \"LIVE\",\n            \"ET\": \"LIVE\",\n            \"P\": \"LIVE\",\n            \"PST\": \"POSTPONED\",\n            \"CANC\": \"CANCELLED\",\n            \"ABD\": \"CANCELLED\",\n            \"AWD\": \"FINISHED\",\n            \"WO\": \"FINISHED\"\n        };\n        return statusMap[apiStatus] || \"SCHEDULED\";\n    }\n    // 📊 GÉNÉRER RÉSUMÉ\n    generateSummary(competitions) {\n        const allExamples = competitions.flatMap((c)=>c.examples);\n        const countries = [\n            ...new Set(competitions.map((c)=>c.competition))\n        ];\n        const allDates = competitions.flatMap((c)=>[\n                c.dateRange.start,\n                c.dateRange.end\n            ]).filter(Boolean);\n        const dateRange = {\n            start: allDates.length > 0 ? allDates.sort()[0] : \"\",\n            end: allDates.length > 0 ? allDates.sort().reverse()[0] : \"\"\n        };\n        return {\n            topMatches: allExamples.slice(0, 5),\n            dateRange,\n            countries: countries.slice(0, 10)\n        };\n    }\n    // 🛠️ UTILITAIRES\n    async sleep(ms) {\n        return new Promise((resolve)=>setTimeout(resolve, ms));\n    }\n    // 🔍 TEST DE CONNEXION\n    async testConnection() {\n        try {\n            console.log(\"\\uD83D\\uDD0D Test connexion API Football...\");\n            const leagues = await this.makeAPIRequest(\"/leagues?current=true\");\n            if (leagues && leagues.length > 0) {\n                return {\n                    success: true,\n                    message: `✅ API Football connectée - ${leagues.length} ligues disponibles`,\n                    details: {\n                        totalLeagues: leagues.length,\n                        sampleLeague: leagues[0]?.league?.name,\n                        rateLimitRemaining: this.MAX_REQUESTS_PER_MINUTE - this.requestCount\n                    }\n                };\n            } else {\n                return {\n                    success: false,\n                    message: \"❌ API Football: Aucune ligue disponible\"\n                };\n            }\n        } catch (error) {\n            return {\n                success: false,\n                message: `❌ Erreur API Football: ${error.message}`\n            };\n        }\n    }\n    // 📅 IMPORT QUOTIDIEN (pour le cron)\n    async importDailyMatches() {\n        console.log(\"\\uD83D\\uDCC5 Import quotidien des nouveaux matchs...\");\n        // Logique similaire mais seulement pour les matchs d'aujourd'hui/demain\n        const today = new Date().toISOString().split(\"T\")[0];\n        // Pour le cron quotidien, on peut implémenter une version allégée\n        // qui ne récupère que les matchs récents\n        return this.importAllCompetitions() // Pour l'instant, utilise la méthode complète\n        ;\n    }\n    constructor(){\n        this.requestCount = 0;\n        this.MAX_REQUESTS_PER_MINUTE = 300 // Abonnement upgradé !\n        ;\n        this.SEASON = 2024 // Saison actuelle\n        ;\n    }\n}\nconst newFootballAPI = new NewFootballAPI();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/new-football-api.ts\n");

/***/ }),

/***/ "(api)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUU3QyxNQUFNQyxrQkFBa0JDO0FBSWpCLE1BQU1DLFNBQVNGLGdCQUFnQkUsTUFBTSxJQUFJLElBQUlILHdEQUFZQSxHQUFFO0FBRWxFLElBQUlJLElBQXlCLEVBQWNILGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zvb3RyYXRlLy4vbGliL3ByaXNtYS50cz85ODIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50J1xuXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWxUaGlzIGFzIHVua25vd24gYXMge1xuICBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxufVxuXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/PyBuZXcgUHJpc21hQ2xpZW50KClcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWFcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwicHJpc21hIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/prisma.ts\n");

/***/ }),

/***/ "(api)/./pages/api/new-football-import.ts":
/*!******************************************!*\
  !*** ./pages/api/new-football-import.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/next */ \"next-auth/next\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_next__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/auth */ \"(api)/./lib/auth.ts\");\n/* harmony import */ var _lib_new_football_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/new-football-api */ \"(api)/./lib/new-football-api.ts\");\n// pages/api/new-football-import.ts\n// 🏆 API ENDPOINT POUR NOUVEAUX IMPORTS FOOTBALL 2025\n\n\n\nasync function handler(req, res) {\n    const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_0__.getServerSession)(req, res, _lib_auth__WEBPACK_IMPORTED_MODULE_1__.authOptions);\n    if (!session?.user?.id) {\n        return res.status(401).json({\n            error: \"Connexion requise\"\n        });\n    }\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    const { action, competitions } = req.body;\n    try {\n        console.log(`🚀 Nouveau import football: ${action}`);\n        if (action === \"test_connection\") {\n            // 🔍 TESTER LA CONNEXION API\n            console.log(\"\\uD83D\\uDD0D Test de connexion au nouveau syst\\xe8me...\");\n            const connectionTest = await _lib_new_football_api__WEBPACK_IMPORTED_MODULE_2__.newFootballAPI.testConnection();\n            return res.status(200).json({\n                success: connectionTest.success,\n                action: \"test_connection\",\n                message: connectionTest.message,\n                details: connectionTest.details,\n                recommendations: connectionTest.success ? [\n                    \"✅ API Football connect\\xe9e avec abonnement upgrad\\xe9\",\n                    \"\\uD83D\\uDE80 Pr\\xeat pour import complet des 15+ comp\\xe9titions\",\n                    \"⚡ 300 requ\\xeates/minute disponibles\",\n                    \"\\uD83D\\uDCCA Import optimis\\xe9 pour les 3 derniers mois\"\n                ] : [\n                    \"❌ V\\xe9rifiez votre RAPIDAPI_KEY dans .env\",\n                    \"\\uD83D\\uDCB3 V\\xe9rifiez que votre abonnement est actif\",\n                    \"\\uD83D\\uDD11 Assurez-vous d'\\xeatre abonn\\xe9 \\xe0 API-Football sur RapidAPI\"\n                ]\n            });\n        }\n        if (action === \"import_all_competitions\") {\n            // 🏆 IMPORT COMPLET TOUTES LES COMPÉTITIONS\n            console.log(\"\\uD83C\\uDFC6 IMPORT COMPLET - Toutes les comp\\xe9titions football 2025\");\n            console.log(\"\\uD83C\\uDFAF Cibles: TOP 5 Europe + Internationales + Coupes + \\xc9quipes nationales\");\n            const result = await _lib_new_football_api__WEBPACK_IMPORTED_MODULE_2__.newFootballAPI.importAllCompetitions();\n            return res.status(200).json({\n                success: true,\n                action: \"import_all_competitions\",\n                message: \"\\uD83C\\uDF89 IMPORT COMPLET TERMIN\\xc9 !\",\n                result,\n                summary: {\n                    totalMatches: result.totalImported,\n                    competitions: result.competitionsProcessed,\n                    duration: `${Math.floor(result.duration / 60)}min ${result.duration % 60}s`,\n                    topMatches: result.summary.topMatches,\n                    dateRange: result.summary.dateRange,\n                    breakdown: {\n                        imported: result.totalImported,\n                        skipped: result.totalSkipped,\n                        errors: result.totalErrors\n                    }\n                },\n                details: {\n                    byCompetition: result.byCompetition.map((comp)=>({\n                            name: comp.competition,\n                            imported: comp.imported,\n                            examples: comp.examples.slice(0, 2)\n                        }))\n                },\n                nextSteps: [\n                    \"✅ V\\xe9rifie la page d'accueil pour voir les nouveaux matchs\",\n                    \"\\uD83C\\uDFAF Teste la notation de quelques \\xe9v\\xe9nements\",\n                    \"\\uD83D\\uDCCA Explore les diff\\xe9rentes comp\\xe9titions\",\n                    \"⏰ Configure ensuite l'automatisation quotidienne\"\n                ]\n            });\n        }\n        if (action === \"import_specific_competitions\" && competitions) {\n            // 🎯 IMPORT COMPÉTITIONS SPÉCIFIQUES\n            console.log(\"\\uD83C\\uDFAF Import de comp\\xe9titions sp\\xe9cifiques:\", competitions);\n            // Pour l'instant, utilise l'import complet\n            // Plus tard on peut ajouter la logique pour des compétitions spécifiques\n            const result = await _lib_new_football_api__WEBPACK_IMPORTED_MODULE_2__.newFootballAPI.importAllCompetitions();\n            return res.status(200).json({\n                success: true,\n                action: \"import_specific_competitions\",\n                message: `🎯 Import des compétitions sélectionnées terminé`,\n                result: {\n                    imported: result.totalImported,\n                    competitions: competitions.length,\n                    details: result.byCompetition\n                }\n            });\n        }\n        if (action === \"import_daily\") {\n            // 📅 IMPORT QUOTIDIEN (pour tester le cron)\n            console.log(\"\\uD83D\\uDCC5 Test import quotidien...\");\n            const result = await _lib_new_football_api__WEBPACK_IMPORTED_MODULE_2__.newFootballAPI.importDailyMatches();\n            return res.status(200).json({\n                success: true,\n                action: \"import_daily\",\n                message: \"\\uD83D\\uDCC5 Import quotidien termin\\xe9\",\n                result: {\n                    imported: result.totalImported,\n                    skipped: result.totalSkipped,\n                    newMatches: result.byCompetition.filter((c)=>c.imported > 0)\n                }\n            });\n        }\n        return res.status(400).json({\n            error: \"Action non support\\xe9e\",\n            availableActions: [\n                \"test_connection\",\n                \"import_all_competitions\",\n                \"import_specific_competitions\",\n                \"import_daily\"\n            ],\n            note: \"Utilise import_all_competitions pour d\\xe9marrer\"\n        });\n    } catch (error) {\n        console.error(\"❌ Erreur nouveau import football:\", error);\n        // Diagnostic d'erreur avancé\n        let errorMessage = \"Erreur inconnue\";\n        let troubleshooting = [];\n        if (error instanceof Error) {\n            if (error.message.includes(\"fetch\")) {\n                errorMessage = \"Erreur de connexion \\xe0 l'API Football\";\n                troubleshooting = [\n                    \"V\\xe9rifiez votre connexion internet\",\n                    \"V\\xe9rifiez que RAPIDAPI_KEY est d\\xe9finie dans .env\",\n                    \"V\\xe9rifiez votre abonnement RapidAPI (doit \\xeatre upgrad\\xe9)\",\n                    \"L'API Football doit \\xeatre active sur votre compte RapidAPI\"\n                ];\n            } else if (error.message.includes(\"429\")) {\n                errorMessage = \"Quota API d\\xe9pass\\xe9 malgr\\xe9 l'upgrade\";\n                troubleshooting = [\n                    \"Votre abonnement est peut-\\xeatre insuffisant\",\n                    \"Attendez quelques minutes et r\\xe9essayez\",\n                    \"V\\xe9rifiez votre plan sur RapidAPI\",\n                    \"Contactez le support RapidAPI si le probl\\xe8me persiste\"\n                ];\n            } else if (error.message.includes(\"401\")) {\n                errorMessage = \"Cl\\xe9 API invalide ou abonnement inactif\";\n                troubleshooting = [\n                    \"V\\xe9rifiez votre RAPIDAPI_KEY dans .env\",\n                    \"V\\xe9rifiez que votre abonnement API Football est actif\",\n                    \"R\\xe9g\\xe9n\\xe9rez votre cl\\xe9 RapidAPI si n\\xe9cessaire\",\n                    'Assurez-vous d\\'\\xeatre abonn\\xe9 \\xe0 \"API-Football\" pas \"Football-Data\"'\n                ];\n            } else if (error.message.includes(\"Prisma\") || error.message.includes(\"database\")) {\n                errorMessage = \"Erreur base de donn\\xe9es\";\n                troubleshooting = [\n                    \"V\\xe9rifiez que PostgreSQL est d\\xe9marr\\xe9\",\n                    \"V\\xe9rifiez DATABASE_URL dans .env\",\n                    \"Essayez: npx prisma db push\",\n                    \"V\\xe9rifiez l'espace disque disponible\"\n                ];\n            } else {\n                errorMessage = error.message;\n                troubleshooting = [\n                    \"V\\xe9rifiez les logs du serveur pour plus de d\\xe9tails\",\n                    \"Assurez-vous que tous les services sont d\\xe9marr\\xe9s\",\n                    \"Red\\xe9marrez le serveur Next.js si n\\xe9cessaire\"\n                ];\n            }\n        }\n        res.status(500).json({\n            success: false,\n            error: errorMessage,\n            originalError: error instanceof Error ? error.message : \"Erreur inconnue\",\n            action,\n            troubleshooting,\n            help: {\n                documentation: \"Consultez la documentation API-Football sur RapidAPI\",\n                support: \"Contactez le support RapidAPI si probl\\xe8me de quota\",\n                configuration: \"V\\xe9rifiez votre fichier .env et votre abonnement\",\n                apiStatus: \"V\\xe9rifiez le statut de l'API sur status.rapidapi.com\"\n            },\n            nextSteps: [\n                \"1. V\\xe9rifiez votre connexion et configuration\",\n                \"2. Testez d'abord test_connection\",\n                \"3. Si \\xe7a marche, relancez import_all_competitions\",\n                \"4. Consultez les logs pour plus de d\\xe9tails\"\n            ]\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/new-football-import.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnew-football-import&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fnew-football-import.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();