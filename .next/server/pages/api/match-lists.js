"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/match-lists";
exports.ids = ["pages/api/match-lists"];
exports.modules = {

/***/ "@next-auth/prisma-adapter":
/*!********************************************!*\
  !*** external "@next-auth/prisma-adapter" ***!
  \********************************************/
/***/ ((module) => {

module.exports = require("@next-auth/prisma-adapter");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("bcryptjs");

/***/ }),

/***/ "next-auth/next":
/*!*********************************!*\
  !*** external "next-auth/next" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("next-auth/next");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "next-auth/providers/github":
/*!*********************************************!*\
  !*** external "next-auth/providers/github" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/github");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmatch-lists&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fmatch-lists.ts&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmatch-lists&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fmatch-lists.ts&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_match_lists_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/match-lists.ts */ \"(api)/./pages/api/match-lists.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_match_lists_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_match_lists_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/match-lists\",\n        pathname: \"/api/match-lists\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_match_lists_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRm1hdGNoLWxpc3RzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZtYXRjaC1saXN0cy50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUN1RDtBQUN2RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsc0RBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLHNEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL2Zvb3RyYXRlLz81MGFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvbWF0Y2gtbGlzdHMudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9tYXRjaC1saXN0c1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL21hdGNoLWxpc3RzXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmatch-lists&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fmatch-lists.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var _next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @next-auth/prisma-adapter */ \"@next-auth/prisma-adapter\");\n/* harmony import */ var _next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/github */ \"next-auth/providers/github\");\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./prisma */ \"(api)/./lib/prisma.ts\");\n\n\n\n\n\nconst authOptions = {\n    adapter: (0,_next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__.PrismaAdapter)(_prisma__WEBPACK_IMPORTED_MODULE_4__.prisma),\n    providers: [\n        next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1___default()({\n            clientId: process.env.GITHUB_ID,\n            clientSecret: process.env.GITHUB_SECRET\n        }),\n        next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2___default()({\n            name: \"credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Mot de passe\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    return null;\n                }\n                const user = await _prisma__WEBPACK_IMPORTED_MODULE_4__.prisma.user.findUnique({\n                    where: {\n                        email: credentials.email\n                    }\n                });\n                if (!user || !user.password) {\n                    return null;\n                }\n                const isPasswordValid = await bcryptjs__WEBPACK_IMPORTED_MODULE_3___default().compare(credentials.password, user.password);\n                if (!isPasswordValid) {\n                    return null;\n                }\n                return {\n                    id: user.id,\n                    email: user.email,\n                    name: user.name,\n                    username: user.username\n                };\n            }\n        })\n    ],\n    callbacks: {\n        session: async ({ session, token })=>{\n            if (session?.user) {\n                session.user.id = token.sub;\n            }\n            return session;\n        },\n        jwt: async ({ user, token })=>{\n            if (user) {\n                token.uid = user.id;\n            }\n            return token;\n        }\n    },\n    session: {\n        strategy: \"jwt\"\n    },\n    pages: {\n        signIn: \"/auth/signin\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvYXV0aC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQ3lEO0FBQ0Y7QUFDVTtBQUNwQztBQUNJO0FBRTFCLE1BQU1LLGNBQStCO0lBQzFDQyxTQUFTTix3RUFBYUEsQ0FBQ0ksMkNBQU1BO0lBQzdCRyxXQUFXO1FBQ1ROLGlFQUFjQSxDQUFDO1lBQ2JPLFVBQVVDLFFBQVFDLEdBQUcsQ0FBQ0MsU0FBUztZQUMvQkMsY0FBY0gsUUFBUUMsR0FBRyxDQUFDRyxhQUFhO1FBQ3pDO1FBQ0FYLHNFQUFtQkEsQ0FBQztZQUNsQlksTUFBTTtZQUNOQyxhQUFhO2dCQUNYQyxPQUFPO29CQUFFQyxPQUFPO29CQUFTQyxNQUFNO2dCQUFRO2dCQUN2Q0MsVUFBVTtvQkFBRUYsT0FBTztvQkFBZ0JDLE1BQU07Z0JBQVc7WUFDdEQ7WUFDQSxNQUFNRSxXQUFVTCxXQUFXO2dCQUN6QixJQUFJLENBQUNBLGFBQWFDLFNBQVMsQ0FBQ0QsYUFBYUksVUFBVTtvQkFDakQsT0FBTztnQkFDVDtnQkFFQSxNQUFNRSxPQUFPLE1BQU1qQiwyQ0FBTUEsQ0FBQ2lCLElBQUksQ0FBQ0MsVUFBVSxDQUFDO29CQUN4Q0MsT0FBTzt3QkFDTFAsT0FBT0QsWUFBWUMsS0FBSztvQkFDMUI7Z0JBQ0Y7Z0JBRUEsSUFBSSxDQUFDSyxRQUFRLENBQUNBLEtBQUtGLFFBQVEsRUFBRTtvQkFDM0IsT0FBTztnQkFDVDtnQkFFQSxNQUFNSyxrQkFBa0IsTUFBTXJCLHVEQUFjLENBQzFDWSxZQUFZSSxRQUFRLEVBQ3BCRSxLQUFLRixRQUFRO2dCQUdmLElBQUksQ0FBQ0ssaUJBQWlCO29CQUNwQixPQUFPO2dCQUNUO2dCQUVBLE9BQU87b0JBQ0xFLElBQUlMLEtBQUtLLEVBQUU7b0JBQ1hWLE9BQU9LLEtBQUtMLEtBQUs7b0JBQ2pCRixNQUFNTyxLQUFLUCxJQUFJO29CQUNmYSxVQUFVTixLQUFLTSxRQUFRO2dCQUN6QjtZQUNGO1FBQ0Y7S0FDRDtJQUNEQyxXQUFXO1FBQ1RDLFNBQVMsT0FBTyxFQUFFQSxPQUFPLEVBQUVDLEtBQUssRUFBRTtZQUNoQyxJQUFJRCxTQUFTUixNQUFNO2dCQUNqQlEsUUFBUVIsSUFBSSxDQUFDSyxFQUFFLEdBQUdJLE1BQU1DLEdBQUc7WUFDN0I7WUFDQSxPQUFPRjtRQUNUO1FBQ0FHLEtBQUssT0FBTyxFQUFFWCxJQUFJLEVBQUVTLEtBQUssRUFBRTtZQUN6QixJQUFJVCxNQUFNO2dCQUNSUyxNQUFNRyxHQUFHLEdBQUdaLEtBQUtLLEVBQUU7WUFDckI7WUFDQSxPQUFPSTtRQUNUO0lBQ0Y7SUFDQUQsU0FBUztRQUNQSyxVQUFVO0lBQ1o7SUFDQUMsT0FBTztRQUNMQyxRQUFRO0lBQ1Y7QUFDRixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZm9vdHJhdGUvLi9saWIvYXV0aC50cz9iZjdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBdXRoT3B0aW9ucyB9IGZyb20gXCJuZXh0LWF1dGhcIlxuaW1wb3J0IHsgUHJpc21hQWRhcHRlciB9IGZyb20gXCJAbmV4dC1hdXRoL3ByaXNtYS1hZGFwdGVyXCJcbmltcG9ydCBHaXRodWJQcm92aWRlciBmcm9tIFwibmV4dC1hdXRoL3Byb3ZpZGVycy9naXRodWJcIlxuaW1wb3J0IENyZWRlbnRpYWxzUHJvdmlkZXIgZnJvbSBcIm5leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHNcIlxuaW1wb3J0IGJjcnlwdCBmcm9tIFwiYmNyeXB0anNcIlxuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSBcIi4vcHJpc21hXCJcblxuZXhwb3J0IGNvbnN0IGF1dGhPcHRpb25zOiBOZXh0QXV0aE9wdGlvbnMgPSB7XG4gIGFkYXB0ZXI6IFByaXNtYUFkYXB0ZXIocHJpc21hKSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgR2l0aHViUHJvdmlkZXIoe1xuICAgICAgY2xpZW50SWQ6IHByb2Nlc3MuZW52LkdJVEhVQl9JRCEsXG4gICAgICBjbGllbnRTZWNyZXQ6IHByb2Nlc3MuZW52LkdJVEhVQl9TRUNSRVQhLFxuICAgIH0pLFxuICAgIENyZWRlbnRpYWxzUHJvdmlkZXIoe1xuICAgICAgbmFtZTogXCJjcmVkZW50aWFsc1wiLFxuICAgICAgY3JlZGVudGlhbHM6IHtcbiAgICAgICAgZW1haWw6IHsgbGFiZWw6IFwiRW1haWxcIiwgdHlwZTogXCJlbWFpbFwiIH0sXG4gICAgICAgIHBhc3N3b3JkOiB7IGxhYmVsOiBcIk1vdCBkZSBwYXNzZVwiLCB0eXBlOiBcInBhc3N3b3JkXCIgfVxuICAgICAgfSxcbiAgICAgIGFzeW5jIGF1dGhvcml6ZShjcmVkZW50aWFscykge1xuICAgICAgICBpZiAoIWNyZWRlbnRpYWxzPy5lbWFpbCB8fCAhY3JlZGVudGlhbHM/LnBhc3N3b3JkKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHtcbiAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgZW1haWw6IGNyZWRlbnRpYWxzLmVtYWlsXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIGlmICghdXNlciB8fCAhdXNlci5wYXNzd29yZCkge1xuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBpc1Bhc3N3b3JkVmFsaWQgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShcbiAgICAgICAgICBjcmVkZW50aWFscy5wYXNzd29yZCxcbiAgICAgICAgICB1c2VyLnBhc3N3b3JkXG4gICAgICAgIClcblxuICAgICAgICBpZiAoIWlzUGFzc3dvcmRWYWxpZCkge1xuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGlkOiB1c2VyLmlkLFxuICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxuICAgICAgICAgIG5hbWU6IHVzZXIubmFtZSxcbiAgICAgICAgICB1c2VybmFtZTogdXNlci51c2VybmFtZSxcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIF0sXG4gIGNhbGxiYWNrczoge1xuICAgIHNlc3Npb246IGFzeW5jICh7IHNlc3Npb24sIHRva2VuIH0pID0+IHtcbiAgICAgIGlmIChzZXNzaW9uPy51c2VyKSB7XG4gICAgICAgIHNlc3Npb24udXNlci5pZCA9IHRva2VuLnN1YiFcbiAgICAgIH1cbiAgICAgIHJldHVybiBzZXNzaW9uXG4gICAgfSxcbiAgICBqd3Q6IGFzeW5jICh7IHVzZXIsIHRva2VuIH0pID0+IHtcbiAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgIHRva2VuLnVpZCA9IHVzZXIuaWRcbiAgICAgIH1cbiAgICAgIHJldHVybiB0b2tlblxuICAgIH0sXG4gIH0sXG4gIHNlc3Npb246IHtcbiAgICBzdHJhdGVneTogJ2p3dCcsXG4gIH0sXG4gIHBhZ2VzOiB7XG4gICAgc2lnbkluOiAnL2F1dGgvc2lnbmluJyxcbiAgfSxcbn1cbiJdLCJuYW1lcyI6WyJQcmlzbWFBZGFwdGVyIiwiR2l0aHViUHJvdmlkZXIiLCJDcmVkZW50aWFsc1Byb3ZpZGVyIiwiYmNyeXB0IiwicHJpc21hIiwiYXV0aE9wdGlvbnMiLCJhZGFwdGVyIiwicHJvdmlkZXJzIiwiY2xpZW50SWQiLCJwcm9jZXNzIiwiZW52IiwiR0lUSFVCX0lEIiwiY2xpZW50U2VjcmV0IiwiR0lUSFVCX1NFQ1JFVCIsIm5hbWUiLCJjcmVkZW50aWFscyIsImVtYWlsIiwibGFiZWwiLCJ0eXBlIiwicGFzc3dvcmQiLCJhdXRob3JpemUiLCJ1c2VyIiwiZmluZFVuaXF1ZSIsIndoZXJlIiwiaXNQYXNzd29yZFZhbGlkIiwiY29tcGFyZSIsImlkIiwidXNlcm5hbWUiLCJjYWxsYmFja3MiLCJzZXNzaW9uIiwidG9rZW4iLCJzdWIiLCJqd3QiLCJ1aWQiLCJzdHJhdGVneSIsInBhZ2VzIiwic2lnbkluIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/auth.ts\n");

/***/ }),

/***/ "(api)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUU3QyxNQUFNQyxrQkFBa0JDO0FBSWpCLE1BQU1DLFNBQVNGLGdCQUFnQkUsTUFBTSxJQUFJLElBQUlILHdEQUFZQSxHQUFFO0FBRWxFLElBQUlJLElBQXlCLEVBQWNILGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zvb3RyYXRlLy4vbGliL3ByaXNtYS50cz85ODIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50J1xuXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWxUaGlzIGFzIHVua25vd24gYXMge1xuICBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxufVxuXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/PyBuZXcgUHJpc21hQ2xpZW50KClcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWFcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwicHJpc21hIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/prisma.ts\n");

/***/ }),

/***/ "(api)/./pages/api/match-lists.ts":
/*!**********************************!*\
  !*** ./pages/api/match-lists.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/next */ \"next-auth/next\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_next__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/auth */ \"(api)/./lib/auth.ts\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/prisma */ \"(api)/./lib/prisma.ts\");\n// pages/api/match-lists.ts\n\n\n\nasync function handler(req, res) {\n    try {\n        const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_0__.getServerSession)(req, res, _lib_auth__WEBPACK_IMPORTED_MODULE_1__.authOptions);\n        if (!session?.user?.id) {\n            return res.status(401).json({\n                error: \"Non connect\\xe9\"\n            });\n        }\n        if (req.method === \"GET\") {\n            const { userId, public: publicOnly } = req.query;\n            const targetUserId = userId || session.user.id;\n            const isOwnProfile = targetUserId === session.user.id;\n            // Construire les filtres\n            const whereClause = {\n                userId: targetUserId\n            };\n            // Si ce n'est pas son propre profil, ne montrer que les listes publiques\n            if (!isOwnProfile || publicOnly === \"true\") {\n                whereClause.isPublic = true;\n            }\n            const lists = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.matchList.findMany({\n                where: whereClause,\n                include: {\n                    matches: {\n                        include: {\n                            match: {\n                                select: {\n                                    id: true,\n                                    homeTeam: true,\n                                    awayTeam: true,\n                                    homeScore: true,\n                                    awayScore: true,\n                                    date: true,\n                                    competition: true,\n                                    sport: true,\n                                    venue: true,\n                                    homeTeamLogo: true,\n                                    awayTeamLogo: true,\n                                    avgRating: true,\n                                    totalRatings: true\n                                }\n                            }\n                        },\n                        orderBy: {\n                            position: \"asc\"\n                        }\n                    },\n                    _count: {\n                        select: {\n                            matches: true,\n                            likes: true\n                        }\n                    },\n                    likes: isOwnProfile ? undefined : {\n                        where: {\n                            userId: session.user.id\n                        },\n                        select: {\n                            id: true\n                        }\n                    }\n                },\n                orderBy: {\n                    updatedAt: \"desc\"\n                }\n            });\n            const formattedLists = lists.map((list)=>({\n                    id: list.id,\n                    name: list.name,\n                    description: list.description,\n                    isPublic: list.isPublic,\n                    color: list.color,\n                    emoji: list.emoji,\n                    createdAt: list.createdAt,\n                    updatedAt: list.updatedAt,\n                    matchCount: list._count.matches,\n                    likesCount: list._count.likes,\n                    isLiked: !isOwnProfile ? list.likes.length > 0 : false,\n                    matches: list.matches.slice(0, 4).map((item)=>({\n                            id: item.id,\n                            note: item.note,\n                            position: item.position,\n                            addedAt: item.addedAt,\n                            match: item.match\n                        })),\n                    isOwner: targetUserId === session.user.id\n                }));\n            return res.status(200).json({\n                success: true,\n                lists: formattedLists\n            });\n        } else if (req.method === \"POST\") {\n            const { name, description, isPublic = true, color, emoji } = req.body;\n            if (!name || name.trim().length === 0) {\n                return res.status(400).json({\n                    error: \"Le nom de la liste est obligatoire\"\n                });\n            }\n            if (name.length > 100) {\n                return res.status(400).json({\n                    error: \"Le nom ne peut pas d\\xe9passer 100 caract\\xe8res\"\n                });\n            }\n            if (description && description.length > 500) {\n                return res.status(400).json({\n                    error: \"La description ne peut pas d\\xe9passer 500 caract\\xe8res\"\n                });\n            }\n            // Vérifier que l'utilisateur n'a pas déjà une liste avec ce nom\n            const existingList = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.matchList.findFirst({\n                where: {\n                    userId: session.user.id,\n                    name: name.trim()\n                }\n            });\n            if (existingList) {\n                return res.status(400).json({\n                    error: \"Vous avez d\\xe9j\\xe0 une liste avec ce nom\"\n                });\n            }\n            const newList = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.matchList.create({\n                data: {\n                    name: name.trim(),\n                    description: description?.trim() || null,\n                    userId: session.user.id,\n                    isPublic: Boolean(isPublic),\n                    color: color || null,\n                    emoji: emoji || null\n                },\n                include: {\n                    _count: {\n                        select: {\n                            matches: true,\n                            likes: true\n                        }\n                    }\n                }\n            });\n            return res.status(201).json({\n                success: true,\n                message: `Liste \"${newList.name}\" créée avec succès ! 📝`,\n                list: {\n                    id: newList.id,\n                    name: newList.name,\n                    description: newList.description,\n                    isPublic: newList.isPublic,\n                    color: newList.color,\n                    emoji: newList.emoji,\n                    createdAt: newList.createdAt,\n                    updatedAt: newList.updatedAt,\n                    matchCount: 0,\n                    likesCount: 0,\n                    matches: [],\n                    isOwner: true\n                }\n            });\n        } else if (req.method === \"PUT\") {\n            const { listId, name, description, isPublic, color, emoji } = req.body;\n            if (!listId) {\n                return res.status(400).json({\n                    error: \"ID de la liste manquant\"\n                });\n            }\n            // Vérifier que l'utilisateur possède cette liste\n            const list = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.matchList.findFirst({\n                where: {\n                    id: listId,\n                    userId: session.user.id\n                }\n            });\n            if (!list) {\n                return res.status(404).json({\n                    error: \"Liste non trouv\\xe9e ou non autoris\\xe9e\"\n                });\n            }\n            const updateData = {};\n            if (name !== undefined) {\n                if (!name || name.trim().length === 0) {\n                    return res.status(400).json({\n                        error: \"Le nom de la liste est obligatoire\"\n                    });\n                }\n                if (name.length > 100) {\n                    return res.status(400).json({\n                        error: \"Le nom ne peut pas d\\xe9passer 100 caract\\xe8res\"\n                    });\n                }\n                // Vérifier l'unicité du nom (sauf pour la liste actuelle)\n                if (name.trim() !== list.name) {\n                    const existingList = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.matchList.findFirst({\n                        where: {\n                            userId: session.user.id,\n                            name: name.trim(),\n                            id: {\n                                not: listId\n                            }\n                        }\n                    });\n                    if (existingList) {\n                        return res.status(400).json({\n                            error: \"Vous avez d\\xe9j\\xe0 une liste avec ce nom\"\n                        });\n                    }\n                }\n                updateData.name = name.trim();\n            }\n            if (description !== undefined) {\n                if (description && description.length > 500) {\n                    return res.status(400).json({\n                        error: \"La description ne peut pas d\\xe9passer 500 caract\\xe8res\"\n                    });\n                }\n                updateData.description = description?.trim() || null;\n            }\n            if (isPublic !== undefined) updateData.isPublic = Boolean(isPublic);\n            if (color !== undefined) updateData.color = color || null;\n            if (emoji !== undefined) updateData.emoji = emoji || null;\n            const updatedList = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.matchList.update({\n                where: {\n                    id: listId\n                },\n                data: updateData,\n                include: {\n                    _count: {\n                        select: {\n                            matches: true,\n                            likes: true\n                        }\n                    }\n                }\n            });\n            return res.status(200).json({\n                success: true,\n                message: \"Liste mise \\xe0 jour avec succ\\xe8s ! ✅\",\n                list: {\n                    id: updatedList.id,\n                    name: updatedList.name,\n                    description: updatedList.description,\n                    isPublic: updatedList.isPublic,\n                    color: updatedList.color,\n                    emoji: updatedList.emoji,\n                    createdAt: updatedList.createdAt,\n                    updatedAt: updatedList.updatedAt,\n                    matchCount: updatedList._count.matches,\n                    likesCount: updatedList._count.likes,\n                    isOwner: true\n                }\n            });\n        } else if (req.method === \"DELETE\") {\n            const { listId } = req.query;\n            if (!listId) {\n                return res.status(400).json({\n                    error: \"ID de la liste manquant\"\n                });\n            }\n            // Vérifier que l'utilisateur possède cette liste\n            const list = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.matchList.findFirst({\n                where: {\n                    id: listId,\n                    userId: session.user.id\n                },\n                include: {\n                    _count: {\n                        select: {\n                            matches: true\n                        }\n                    }\n                }\n            });\n            if (!list) {\n                return res.status(404).json({\n                    error: \"Liste non trouv\\xe9e ou non autoris\\xe9e\"\n                });\n            }\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.matchList.delete({\n                where: {\n                    id: listId\n                }\n            });\n            return res.status(200).json({\n                success: true,\n                message: `Liste \"${list.name}\" supprimée avec succès (${list._count.matches} matchs)`,\n                deletedListId: listId\n            });\n        } else {\n            res.setHeader(\"Allow\", [\n                \"GET\",\n                \"POST\",\n                \"PUT\",\n                \"DELETE\"\n            ]);\n            res.status(405).end(`Method ${req.method} Not Allowed`);\n        }\n    } catch (error) {\n        console.error(\"❌ Erreur API match-lists:\", error);\n        return res.status(500).json({\n            error: \"Erreur serveur\",\n            details: error.message\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RSxHQUFHLENBQUMsQ0FBQyxPQUFPLEVBQUU5RSxJQUFJUSxNQUFNLENBQUMsWUFBWSxDQUFDO1FBQ3hEO0lBRUYsRUFBRSxPQUFPRCxPQUFZO1FBQ25Cd0UsUUFBUXhFLEtBQUssQ0FBQyw2QkFBNkJBO1FBQzNDLE9BQU9OLElBQUlJLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDMUJDLE9BQU87WUFDUHlFLFNBQVN6RSxNQUFNOEQsT0FBTztRQUN4QjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mb290cmF0ZS8uL3BhZ2VzL2FwaS9tYXRjaC1saXN0cy50cz9lMmQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhZ2VzL2FwaS9tYXRjaC1saXN0cy50c1xuaW1wb3J0IHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gJ25leHQnXG5pbXBvcnQgeyBnZXRTZXJ2ZXJTZXNzaW9uIH0gZnJvbSAnbmV4dC1hdXRoL25leHQnXG5pbXBvcnQgeyBhdXRoT3B0aW9ucyB9IGZyb20gJy4uLy4uL2xpYi9hdXRoJ1xuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSAnLi4vLi4vbGliL3ByaXNtYSdcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkge1xuICB0cnkge1xuICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBnZXRTZXJ2ZXJTZXNzaW9uKHJlcSwgcmVzLCBhdXRoT3B0aW9ucylcblxuICAgIGlmICghc2Vzc2lvbj8udXNlcj8uaWQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yOiAnTm9uIGNvbm5lY3TDqScgfSlcbiAgICB9XG5cbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ0dFVCcpIHtcbiAgICAgIGNvbnN0IHsgdXNlcklkLCBwdWJsaWM6IHB1YmxpY09ubHkgfSA9IHJlcS5xdWVyeVxuXG4gICAgICBjb25zdCB0YXJnZXRVc2VySWQgPSB1c2VySWQgYXMgc3RyaW5nIHx8IHNlc3Npb24udXNlci5pZFxuICAgICAgY29uc3QgaXNPd25Qcm9maWxlID0gdGFyZ2V0VXNlcklkID09PSBzZXNzaW9uLnVzZXIuaWRcblxuICAgICAgLy8gQ29uc3RydWlyZSBsZXMgZmlsdHJlc1xuICAgICAgY29uc3Qgd2hlcmVDbGF1c2U6IGFueSA9IHtcbiAgICAgICAgdXNlcklkOiB0YXJnZXRVc2VySWRcbiAgICAgIH1cblxuICAgICAgLy8gU2kgY2Ugbidlc3QgcGFzIHNvbiBwcm9wcmUgcHJvZmlsLCBuZSBtb250cmVyIHF1ZSBsZXMgbGlzdGVzIHB1YmxpcXVlc1xuICAgICAgaWYgKCFpc093blByb2ZpbGUgfHwgcHVibGljT25seSA9PT0gJ3RydWUnKSB7XG4gICAgICAgIHdoZXJlQ2xhdXNlLmlzUHVibGljID0gdHJ1ZVxuICAgICAgfVxuXG4gICAgICBjb25zdCBsaXN0cyA9IGF3YWl0IHByaXNtYS5tYXRjaExpc3QuZmluZE1hbnkoe1xuICAgICAgICB3aGVyZTogd2hlcmVDbGF1c2UsXG4gICAgICAgIGluY2x1ZGU6IHtcbiAgICAgICAgICBtYXRjaGVzOiB7XG4gICAgICAgICAgICBpbmNsdWRlOiB7XG4gICAgICAgICAgICAgIG1hdGNoOiB7XG4gICAgICAgICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICAgICAgICBpZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIGhvbWVUZWFtOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgYXdheVRlYW06IHRydWUsXG4gICAgICAgICAgICAgICAgICBob21lU2NvcmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICBhd2F5U2NvcmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICBkYXRlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgY29tcGV0aXRpb246IHRydWUsXG4gICAgICAgICAgICAgICAgICBzcG9ydDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIHZlbnVlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgaG9tZVRlYW1Mb2dvOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgYXdheVRlYW1Mb2dvOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgYXZnUmF0aW5nOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgdG90YWxSYXRpbmdzOiB0cnVlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb3JkZXJCeTogeyBwb3NpdGlvbjogJ2FzYycgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgX2NvdW50OiB7XG4gICAgICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICAgICAgbWF0Y2hlczogdHJ1ZSxcbiAgICAgICAgICAgICAgbGlrZXM6IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGxpa2VzOiBpc093blByb2ZpbGUgPyB1bmRlZmluZWQgOiB7XG4gICAgICAgICAgICB3aGVyZTogeyB1c2VySWQ6IHNlc3Npb24udXNlci5pZCB9LFxuICAgICAgICAgICAgc2VsZWN0OiB7IGlkOiB0cnVlIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG9yZGVyQnk6IHsgdXBkYXRlZEF0OiAnZGVzYycgfVxuICAgICAgfSlcblxuICAgICAgY29uc3QgZm9ybWF0dGVkTGlzdHMgPSBsaXN0cy5tYXAobGlzdCA9PiAoe1xuICAgICAgICBpZDogbGlzdC5pZCxcbiAgICAgICAgbmFtZTogbGlzdC5uYW1lLFxuICAgICAgICBkZXNjcmlwdGlvbjogbGlzdC5kZXNjcmlwdGlvbixcbiAgICAgICAgaXNQdWJsaWM6IGxpc3QuaXNQdWJsaWMsXG4gICAgICAgIGNvbG9yOiBsaXN0LmNvbG9yLFxuICAgICAgICBlbW9qaTogbGlzdC5lbW9qaSxcbiAgICAgICAgY3JlYXRlZEF0OiBsaXN0LmNyZWF0ZWRBdCxcbiAgICAgICAgdXBkYXRlZEF0OiBsaXN0LnVwZGF0ZWRBdCxcbiAgICAgICAgbWF0Y2hDb3VudDogbGlzdC5fY291bnQubWF0Y2hlcyxcbiAgICAgICAgbGlrZXNDb3VudDogbGlzdC5fY291bnQubGlrZXMsXG4gICAgICAgIGlzTGlrZWQ6ICFpc093blByb2ZpbGUgPyBsaXN0Lmxpa2VzLmxlbmd0aCA+IDAgOiBmYWxzZSxcbiAgICAgICAgbWF0Y2hlczogbGlzdC5tYXRjaGVzLnNsaWNlKDAsIDQpLm1hcChpdGVtID0+ICh7IC8vIFByZXZpZXcgZGVzIDQgcHJlbWllcnMgbWF0Y2hzXG4gICAgICAgICAgaWQ6IGl0ZW0uaWQsXG4gICAgICAgICAgbm90ZTogaXRlbS5ub3RlLFxuICAgICAgICAgIHBvc2l0aW9uOiBpdGVtLnBvc2l0aW9uLFxuICAgICAgICAgIGFkZGVkQXQ6IGl0ZW0uYWRkZWRBdCxcbiAgICAgICAgICBtYXRjaDogaXRlbS5tYXRjaFxuICAgICAgICB9KSksXG4gICAgICAgIGlzT3duZXI6IHRhcmdldFVzZXJJZCA9PT0gc2Vzc2lvbi51c2VyLmlkXG4gICAgICB9KSlcblxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgXG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsIFxuICAgICAgICBsaXN0czogZm9ybWF0dGVkTGlzdHMgXG4gICAgICB9KVxuXG4gICAgfSBlbHNlIGlmIChyZXEubWV0aG9kID09PSAnUE9TVCcpIHtcbiAgICAgIGNvbnN0IHsgbmFtZSwgZGVzY3JpcHRpb24sIGlzUHVibGljID0gdHJ1ZSwgY29sb3IsIGVtb2ppIH0gPSByZXEuYm9keVxuXG4gICAgICBpZiAoIW5hbWUgfHwgbmFtZS50cmltKCkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnTGUgbm9tIGRlIGxhIGxpc3RlIGVzdCBvYmxpZ2F0b2lyZScgfSlcbiAgICAgIH1cblxuICAgICAgaWYgKG5hbWUubGVuZ3RoID4gMTAwKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnTGUgbm9tIG5lIHBldXQgcGFzIGTDqXBhc3NlciAxMDAgY2FyYWN0w6hyZXMnIH0pXG4gICAgICB9XG5cbiAgICAgIGlmIChkZXNjcmlwdGlvbiAmJiBkZXNjcmlwdGlvbi5sZW5ndGggPiA1MDApIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdMYSBkZXNjcmlwdGlvbiBuZSBwZXV0IHBhcyBkw6lwYXNzZXIgNTAwIGNhcmFjdMOocmVzJyB9KVxuICAgICAgfVxuXG4gICAgICAvLyBWw6lyaWZpZXIgcXVlIGwndXRpbGlzYXRldXIgbidhIHBhcyBkw6lqw6AgdW5lIGxpc3RlIGF2ZWMgY2Ugbm9tXG4gICAgICBjb25zdCBleGlzdGluZ0xpc3QgPSBhd2FpdCBwcmlzbWEubWF0Y2hMaXN0LmZpbmRGaXJzdCh7XG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgdXNlcklkOiBzZXNzaW9uLnVzZXIuaWQsXG4gICAgICAgICAgbmFtZTogbmFtZS50cmltKClcbiAgICAgICAgfVxuICAgICAgfSlcblxuICAgICAgaWYgKGV4aXN0aW5nTGlzdCkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ1ZvdXMgYXZleiBkw6lqw6AgdW5lIGxpc3RlIGF2ZWMgY2Ugbm9tJyB9KVxuICAgICAgfVxuXG4gICAgICBjb25zdCBuZXdMaXN0ID0gYXdhaXQgcHJpc21hLm1hdGNoTGlzdC5jcmVhdGUoe1xuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgbmFtZTogbmFtZS50cmltKCksXG4gICAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uPy50cmltKCkgfHwgbnVsbCxcbiAgICAgICAgICB1c2VySWQ6IHNlc3Npb24udXNlci5pZCxcbiAgICAgICAgICBpc1B1YmxpYzogQm9vbGVhbihpc1B1YmxpYyksXG4gICAgICAgICAgY29sb3I6IGNvbG9yIHx8IG51bGwsXG4gICAgICAgICAgZW1vamk6IGVtb2ppIHx8IG51bGxcbiAgICAgICAgfSxcbiAgICAgICAgaW5jbHVkZToge1xuICAgICAgICAgIF9jb3VudDoge1xuICAgICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICAgIG1hdGNoZXM6IHRydWUsXG4gICAgICAgICAgICAgIGxpa2VzOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICBtZXNzYWdlOiBgTGlzdGUgXCIke25ld0xpc3QubmFtZX1cIiBjcsOpw6llIGF2ZWMgc3VjY8OocyAhIPCfk51gLFxuICAgICAgICBsaXN0OiB7XG4gICAgICAgICAgaWQ6IG5ld0xpc3QuaWQsXG4gICAgICAgICAgbmFtZTogbmV3TGlzdC5uYW1lLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBuZXdMaXN0LmRlc2NyaXB0aW9uLFxuICAgICAgICAgIGlzUHVibGljOiBuZXdMaXN0LmlzUHVibGljLFxuICAgICAgICAgIGNvbG9yOiBuZXdMaXN0LmNvbG9yLFxuICAgICAgICAgIGVtb2ppOiBuZXdMaXN0LmVtb2ppLFxuICAgICAgICAgIGNyZWF0ZWRBdDogbmV3TGlzdC5jcmVhdGVkQXQsXG4gICAgICAgICAgdXBkYXRlZEF0OiBuZXdMaXN0LnVwZGF0ZWRBdCxcbiAgICAgICAgICBtYXRjaENvdW50OiAwLFxuICAgICAgICAgIGxpa2VzQ291bnQ6IDAsXG4gICAgICAgICAgbWF0Y2hlczogW10sXG4gICAgICAgICAgaXNPd25lcjogdHJ1ZVxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgfSBlbHNlIGlmIChyZXEubWV0aG9kID09PSAnUFVUJykge1xuICAgICAgY29uc3QgeyBsaXN0SWQsIG5hbWUsIGRlc2NyaXB0aW9uLCBpc1B1YmxpYywgY29sb3IsIGVtb2ppIH0gPSByZXEuYm9keVxuXG4gICAgICBpZiAoIWxpc3RJZCkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ0lEIGRlIGxhIGxpc3RlIG1hbnF1YW50JyB9KVxuICAgICAgfVxuXG4gICAgICAvLyBWw6lyaWZpZXIgcXVlIGwndXRpbGlzYXRldXIgcG9zc8OoZGUgY2V0dGUgbGlzdGVcbiAgICAgIGNvbnN0IGxpc3QgPSBhd2FpdCBwcmlzbWEubWF0Y2hMaXN0LmZpbmRGaXJzdCh7XG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgaWQ6IGxpc3RJZCxcbiAgICAgICAgICB1c2VySWQ6IHNlc3Npb24udXNlci5pZFxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgICBpZiAoIWxpc3QpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6ICdMaXN0ZSBub24gdHJvdXbDqWUgb3Ugbm9uIGF1dG9yaXPDqWUnIH0pXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHVwZGF0ZURhdGE6IGFueSA9IHt9XG5cbiAgICAgIGlmIChuYW1lICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaWYgKCFuYW1lIHx8IG5hbWUudHJpbSgpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnTGUgbm9tIGRlIGxhIGxpc3RlIGVzdCBvYmxpZ2F0b2lyZScgfSlcbiAgICAgICAgfVxuICAgICAgICBpZiAobmFtZS5sZW5ndGggPiAxMDApIHtcbiAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ0xlIG5vbSBuZSBwZXV0IHBhcyBkw6lwYXNzZXIgMTAwIGNhcmFjdMOocmVzJyB9KVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gVsOpcmlmaWVyIGwndW5pY2l0w6kgZHUgbm9tIChzYXVmIHBvdXIgbGEgbGlzdGUgYWN0dWVsbGUpXG4gICAgICAgIGlmIChuYW1lLnRyaW0oKSAhPT0gbGlzdC5uYW1lKSB7XG4gICAgICAgICAgY29uc3QgZXhpc3RpbmdMaXN0ID0gYXdhaXQgcHJpc21hLm1hdGNoTGlzdC5maW5kRmlyc3Qoe1xuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgdXNlcklkOiBzZXNzaW9uLnVzZXIuaWQsXG4gICAgICAgICAgICAgIG5hbWU6IG5hbWUudHJpbSgpLFxuICAgICAgICAgICAgICBpZDogeyBub3Q6IGxpc3RJZCB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcblxuICAgICAgICAgIGlmIChleGlzdGluZ0xpc3QpIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnVm91cyBhdmV6IGTDqWrDoCB1bmUgbGlzdGUgYXZlYyBjZSBub20nIH0pXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdXBkYXRlRGF0YS5uYW1lID0gbmFtZS50cmltKClcbiAgICAgIH1cblxuICAgICAgaWYgKGRlc2NyaXB0aW9uICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaWYgKGRlc2NyaXB0aW9uICYmIGRlc2NyaXB0aW9uLmxlbmd0aCA+IDUwMCkge1xuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnTGEgZGVzY3JpcHRpb24gbmUgcGV1dCBwYXMgZMOpcGFzc2VyIDUwMCBjYXJhY3TDqHJlcycgfSlcbiAgICAgICAgfVxuICAgICAgICB1cGRhdGVEYXRhLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24/LnRyaW0oKSB8fCBudWxsXG4gICAgICB9XG5cbiAgICAgIGlmIChpc1B1YmxpYyAhPT0gdW5kZWZpbmVkKSB1cGRhdGVEYXRhLmlzUHVibGljID0gQm9vbGVhbihpc1B1YmxpYylcbiAgICAgIGlmIChjb2xvciAhPT0gdW5kZWZpbmVkKSB1cGRhdGVEYXRhLmNvbG9yID0gY29sb3IgfHwgbnVsbFxuICAgICAgaWYgKGVtb2ppICE9PSB1bmRlZmluZWQpIHVwZGF0ZURhdGEuZW1vamkgPSBlbW9qaSB8fCBudWxsXG5cbiAgICAgIGNvbnN0IHVwZGF0ZWRMaXN0ID0gYXdhaXQgcHJpc21hLm1hdGNoTGlzdC51cGRhdGUoe1xuICAgICAgICB3aGVyZTogeyBpZDogbGlzdElkIH0sXG4gICAgICAgIGRhdGE6IHVwZGF0ZURhdGEsXG4gICAgICAgIGluY2x1ZGU6IHtcbiAgICAgICAgICBfY291bnQ6IHtcbiAgICAgICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgICAgICBtYXRjaGVzOiB0cnVlLFxuICAgICAgICAgICAgICBsaWtlczogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSlcblxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgbWVzc2FnZTogJ0xpc3RlIG1pc2Ugw6Agam91ciBhdmVjIHN1Y2PDqHMgISDinIUnLFxuICAgICAgICBsaXN0OiB7XG4gICAgICAgICAgaWQ6IHVwZGF0ZWRMaXN0LmlkLFxuICAgICAgICAgIG5hbWU6IHVwZGF0ZWRMaXN0Lm5hbWUsXG4gICAgICAgICAgZGVzY3JpcHRpb246IHVwZGF0ZWRMaXN0LmRlc2NyaXB0aW9uLFxuICAgICAgICAgIGlzUHVibGljOiB1cGRhdGVkTGlzdC5pc1B1YmxpYyxcbiAgICAgICAgICBjb2xvcjogdXBkYXRlZExpc3QuY29sb3IsXG4gICAgICAgICAgZW1vamk6IHVwZGF0ZWRMaXN0LmVtb2ppLFxuICAgICAgICAgIGNyZWF0ZWRBdDogdXBkYXRlZExpc3QuY3JlYXRlZEF0LFxuICAgICAgICAgIHVwZGF0ZWRBdDogdXBkYXRlZExpc3QudXBkYXRlZEF0LFxuICAgICAgICAgIG1hdGNoQ291bnQ6IHVwZGF0ZWRMaXN0Ll9jb3VudC5tYXRjaGVzLFxuICAgICAgICAgIGxpa2VzQ291bnQ6IHVwZGF0ZWRMaXN0Ll9jb3VudC5saWtlcyxcbiAgICAgICAgICBpc093bmVyOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIH0pXG5cbiAgICB9IGVsc2UgaWYgKHJlcS5tZXRob2QgPT09ICdERUxFVEUnKSB7XG4gICAgICBjb25zdCB7IGxpc3RJZCB9ID0gcmVxLnF1ZXJ5XG5cbiAgICAgIGlmICghbGlzdElkKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnSUQgZGUgbGEgbGlzdGUgbWFucXVhbnQnIH0pXG4gICAgICB9XG5cbiAgICAgIC8vIFbDqXJpZmllciBxdWUgbCd1dGlsaXNhdGV1ciBwb3Nzw6hkZSBjZXR0ZSBsaXN0ZVxuICAgICAgY29uc3QgbGlzdCA9IGF3YWl0IHByaXNtYS5tYXRjaExpc3QuZmluZEZpcnN0KHtcbiAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICBpZDogbGlzdElkIGFzIHN0cmluZyxcbiAgICAgICAgICB1c2VySWQ6IHNlc3Npb24udXNlci5pZFxuICAgICAgICB9LFxuICAgICAgICBpbmNsdWRlOiB7XG4gICAgICAgICAgX2NvdW50OiB7XG4gICAgICAgICAgICBzZWxlY3Q6IHsgbWF0Y2hlczogdHJ1ZSB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgICBpZiAoIWxpc3QpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6ICdMaXN0ZSBub24gdHJvdXbDqWUgb3Ugbm9uIGF1dG9yaXPDqWUnIH0pXG4gICAgICB9XG5cbiAgICAgIGF3YWl0IHByaXNtYS5tYXRjaExpc3QuZGVsZXRlKHtcbiAgICAgICAgd2hlcmU6IHsgaWQ6IGxpc3RJZCBhcyBzdHJpbmcgfVxuICAgICAgfSlcblxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgbWVzc2FnZTogYExpc3RlIFwiJHtsaXN0Lm5hbWV9XCIgc3VwcHJpbcOpZSBhdmVjIHN1Y2PDqHMgKCR7bGlzdC5fY291bnQubWF0Y2hlc30gbWF0Y2hzKWAsXG4gICAgICAgIGRlbGV0ZWRMaXN0SWQ6IGxpc3RJZFxuICAgICAgfSlcblxuICAgIH0gZWxzZSB7XG4gICAgICByZXMuc2V0SGVhZGVyKCdBbGxvdycsIFsnR0VUJywgJ1BPU1QnLCAnUFVUJywgJ0RFTEVURSddKVxuICAgICAgcmVzLnN0YXR1cyg0MDUpLmVuZChgTWV0aG9kICR7cmVxLm1ldGhvZH0gTm90IEFsbG93ZWRgKVxuICAgIH1cblxuICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgY29uc29sZS5lcnJvcign4p2MIEVycmV1ciBBUEkgbWF0Y2gtbGlzdHM6JywgZXJyb3IpXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgIGVycm9yOiAnRXJyZXVyIHNlcnZldXInLFxuICAgICAgZGV0YWlsczogZXJyb3IubWVzc2FnZVxuICAgIH0pXG4gIH1cbn0iXSwibmFtZXMiOlsiZ2V0U2VydmVyU2Vzc2lvbiIsImF1dGhPcHRpb25zIiwicHJpc21hIiwiaGFuZGxlciIsInJlcSIsInJlcyIsInNlc3Npb24iLCJ1c2VyIiwiaWQiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJtZXRob2QiLCJ1c2VySWQiLCJwdWJsaWMiLCJwdWJsaWNPbmx5IiwicXVlcnkiLCJ0YXJnZXRVc2VySWQiLCJpc093blByb2ZpbGUiLCJ3aGVyZUNsYXVzZSIsImlzUHVibGljIiwibGlzdHMiLCJtYXRjaExpc3QiLCJmaW5kTWFueSIsIndoZXJlIiwiaW5jbHVkZSIsIm1hdGNoZXMiLCJtYXRjaCIsInNlbGVjdCIsImhvbWVUZWFtIiwiYXdheVRlYW0iLCJob21lU2NvcmUiLCJhd2F5U2NvcmUiLCJkYXRlIiwiY29tcGV0aXRpb24iLCJzcG9ydCIsInZlbnVlIiwiaG9tZVRlYW1Mb2dvIiwiYXdheVRlYW1Mb2dvIiwiYXZnUmF0aW5nIiwidG90YWxSYXRpbmdzIiwib3JkZXJCeSIsInBvc2l0aW9uIiwiX2NvdW50IiwibGlrZXMiLCJ1bmRlZmluZWQiLCJ1cGRhdGVkQXQiLCJmb3JtYXR0ZWRMaXN0cyIsIm1hcCIsImxpc3QiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJjb2xvciIsImVtb2ppIiwiY3JlYXRlZEF0IiwibWF0Y2hDb3VudCIsImxpa2VzQ291bnQiLCJpc0xpa2VkIiwibGVuZ3RoIiwic2xpY2UiLCJpdGVtIiwibm90ZSIsImFkZGVkQXQiLCJpc093bmVyIiwic3VjY2VzcyIsImJvZHkiLCJ0cmltIiwiZXhpc3RpbmdMaXN0IiwiZmluZEZpcnN0IiwibmV3TGlzdCIsImNyZWF0ZSIsImRhdGEiLCJCb29sZWFuIiwibWVzc2FnZSIsImxpc3RJZCIsInVwZGF0ZURhdGEiLCJub3QiLCJ1cGRhdGVkTGlzdCIsInVwZGF0ZSIsImRlbGV0ZSIsImRlbGV0ZWRMaXN0SWQiLCJzZXRIZWFkZXIiLCJlbmQiLCJjb25zb2xlIiwiZGV0YWlscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/match-lists.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmatch-lists&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fmatch-lists.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();