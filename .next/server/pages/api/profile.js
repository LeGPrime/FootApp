"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/profile";
exports.ids = ["pages/api/profile"];
exports.modules = {

/***/ "@next-auth/prisma-adapter":
/*!********************************************!*\
  !*** external "@next-auth/prisma-adapter" ***!
  \********************************************/
/***/ ((module) => {

module.exports = require("@next-auth/prisma-adapter");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("bcryptjs");

/***/ }),

/***/ "next-auth/next":
/*!*********************************!*\
  !*** external "next-auth/next" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("next-auth/next");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "next-auth/providers/github":
/*!*********************************************!*\
  !*** external "next-auth/providers/github" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/github");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprofile&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fprofile.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprofile&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fprofile.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_profile_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/profile.ts */ \"(api)/./pages/api/profile.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_profile_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_profile_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/profile\",\n        pathname: \"/api/profile\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_profile_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnByb2ZpbGUmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRnByb2ZpbGUudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDbUQ7QUFDbkQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLGtEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxrREFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mb290cmF0ZS8/MzBlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL3Byb2ZpbGUudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9wcm9maWxlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvcHJvZmlsZVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprofile&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fprofile.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var _next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @next-auth/prisma-adapter */ \"@next-auth/prisma-adapter\");\n/* harmony import */ var _next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/github */ \"next-auth/providers/github\");\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./prisma */ \"(api)/./lib/prisma.ts\");\n\n\n\n\n\nconst authOptions = {\n    adapter: (0,_next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__.PrismaAdapter)(_prisma__WEBPACK_IMPORTED_MODULE_4__.prisma),\n    providers: [\n        next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1___default()({\n            clientId: process.env.GITHUB_ID,\n            clientSecret: process.env.GITHUB_SECRET\n        }),\n        next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2___default()({\n            name: \"credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Mot de passe\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    return null;\n                }\n                const user = await _prisma__WEBPACK_IMPORTED_MODULE_4__.prisma.user.findUnique({\n                    where: {\n                        email: credentials.email\n                    }\n                });\n                if (!user || !user.password) {\n                    return null;\n                }\n                const isPasswordValid = await bcryptjs__WEBPACK_IMPORTED_MODULE_3___default().compare(credentials.password, user.password);\n                if (!isPasswordValid) {\n                    return null;\n                }\n                return {\n                    id: user.id,\n                    email: user.email,\n                    name: user.name,\n                    username: user.username\n                };\n            }\n        })\n    ],\n    callbacks: {\n        session: async ({ session, token })=>{\n            if (session?.user) {\n                session.user.id = token.sub;\n            }\n            return session;\n        },\n        jwt: async ({ user, token })=>{\n            if (user) {\n                token.uid = user.id;\n            }\n            return token;\n        }\n    },\n    session: {\n        strategy: \"jwt\"\n    },\n    pages: {\n        signIn: \"/auth/signin\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvYXV0aC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQ3lEO0FBQ0Y7QUFDVTtBQUNwQztBQUNJO0FBRTFCLE1BQU1LLGNBQStCO0lBQzFDQyxTQUFTTix3RUFBYUEsQ0FBQ0ksMkNBQU1BO0lBQzdCRyxXQUFXO1FBQ1ROLGlFQUFjQSxDQUFDO1lBQ2JPLFVBQVVDLFFBQVFDLEdBQUcsQ0FBQ0MsU0FBUztZQUMvQkMsY0FBY0gsUUFBUUMsR0FBRyxDQUFDRyxhQUFhO1FBQ3pDO1FBQ0FYLHNFQUFtQkEsQ0FBQztZQUNsQlksTUFBTTtZQUNOQyxhQUFhO2dCQUNYQyxPQUFPO29CQUFFQyxPQUFPO29CQUFTQyxNQUFNO2dCQUFRO2dCQUN2Q0MsVUFBVTtvQkFBRUYsT0FBTztvQkFBZ0JDLE1BQU07Z0JBQVc7WUFDdEQ7WUFDQSxNQUFNRSxXQUFVTCxXQUFXO2dCQUN6QixJQUFJLENBQUNBLGFBQWFDLFNBQVMsQ0FBQ0QsYUFBYUksVUFBVTtvQkFDakQsT0FBTztnQkFDVDtnQkFFQSxNQUFNRSxPQUFPLE1BQU1qQiwyQ0FBTUEsQ0FBQ2lCLElBQUksQ0FBQ0MsVUFBVSxDQUFDO29CQUN4Q0MsT0FBTzt3QkFDTFAsT0FBT0QsWUFBWUMsS0FBSztvQkFDMUI7Z0JBQ0Y7Z0JBRUEsSUFBSSxDQUFDSyxRQUFRLENBQUNBLEtBQUtGLFFBQVEsRUFBRTtvQkFDM0IsT0FBTztnQkFDVDtnQkFFQSxNQUFNSyxrQkFBa0IsTUFBTXJCLHVEQUFjLENBQzFDWSxZQUFZSSxRQUFRLEVBQ3BCRSxLQUFLRixRQUFRO2dCQUdmLElBQUksQ0FBQ0ssaUJBQWlCO29CQUNwQixPQUFPO2dCQUNUO2dCQUVBLE9BQU87b0JBQ0xFLElBQUlMLEtBQUtLLEVBQUU7b0JBQ1hWLE9BQU9LLEtBQUtMLEtBQUs7b0JBQ2pCRixNQUFNTyxLQUFLUCxJQUFJO29CQUNmYSxVQUFVTixLQUFLTSxRQUFRO2dCQUN6QjtZQUNGO1FBQ0Y7S0FDRDtJQUNEQyxXQUFXO1FBQ1RDLFNBQVMsT0FBTyxFQUFFQSxPQUFPLEVBQUVDLEtBQUssRUFBRTtZQUNoQyxJQUFJRCxTQUFTUixNQUFNO2dCQUNqQlEsUUFBUVIsSUFBSSxDQUFDSyxFQUFFLEdBQUdJLE1BQU1DLEdBQUc7WUFDN0I7WUFDQSxPQUFPRjtRQUNUO1FBQ0FHLEtBQUssT0FBTyxFQUFFWCxJQUFJLEVBQUVTLEtBQUssRUFBRTtZQUN6QixJQUFJVCxNQUFNO2dCQUNSUyxNQUFNRyxHQUFHLEdBQUdaLEtBQUtLLEVBQUU7WUFDckI7WUFDQSxPQUFPSTtRQUNUO0lBQ0Y7SUFDQUQsU0FBUztRQUNQSyxVQUFVO0lBQ1o7SUFDQUMsT0FBTztRQUNMQyxRQUFRO0lBQ1Y7QUFDRixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZm9vdHJhdGUvLi9saWIvYXV0aC50cz9iZjdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBdXRoT3B0aW9ucyB9IGZyb20gXCJuZXh0LWF1dGhcIlxuaW1wb3J0IHsgUHJpc21hQWRhcHRlciB9IGZyb20gXCJAbmV4dC1hdXRoL3ByaXNtYS1hZGFwdGVyXCJcbmltcG9ydCBHaXRodWJQcm92aWRlciBmcm9tIFwibmV4dC1hdXRoL3Byb3ZpZGVycy9naXRodWJcIlxuaW1wb3J0IENyZWRlbnRpYWxzUHJvdmlkZXIgZnJvbSBcIm5leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHNcIlxuaW1wb3J0IGJjcnlwdCBmcm9tIFwiYmNyeXB0anNcIlxuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSBcIi4vcHJpc21hXCJcblxuZXhwb3J0IGNvbnN0IGF1dGhPcHRpb25zOiBOZXh0QXV0aE9wdGlvbnMgPSB7XG4gIGFkYXB0ZXI6IFByaXNtYUFkYXB0ZXIocHJpc21hKSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgR2l0aHViUHJvdmlkZXIoe1xuICAgICAgY2xpZW50SWQ6IHByb2Nlc3MuZW52LkdJVEhVQl9JRCEsXG4gICAgICBjbGllbnRTZWNyZXQ6IHByb2Nlc3MuZW52LkdJVEhVQl9TRUNSRVQhLFxuICAgIH0pLFxuICAgIENyZWRlbnRpYWxzUHJvdmlkZXIoe1xuICAgICAgbmFtZTogXCJjcmVkZW50aWFsc1wiLFxuICAgICAgY3JlZGVudGlhbHM6IHtcbiAgICAgICAgZW1haWw6IHsgbGFiZWw6IFwiRW1haWxcIiwgdHlwZTogXCJlbWFpbFwiIH0sXG4gICAgICAgIHBhc3N3b3JkOiB7IGxhYmVsOiBcIk1vdCBkZSBwYXNzZVwiLCB0eXBlOiBcInBhc3N3b3JkXCIgfVxuICAgICAgfSxcbiAgICAgIGFzeW5jIGF1dGhvcml6ZShjcmVkZW50aWFscykge1xuICAgICAgICBpZiAoIWNyZWRlbnRpYWxzPy5lbWFpbCB8fCAhY3JlZGVudGlhbHM/LnBhc3N3b3JkKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHtcbiAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgZW1haWw6IGNyZWRlbnRpYWxzLmVtYWlsXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIGlmICghdXNlciB8fCAhdXNlci5wYXNzd29yZCkge1xuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBpc1Bhc3N3b3JkVmFsaWQgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShcbiAgICAgICAgICBjcmVkZW50aWFscy5wYXNzd29yZCxcbiAgICAgICAgICB1c2VyLnBhc3N3b3JkXG4gICAgICAgIClcblxuICAgICAgICBpZiAoIWlzUGFzc3dvcmRWYWxpZCkge1xuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGlkOiB1c2VyLmlkLFxuICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxuICAgICAgICAgIG5hbWU6IHVzZXIubmFtZSxcbiAgICAgICAgICB1c2VybmFtZTogdXNlci51c2VybmFtZSxcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIF0sXG4gIGNhbGxiYWNrczoge1xuICAgIHNlc3Npb246IGFzeW5jICh7IHNlc3Npb24sIHRva2VuIH0pID0+IHtcbiAgICAgIGlmIChzZXNzaW9uPy51c2VyKSB7XG4gICAgICAgIHNlc3Npb24udXNlci5pZCA9IHRva2VuLnN1YiFcbiAgICAgIH1cbiAgICAgIHJldHVybiBzZXNzaW9uXG4gICAgfSxcbiAgICBqd3Q6IGFzeW5jICh7IHVzZXIsIHRva2VuIH0pID0+IHtcbiAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgIHRva2VuLnVpZCA9IHVzZXIuaWRcbiAgICAgIH1cbiAgICAgIHJldHVybiB0b2tlblxuICAgIH0sXG4gIH0sXG4gIHNlc3Npb246IHtcbiAgICBzdHJhdGVneTogJ2p3dCcsXG4gIH0sXG4gIHBhZ2VzOiB7XG4gICAgc2lnbkluOiAnL2F1dGgvc2lnbmluJyxcbiAgfSxcbn1cbiJdLCJuYW1lcyI6WyJQcmlzbWFBZGFwdGVyIiwiR2l0aHViUHJvdmlkZXIiLCJDcmVkZW50aWFsc1Byb3ZpZGVyIiwiYmNyeXB0IiwicHJpc21hIiwiYXV0aE9wdGlvbnMiLCJhZGFwdGVyIiwicHJvdmlkZXJzIiwiY2xpZW50SWQiLCJwcm9jZXNzIiwiZW52IiwiR0lUSFVCX0lEIiwiY2xpZW50U2VjcmV0IiwiR0lUSFVCX1NFQ1JFVCIsIm5hbWUiLCJjcmVkZW50aWFscyIsImVtYWlsIiwibGFiZWwiLCJ0eXBlIiwicGFzc3dvcmQiLCJhdXRob3JpemUiLCJ1c2VyIiwiZmluZFVuaXF1ZSIsIndoZXJlIiwiaXNQYXNzd29yZFZhbGlkIiwiY29tcGFyZSIsImlkIiwidXNlcm5hbWUiLCJjYWxsYmFja3MiLCJzZXNzaW9uIiwidG9rZW4iLCJzdWIiLCJqd3QiLCJ1aWQiLCJzdHJhdGVneSIsInBhZ2VzIiwic2lnbkluIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/auth.ts\n");

/***/ }),

/***/ "(api)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUU3QyxNQUFNQyxrQkFBa0JDO0FBSWpCLE1BQU1DLFNBQVNGLGdCQUFnQkUsTUFBTSxJQUFJLElBQUlILHdEQUFZQSxHQUFFO0FBRWxFLElBQUlJLElBQXlCLEVBQWNILGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zvb3RyYXRlLy4vbGliL3ByaXNtYS50cz85ODIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50J1xuXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWxUaGlzIGFzIHVua25vd24gYXMge1xuICBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxufVxuXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/PyBuZXcgUHJpc21hQ2xpZW50KClcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWFcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwicHJpc21hIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/prisma.ts\n");

/***/ }),

/***/ "(api)/./pages/api/profile.ts":
/*!******************************!*\
  !*** ./pages/api/profile.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/next */ \"next-auth/next\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_next__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/auth */ \"(api)/./lib/auth.ts\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/prisma */ \"(api)/./lib/prisma.ts\");\n// pages/api/profile.ts - Version améliorée avec stats par sport\n\n\n\nasync function handler(req, res) {\n    console.log(\"\\uD83D\\uDD25 API Profile appel\\xe9e!\");\n    try {\n        const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_0__.getServerSession)(req, res, _lib_auth__WEBPACK_IMPORTED_MODULE_1__.authOptions);\n        if (!session?.user?.id) {\n            return res.status(401).json({\n                error: \"Non connect\\xe9\"\n            });\n        }\n        if (req.method === \"GET\") {\n            const { userId } = req.query;\n            const targetUserId = userId || session.user.id;\n            console.log(\"\\uD83C\\uDFAF Recherche utilisateur:\", targetUserId);\n            // Récupérer l'utilisateur avec TOUTES ses notations\n            const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.user.findUnique({\n                where: {\n                    id: targetUserId\n                },\n                select: {\n                    id: true,\n                    name: true,\n                    email: true,\n                    username: true,\n                    bio: true,\n                    image: true,\n                    createdAt: true,\n                    // Notations de matchs\n                    ratings: {\n                        include: {\n                            match: {\n                                select: {\n                                    id: true,\n                                    homeTeam: true,\n                                    awayTeam: true,\n                                    competition: true,\n                                    date: true,\n                                    homeScore: true,\n                                    awayScore: true,\n                                    venue: true,\n                                    sport: true\n                                }\n                            }\n                        },\n                        orderBy: {\n                            createdAt: \"desc\"\n                        },\n                        take: 50\n                    },\n                    // 🆕 Notations de joueurs\n                    playerRatings: {\n                        include: {\n                            player: true,\n                            match: {\n                                select: {\n                                    id: true,\n                                    homeTeam: true,\n                                    awayTeam: true,\n                                    competition: true,\n                                    date: true,\n                                    homeScore: true,\n                                    awayScore: true,\n                                    sport: true\n                                }\n                            }\n                        },\n                        orderBy: {\n                            createdAt: \"desc\"\n                        },\n                        take: 50\n                    },\n                    _count: {\n                        select: {\n                            ratings: true,\n                            playerRatings: true,\n                            sentFriendships: {\n                                where: {\n                                    status: \"ACCEPTED\"\n                                }\n                            },\n                            receivedFriendships: {\n                                where: {\n                                    status: \"ACCEPTED\"\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n            if (!user) {\n                console.log(\"❌ Utilisateur non trouv\\xe9\");\n                return res.status(404).json({\n                    error: \"Utilisateur non trouv\\xe9\"\n                });\n            }\n            console.log(\"✅ Utilisateur trouv\\xe9:\", user.name);\n            console.log(`📊 ${user.ratings.length} notations de matchs, ${user.playerRatings.length} notations de joueurs`);\n            // Essayer de récupérer les nouvelles colonnes séparément (optionnel)\n            let location = null;\n            let favoriteClub = null;\n            try {\n                const extraData = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.$queryRaw`\n          SELECT location, favorite_club \n          FROM users \n          WHERE id = ${targetUserId}\n        `;\n                if (extraData.length > 0) {\n                    location = extraData[0].location;\n                    favoriteClub = extraData[0].favorite_club;\n                }\n            } catch (error) {\n                console.log(\"⚠️ Colonnes location/favorite_club pas encore disponibles\");\n            }\n            // 🆕 Calculer les statistiques COMPLÈTES et PAR SPORT\n            const totalRatings = user.ratings.length;\n            const totalPlayerRatings = user.playerRatings.length;\n            const avgRating = totalRatings > 0 ? user.ratings.reduce((sum, r)=>sum + r.rating, 0) / totalRatings : 0;\n            const avgPlayerRating = totalPlayerRatings > 0 ? user.playerRatings.reduce((sum, r)=>sum + r.rating, 0) / totalPlayerRatings : 0;\n            // 🆕 STATS PAR SPORT\n            const getSportFromCompetition = (competition)=>{\n                const basketballCompetitions = [\n                    \"NBA\",\n                    \"EuroLeague\",\n                    \"WNBA\",\n                    \"FIBA\"\n                ];\n                const mmaCompetitions = [\n                    \"UFC\",\n                    \"Bellator\",\n                    \"ONE\",\n                    \"PFL\"\n                ];\n                const rugbyCompetitions = [\n                    \"Six Nations\",\n                    \"Top 14\",\n                    \"Premiership\",\n                    \"URC\"\n                ];\n                const f1Competitions = [\n                    \"Formula 1\",\n                    \"F1\",\n                    \"Monaco GP\",\n                    \"British GP\"\n                ];\n                if (basketballCompetitions.some((comp)=>competition.includes(comp))) return \"basketball\";\n                if (mmaCompetitions.some((comp)=>competition.includes(comp))) return \"mma\";\n                if (rugbyCompetitions.some((comp)=>competition.includes(comp))) return \"rugby\";\n                if (f1Competitions.some((comp)=>competition.includes(comp))) return \"f1\";\n                return \"football\";\n            };\n            // Grouper les notations par sport\n            const ratingsBySport = {};\n            const playerRatingsBySport = {};\n            user.ratings.forEach((rating)=>{\n                const sport = rating.match.sport ? rating.match.sport.toLowerCase() : getSportFromCompetition(rating.match.competition);\n                if (!ratingsBySport[sport]) ratingsBySport[sport] = [];\n                ratingsBySport[sport].push(rating);\n            });\n            user.playerRatings.forEach((rating)=>{\n                const sport = rating.match.sport ? rating.match.sport.toLowerCase() : getSportFromCompetition(rating.match.competition);\n                if (!playerRatingsBySport[sport]) playerRatingsBySport[sport] = [];\n                playerRatingsBySport[sport].push(rating);\n            });\n            // Calculer les stats par sport\n            const statsBySport = {};\n            const allSports = [\n                \"football\",\n                \"basketball\",\n                \"mma\",\n                \"rugby\",\n                \"f1\"\n            ];\n            allSports.forEach((sport)=>{\n                const sportRatings = ratingsBySport[sport] || [];\n                const sportPlayerRatings = playerRatingsBySport[sport] || [];\n                const sportAvgRating = sportRatings.length > 0 ? sportRatings.reduce((sum, r)=>sum + r.rating, 0) / sportRatings.length : 0;\n                const sportAvgPlayerRating = sportPlayerRatings.length > 0 ? sportPlayerRatings.reduce((sum, r)=>sum + r.rating, 0) / sportPlayerRatings.length : 0;\n                // Compétition préférée pour ce sport\n                const competitionCounts = {};\n                sportRatings.forEach((rating)=>{\n                    const comp = rating.match.competition;\n                    competitionCounts[comp] = (competitionCounts[comp] || 0) + 1;\n                });\n                const favoriteCompetition = Object.entries(competitionCounts).sort(([, a], [, b])=>b - a)[0]?.[0] || null;\n                statsBySport[sport] = {\n                    totalRatings: sportRatings.length,\n                    avgRating: Number(sportAvgRating.toFixed(1)),\n                    totalPlayerRatings: sportPlayerRatings.length,\n                    avgPlayerRating: Number(sportAvgPlayerRating.toFixed(1)),\n                    favoriteCompetition\n                };\n            });\n            // Top matchs\n            const topMatches = user.ratings.filter((r)=>r.rating >= 4).sort((a, b)=>b.rating - a.rating).slice(0, 10);\n            // 🆕 Top joueurs notés\n            const topPlayerRatings = user.playerRatings.filter((r)=>r.rating >= 8).sort((a, b)=>b.rating - a.rating).slice(0, 10);\n            // Répartition des notes DE MATCHS\n            const ratingDistribution = Array.from({\n                length: 5\n            }, (_, i)=>{\n                const rating = i + 1;\n                const count = user.ratings.filter((r)=>r.rating === rating).length;\n                return {\n                    rating,\n                    count,\n                    percentage: totalRatings > 0 ? count / totalRatings * 100 : 0\n                };\n            });\n            // 🆕 Répartition des notes DE JOUEURS (sur 10)\n            const playerRatingDistribution = Array.from({\n                length: 10\n            }, (_, i)=>{\n                const rating = i + 1;\n                const count = user.playerRatings.filter((r)=>r.rating === rating).length;\n                return {\n                    rating,\n                    count,\n                    percentage: totalPlayerRatings > 0 ? count / totalPlayerRatings * 100 : 0\n                };\n            });\n            // Compétition préférée (globale)\n            const competitionCounts = {};\n            user.ratings.forEach((rating)=>{\n                const comp = rating.match.competition;\n                competitionCounts[comp] = (competitionCounts[comp] || 0) + 1;\n            });\n            const favoriteCompetition = Object.entries(competitionCounts).sort(([, a], [, b])=>b - a)[0]?.[0] || null;\n            // 🆕 Joueur le mieux noté\n            const bestRatedPlayer = user.playerRatings.length > 0 ? user.playerRatings.reduce((best, current)=>current.rating > best.rating ? current : best) : null;\n            // Activité récente\n            const sixMonthsAgo = new Date();\n            sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);\n            const recentActivity = user.ratings.filter((r)=>new Date(r.createdAt) > sixMonthsAgo).length;\n            const recentPlayerActivity = user.playerRatings.filter((r)=>new Date(r.createdAt) > sixMonthsAgo).length;\n            // Essayer de récupérer les équipes suivies\n            let followedTeams = [];\n            try {\n                const teamFollows = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.$queryRaw`\n          SELECT tf.created_at as followed_since, t.* \n          FROM team_follows tf\n          JOIN teams t ON tf.team_id = t.id\n          WHERE tf.user_id = ${targetUserId}\n        `;\n                followedTeams = teamFollows.map((team)=>({\n                        id: team.id,\n                        name: team.name,\n                        logo: team.logo,\n                        sport: team.sport?.toLowerCase() || \"football\",\n                        league: team.league,\n                        country: team.country,\n                        founded: team.founded,\n                        website: team.website,\n                        followersCount: 0,\n                        followedSince: team.followed_since,\n                        isFollowed: true\n                    }));\n            } catch (error) {\n                console.log(\"⚠️ Tables \\xe9quipes pas encore disponibles\");\n            }\n            const stats = {\n                totalRatings,\n                totalPlayerRatings,\n                avgRating: Number(avgRating.toFixed(1)),\n                avgPlayerRating: Number(avgPlayerRating.toFixed(1)),\n                totalFriends: user._count.sentFriendships + user._count.receivedFriendships,\n                favoriteCompetition,\n                bestRatedPlayer,\n                recentActivity,\n                recentPlayerActivity,\n                topMatches,\n                topPlayerRatings,\n                ratingDistribution,\n                playerRatingDistribution,\n                totalTeamsFollowed: followedTeams.length,\n                favoriteSports: [],\n                // 🆕 STATS PAR SPORT\n                statsBySport\n            };\n            const profileData = {\n                user: {\n                    id: user.id,\n                    name: user.name,\n                    email: user.email,\n                    username: user.username,\n                    bio: user.bio,\n                    image: user.image,\n                    location,\n                    favoriteClub,\n                    createdAt: user.createdAt\n                },\n                stats,\n                recentRatings: user.ratings.slice(0, 10),\n                recentPlayerRatings: user.playerRatings.slice(0, 10),\n                followedTeams\n            };\n            console.log(\"✅ Profil complet construit avec succ\\xe8s\");\n            console.log(`📊 Stats: ${totalRatings} notes matchs, ${totalPlayerRatings} notes joueurs`);\n            console.log(`🏆 Stats par sport calculées pour ${Object.keys(statsBySport).length} sports`);\n            res.status(200).json(profileData);\n        } else if (req.method === \"PUT\") {\n            // 🆕 Mise à jour améliorée du profil\n            const { name, username, bio, location, favoriteClub } = req.body;\n            console.log(\"\\uD83D\\uDCBE Mise \\xe0 jour profil:\", {\n                name,\n                username,\n                bio,\n                location,\n                favoriteClub\n            });\n            try {\n                // Mise à jour des colonnes de base avec validation\n                const updateData = {};\n                if (name !== undefined) updateData.name = name.trim().slice(0, 100) // Limite à 100 caractères\n                ;\n                if (username !== undefined) {\n                    // Validation username: alphanumerique + underscore, 3-30 caractères\n                    const cleanUsername = username.trim().toLowerCase().replace(/[^a-z0-9_]/g, \"\").slice(0, 30);\n                    if (cleanUsername.length >= 3) {\n                        // Vérifier l'unicité du username\n                        const existingUser = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.user.findFirst({\n                            where: {\n                                username: cleanUsername,\n                                id: {\n                                    not: session.user.id\n                                }\n                            }\n                        });\n                        if (existingUser) {\n                            return res.status(400).json({\n                                error: \"Ce nom d'utilisateur est d\\xe9j\\xe0 pris\",\n                                field: \"username\"\n                            });\n                        }\n                        updateData.username = cleanUsername;\n                    }\n                }\n                if (bio !== undefined) updateData.bio = bio.trim().slice(0, 200) // Limite à 200 caractères\n                ;\n                const updatedUser = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.user.update({\n                    where: {\n                        id: session.user.id\n                    },\n                    data: updateData,\n                    select: {\n                        id: true,\n                        name: true,\n                        username: true,\n                        bio: true,\n                        email: true,\n                        image: true\n                    }\n                });\n                // Essayer de mettre à jour les nouvelles colonnes\n                if (location !== undefined || favoriteClub !== undefined) {\n                    try {\n                        const locationValue = location?.trim().slice(0, 100) || null;\n                        const favoriteClubValue = favoriteClub?.trim().slice(0, 100) || null;\n                        await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.$queryRaw`\n              UPDATE users \n              SET location = ${locationValue}, favorite_club = ${favoriteClubValue}\n              WHERE id = ${session.user.id}\n            `;\n                        console.log(\"✅ Colonnes \\xe9tendues mises \\xe0 jour\");\n                    } catch (error) {\n                        console.log(\"⚠️ Colonnes location/favorite_club pas disponibles pour la mise \\xe0 jour\");\n                    }\n                }\n                console.log(\"✅ Profil mis \\xe0 jour avec succ\\xe8s\");\n                res.status(200).json({\n                    user: updatedUser,\n                    message: \"Profil mis \\xe0 jour avec succ\\xe8s !\"\n                });\n            } catch (error) {\n                console.error(\"❌ Erreur mise \\xe0 jour profil:\", error);\n                if (error.code === \"P2002\" && error.meta?.target?.includes(\"username\")) {\n                    return res.status(400).json({\n                        error: \"Ce nom d'utilisateur est d\\xe9j\\xe0 pris\",\n                        field: \"username\"\n                    });\n                }\n                res.status(500).json({\n                    error: \"Erreur lors de la mise \\xe0 jour du profil\",\n                    details: error.message\n                });\n            }\n        } else {\n            res.setHeader(\"Allow\", [\n                \"GET\",\n                \"PUT\"\n            ]);\n            res.status(405).end(`Method ${req.method} Not Allowed`);\n        }\n    } catch (error) {\n        console.error(\"\\uD83D\\uDCA5 ERREUR API PROFILE:\", error);\n        res.status(500).json({\n            error: \"Erreur serveur\",\n            details: error.message\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQztvQkFDZCxFQUFFLE9BQU9NLE9BQU87d0JBQ2RQLFFBQVFDLEdBQUcsQ0FBQztvQkFDZDtnQkFDRjtnQkFFQUQsUUFBUUMsR0FBRyxDQUFDO2dCQUNaRixJQUFJTSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO29CQUNuQkgsTUFBTWtJO29CQUNOSyxTQUFTO2dCQUNYO1lBRUYsRUFBRSxPQUFPbkksT0FBWTtnQkFDbkJQLFFBQVFPLEtBQUssQ0FBQyxtQ0FBZ0NBO2dCQUU5QyxJQUFJQSxNQUFNb0ksSUFBSSxLQUFLLFdBQVdwSSxNQUFNcUksSUFBSSxFQUFFQyxRQUFRakYsU0FBUyxhQUFhO29CQUN0RSxPQUFPN0QsSUFBSU0sTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQzt3QkFDMUJDLE9BQU87d0JBQ1A2SCxPQUFPO29CQUNUO2dCQUNGO2dCQUVBckksSUFBSU0sTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztvQkFDbkJDLE9BQU87b0JBQ1B1SSxTQUFTdkksTUFBTW1JLE9BQU87Z0JBQ3hCO1lBQ0Y7UUFFRixPQUFPO1lBQ0wzSSxJQUFJZ0osU0FBUyxDQUFDLFNBQVM7Z0JBQUM7Z0JBQU87YUFBTTtZQUNyQ2hKLElBQUlNLE1BQU0sQ0FBQyxLQUFLMkksR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFbEosSUFBSVUsTUFBTSxDQUFDLFlBQVksQ0FBQztRQUN4RDtJQUVGLEVBQUUsT0FBT0QsT0FBTztRQUNkUCxRQUFRTyxLQUFLLENBQUMsb0NBQTBCQTtRQUN4Q1IsSUFBSU0sTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUNuQkMsT0FBTztZQUNQdUksU0FBU3ZJLE1BQU1tSSxPQUFPO1FBQ3hCO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zvb3RyYXRlLy4vcGFnZXMvYXBpL3Byb2ZpbGUudHM/OWQ5MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWdlcy9hcGkvcHJvZmlsZS50cyAtIFZlcnNpb24gYW3DqWxpb3LDqWUgYXZlYyBzdGF0cyBwYXIgc3BvcnRcbmltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0J1xuaW1wb3J0IHsgZ2V0U2VydmVyU2Vzc2lvbiB9IGZyb20gJ25leHQtYXV0aC9uZXh0J1xuaW1wb3J0IHsgYXV0aE9wdGlvbnMgfSBmcm9tICcuLi8uLi9saWIvYXV0aCdcbmltcG9ydCB7IHByaXNtYSB9IGZyb20gJy4uLy4uL2xpYi9wcmlzbWEnXG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxOiBOZXh0QXBpUmVxdWVzdCwgcmVzOiBOZXh0QXBpUmVzcG9uc2UpIHtcbiAgY29uc29sZS5sb2coJ/CflKUgQVBJIFByb2ZpbGUgYXBwZWzDqWUhJylcbiAgXG4gIHRyeSB7XG4gICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGdldFNlcnZlclNlc3Npb24ocmVxLCByZXMsIGF1dGhPcHRpb25zKVxuXG4gICAgaWYgKCFzZXNzaW9uPy51c2VyPy5pZCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgZXJyb3I6ICdOb24gY29ubmVjdMOpJyB9KVxuICAgIH1cblxuICAgIGlmIChyZXEubWV0aG9kID09PSAnR0VUJykge1xuICAgICAgY29uc3QgeyB1c2VySWQgfSA9IHJlcS5xdWVyeVxuICAgICAgY29uc3QgdGFyZ2V0VXNlcklkID0gdXNlcklkIGFzIHN0cmluZyB8fCBzZXNzaW9uLnVzZXIuaWRcbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coJ/Cfjq8gUmVjaGVyY2hlIHV0aWxpc2F0ZXVyOicsIHRhcmdldFVzZXJJZClcblxuICAgICAgLy8gUsOpY3Vww6lyZXIgbCd1dGlsaXNhdGV1ciBhdmVjIFRPVVRFUyBzZXMgbm90YXRpb25zXG4gICAgICBjb25zdCB1c2VyID0gYXdhaXQgcHJpc21hLnVzZXIuZmluZFVuaXF1ZSh7XG4gICAgICAgIHdoZXJlOiB7IGlkOiB0YXJnZXRVc2VySWQgfSxcbiAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgaWQ6IHRydWUsXG4gICAgICAgICAgbmFtZTogdHJ1ZSxcbiAgICAgICAgICBlbWFpbDogdHJ1ZSxcbiAgICAgICAgICB1c2VybmFtZTogdHJ1ZSxcbiAgICAgICAgICBiaW86IHRydWUsXG4gICAgICAgICAgaW1hZ2U6IHRydWUsXG4gICAgICAgICAgY3JlYXRlZEF0OiB0cnVlLFxuICAgICAgICAgIC8vIE5vdGF0aW9ucyBkZSBtYXRjaHNcbiAgICAgICAgICByYXRpbmdzOiB7XG4gICAgICAgICAgICBpbmNsdWRlOiB7XG4gICAgICAgICAgICAgIG1hdGNoOiB7XG4gICAgICAgICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICAgICAgICBpZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIGhvbWVUZWFtOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgYXdheVRlYW06IHRydWUsXG4gICAgICAgICAgICAgICAgICBjb21wZXRpdGlvbjogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIGRhdGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICBob21lU2NvcmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICBhd2F5U2NvcmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICB2ZW51ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIHNwb3J0OiB0cnVlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb3JkZXJCeTogeyBjcmVhdGVkQXQ6ICdkZXNjJyB9LFxuICAgICAgICAgICAgdGFrZTogNTBcbiAgICAgICAgICB9LFxuICAgICAgICAgIC8vIPCfhpUgTm90YXRpb25zIGRlIGpvdWV1cnNcbiAgICAgICAgICBwbGF5ZXJSYXRpbmdzOiB7XG4gICAgICAgICAgICBpbmNsdWRlOiB7XG4gICAgICAgICAgICAgIHBsYXllcjogdHJ1ZSxcbiAgICAgICAgICAgICAgbWF0Y2g6IHtcbiAgICAgICAgICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICAgICAgICAgIGlkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgaG9tZVRlYW06IHRydWUsXG4gICAgICAgICAgICAgICAgICBhd2F5VGVhbTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIGNvbXBldGl0aW9uOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgZGF0ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIGhvbWVTY29yZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIGF3YXlTY29yZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIHNwb3J0OiB0cnVlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb3JkZXJCeTogeyBjcmVhdGVkQXQ6ICdkZXNjJyB9LFxuICAgICAgICAgICAgdGFrZTogNTBcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9jb3VudDoge1xuICAgICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICAgIHJhdGluZ3M6IHRydWUsXG4gICAgICAgICAgICAgIHBsYXllclJhdGluZ3M6IHRydWUsXG4gICAgICAgICAgICAgIHNlbnRGcmllbmRzaGlwczogeyB3aGVyZTogeyBzdGF0dXM6ICdBQ0NFUFRFRCcgfSB9LFxuICAgICAgICAgICAgICByZWNlaXZlZEZyaWVuZHNoaXBzOiB7IHdoZXJlOiB7IHN0YXR1czogJ0FDQ0VQVEVEJyB9IH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pXG5cbiAgICAgIGlmICghdXNlcikge1xuICAgICAgICBjb25zb2xlLmxvZygn4p2MIFV0aWxpc2F0ZXVyIG5vbiB0cm91dsOpJylcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6ICdVdGlsaXNhdGV1ciBub24gdHJvdXbDqScgfSlcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJ+KchSBVdGlsaXNhdGV1ciB0cm91dsOpOicsIHVzZXIubmFtZSlcbiAgICAgIGNvbnNvbGUubG9nKGDwn5OKICR7dXNlci5yYXRpbmdzLmxlbmd0aH0gbm90YXRpb25zIGRlIG1hdGNocywgJHt1c2VyLnBsYXllclJhdGluZ3MubGVuZ3RofSBub3RhdGlvbnMgZGUgam91ZXVyc2ApXG5cbiAgICAgIC8vIEVzc2F5ZXIgZGUgcsOpY3Vww6lyZXIgbGVzIG5vdXZlbGxlcyBjb2xvbm5lcyBzw6lwYXLDqW1lbnQgKG9wdGlvbm5lbClcbiAgICAgIGxldCBsb2NhdGlvbiA9IG51bGxcbiAgICAgIGxldCBmYXZvcml0ZUNsdWIgPSBudWxsXG4gICAgICBcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGV4dHJhRGF0YSA9IGF3YWl0IHByaXNtYS4kcXVlcnlSYXdgXG4gICAgICAgICAgU0VMRUNUIGxvY2F0aW9uLCBmYXZvcml0ZV9jbHViIFxuICAgICAgICAgIEZST00gdXNlcnMgXG4gICAgICAgICAgV0hFUkUgaWQgPSAke3RhcmdldFVzZXJJZH1cbiAgICAgICAgYCBhcyBhbnlbXVxuICAgICAgICBcbiAgICAgICAgaWYgKGV4dHJhRGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgbG9jYXRpb24gPSBleHRyYURhdGFbMF0ubG9jYXRpb25cbiAgICAgICAgICBmYXZvcml0ZUNsdWIgPSBleHRyYURhdGFbMF0uZmF2b3JpdGVfY2x1YlxuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZygn4pqg77iPIENvbG9ubmVzIGxvY2F0aW9uL2Zhdm9yaXRlX2NsdWIgcGFzIGVuY29yZSBkaXNwb25pYmxlcycpXG4gICAgICB9XG5cbiAgICAgIC8vIPCfhpUgQ2FsY3VsZXIgbGVzIHN0YXRpc3RpcXVlcyBDT01QTMOIVEVTIGV0IFBBUiBTUE9SVFxuICAgICAgY29uc3QgdG90YWxSYXRpbmdzID0gdXNlci5yYXRpbmdzLmxlbmd0aFxuICAgICAgY29uc3QgdG90YWxQbGF5ZXJSYXRpbmdzID0gdXNlci5wbGF5ZXJSYXRpbmdzLmxlbmd0aFxuICAgICAgY29uc3QgYXZnUmF0aW5nID0gdG90YWxSYXRpbmdzID4gMCBcbiAgICAgICAgPyB1c2VyLnJhdGluZ3MucmVkdWNlKChzdW0sIHIpID0+IHN1bSArIHIucmF0aW5nLCAwKSAvIHRvdGFsUmF0aW5ncyBcbiAgICAgICAgOiAwXG4gICAgICBjb25zdCBhdmdQbGF5ZXJSYXRpbmcgPSB0b3RhbFBsYXllclJhdGluZ3MgPiAwIFxuICAgICAgICA/IHVzZXIucGxheWVyUmF0aW5ncy5yZWR1Y2UoKHN1bSwgcikgPT4gc3VtICsgci5yYXRpbmcsIDApIC8gdG90YWxQbGF5ZXJSYXRpbmdzIFxuICAgICAgICA6IDBcblxuICAgICAgLy8g8J+GlSBTVEFUUyBQQVIgU1BPUlRcbiAgICAgIGNvbnN0IGdldFNwb3J0RnJvbUNvbXBldGl0aW9uID0gKGNvbXBldGl0aW9uOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICAgICAgICBjb25zdCBiYXNrZXRiYWxsQ29tcGV0aXRpb25zID0gWydOQkEnLCAnRXVyb0xlYWd1ZScsICdXTkJBJywgJ0ZJQkEnXVxuICAgICAgICBjb25zdCBtbWFDb21wZXRpdGlvbnMgPSBbJ1VGQycsICdCZWxsYXRvcicsICdPTkUnLCAnUEZMJ11cbiAgICAgICAgY29uc3QgcnVnYnlDb21wZXRpdGlvbnMgPSBbJ1NpeCBOYXRpb25zJywgJ1RvcCAxNCcsICdQcmVtaWVyc2hpcCcsICdVUkMnXVxuICAgICAgICBjb25zdCBmMUNvbXBldGl0aW9ucyA9IFsnRm9ybXVsYSAxJywgJ0YxJywgJ01vbmFjbyBHUCcsICdCcml0aXNoIEdQJ11cbiAgICAgICAgXG4gICAgICAgIGlmIChiYXNrZXRiYWxsQ29tcGV0aXRpb25zLnNvbWUoY29tcCA9PiBjb21wZXRpdGlvbi5pbmNsdWRlcyhjb21wKSkpIHJldHVybiAnYmFza2V0YmFsbCdcbiAgICAgICAgaWYgKG1tYUNvbXBldGl0aW9ucy5zb21lKGNvbXAgPT4gY29tcGV0aXRpb24uaW5jbHVkZXMoY29tcCkpKSByZXR1cm4gJ21tYSdcbiAgICAgICAgaWYgKHJ1Z2J5Q29tcGV0aXRpb25zLnNvbWUoY29tcCA9PiBjb21wZXRpdGlvbi5pbmNsdWRlcyhjb21wKSkpIHJldHVybiAncnVnYnknXG4gICAgICAgIGlmIChmMUNvbXBldGl0aW9ucy5zb21lKGNvbXAgPT4gY29tcGV0aXRpb24uaW5jbHVkZXMoY29tcCkpKSByZXR1cm4gJ2YxJ1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuICdmb290YmFsbCdcbiAgICAgIH1cblxuICAgICAgLy8gR3JvdXBlciBsZXMgbm90YXRpb25zIHBhciBzcG9ydFxuICAgICAgY29uc3QgcmF0aW5nc0J5U3BvcnQ6IHsgW3Nwb3J0OiBzdHJpbmddOiBhbnlbXSB9ID0ge31cbiAgICAgIGNvbnN0IHBsYXllclJhdGluZ3NCeVNwb3J0OiB7IFtzcG9ydDogc3RyaW5nXTogYW55W10gfSA9IHt9XG5cbiAgICAgIHVzZXIucmF0aW5ncy5mb3JFYWNoKHJhdGluZyA9PiB7XG4gICAgICAgIGNvbnN0IHNwb3J0ID0gcmF0aW5nLm1hdGNoLnNwb3J0ID8gcmF0aW5nLm1hdGNoLnNwb3J0LnRvTG93ZXJDYXNlKCkgOiBnZXRTcG9ydEZyb21Db21wZXRpdGlvbihyYXRpbmcubWF0Y2guY29tcGV0aXRpb24pXG4gICAgICAgIGlmICghcmF0aW5nc0J5U3BvcnRbc3BvcnRdKSByYXRpbmdzQnlTcG9ydFtzcG9ydF0gPSBbXVxuICAgICAgICByYXRpbmdzQnlTcG9ydFtzcG9ydF0ucHVzaChyYXRpbmcpXG4gICAgICB9KVxuXG4gICAgICB1c2VyLnBsYXllclJhdGluZ3MuZm9yRWFjaChyYXRpbmcgPT4ge1xuICAgICAgICBjb25zdCBzcG9ydCA9IHJhdGluZy5tYXRjaC5zcG9ydCA/IHJhdGluZy5tYXRjaC5zcG9ydC50b0xvd2VyQ2FzZSgpIDogZ2V0U3BvcnRGcm9tQ29tcGV0aXRpb24ocmF0aW5nLm1hdGNoLmNvbXBldGl0aW9uKVxuICAgICAgICBpZiAoIXBsYXllclJhdGluZ3NCeVNwb3J0W3Nwb3J0XSkgcGxheWVyUmF0aW5nc0J5U3BvcnRbc3BvcnRdID0gW11cbiAgICAgICAgcGxheWVyUmF0aW5nc0J5U3BvcnRbc3BvcnRdLnB1c2gocmF0aW5nKVxuICAgICAgfSlcblxuICAgICAgLy8gQ2FsY3VsZXIgbGVzIHN0YXRzIHBhciBzcG9ydFxuICAgICAgY29uc3Qgc3RhdHNCeVNwb3J0OiB7IFtzcG9ydDogc3RyaW5nXTogYW55IH0gPSB7fVxuICAgICAgXG4gICAgICBjb25zdCBhbGxTcG9ydHMgPSBbJ2Zvb3RiYWxsJywgJ2Jhc2tldGJhbGwnLCAnbW1hJywgJ3J1Z2J5JywgJ2YxJ11cbiAgICAgIGFsbFNwb3J0cy5mb3JFYWNoKHNwb3J0ID0+IHtcbiAgICAgICAgY29uc3Qgc3BvcnRSYXRpbmdzID0gcmF0aW5nc0J5U3BvcnRbc3BvcnRdIHx8IFtdXG4gICAgICAgIGNvbnN0IHNwb3J0UGxheWVyUmF0aW5ncyA9IHBsYXllclJhdGluZ3NCeVNwb3J0W3Nwb3J0XSB8fCBbXVxuICAgICAgICBcbiAgICAgICAgY29uc3Qgc3BvcnRBdmdSYXRpbmcgPSBzcG9ydFJhdGluZ3MubGVuZ3RoID4gMFxuICAgICAgICAgID8gc3BvcnRSYXRpbmdzLnJlZHVjZSgoc3VtLCByKSA9PiBzdW0gKyByLnJhdGluZywgMCkgLyBzcG9ydFJhdGluZ3MubGVuZ3RoXG4gICAgICAgICAgOiAwXG4gICAgICAgIFxuICAgICAgICBjb25zdCBzcG9ydEF2Z1BsYXllclJhdGluZyA9IHNwb3J0UGxheWVyUmF0aW5ncy5sZW5ndGggPiAwXG4gICAgICAgICAgPyBzcG9ydFBsYXllclJhdGluZ3MucmVkdWNlKChzdW0sIHIpID0+IHN1bSArIHIucmF0aW5nLCAwKSAvIHNwb3J0UGxheWVyUmF0aW5ncy5sZW5ndGhcbiAgICAgICAgICA6IDBcblxuICAgICAgICAvLyBDb21ww6l0aXRpb24gcHLDqWbDqXLDqWUgcG91ciBjZSBzcG9ydFxuICAgICAgICBjb25zdCBjb21wZXRpdGlvbkNvdW50czogUmVjb3JkPHN0cmluZywgbnVtYmVyPiA9IHt9XG4gICAgICAgIHNwb3J0UmF0aW5ncy5mb3JFYWNoKHJhdGluZyA9PiB7XG4gICAgICAgICAgY29uc3QgY29tcCA9IHJhdGluZy5tYXRjaC5jb21wZXRpdGlvblxuICAgICAgICAgIGNvbXBldGl0aW9uQ291bnRzW2NvbXBdID0gKGNvbXBldGl0aW9uQ291bnRzW2NvbXBdIHx8IDApICsgMVxuICAgICAgICB9KVxuICAgICAgICBcbiAgICAgICAgY29uc3QgZmF2b3JpdGVDb21wZXRpdGlvbiA9IE9iamVjdC5lbnRyaWVzKGNvbXBldGl0aW9uQ291bnRzKVxuICAgICAgICAgIC5zb3J0KChbLGFdLCBbLGJdKSA9PiBiIC0gYSlbMF0/LlswXSB8fCBudWxsXG5cbiAgICAgICAgc3RhdHNCeVNwb3J0W3Nwb3J0XSA9IHtcbiAgICAgICAgICB0b3RhbFJhdGluZ3M6IHNwb3J0UmF0aW5ncy5sZW5ndGgsXG4gICAgICAgICAgYXZnUmF0aW5nOiBOdW1iZXIoc3BvcnRBdmdSYXRpbmcudG9GaXhlZCgxKSksXG4gICAgICAgICAgdG90YWxQbGF5ZXJSYXRpbmdzOiBzcG9ydFBsYXllclJhdGluZ3MubGVuZ3RoLFxuICAgICAgICAgIGF2Z1BsYXllclJhdGluZzogTnVtYmVyKHNwb3J0QXZnUGxheWVyUmF0aW5nLnRvRml4ZWQoMSkpLFxuICAgICAgICAgIGZhdm9yaXRlQ29tcGV0aXRpb25cbiAgICAgICAgfVxuICAgICAgfSlcblxuICAgICAgLy8gVG9wIG1hdGNoc1xuICAgICAgY29uc3QgdG9wTWF0Y2hlcyA9IHVzZXIucmF0aW5nc1xuICAgICAgICAuZmlsdGVyKHIgPT4gci5yYXRpbmcgPj0gNClcbiAgICAgICAgLnNvcnQoKGEsIGIpID0+IGIucmF0aW5nIC0gYS5yYXRpbmcpXG4gICAgICAgIC5zbGljZSgwLCAxMClcblxuICAgICAgLy8g8J+GlSBUb3Agam91ZXVycyBub3TDqXNcbiAgICAgIGNvbnN0IHRvcFBsYXllclJhdGluZ3MgPSB1c2VyLnBsYXllclJhdGluZ3NcbiAgICAgICAgLmZpbHRlcihyID0+IHIucmF0aW5nID49IDgpXG4gICAgICAgIC5zb3J0KChhLCBiKSA9PiBiLnJhdGluZyAtIGEucmF0aW5nKVxuICAgICAgICAuc2xpY2UoMCwgMTApXG5cbiAgICAgIC8vIFLDqXBhcnRpdGlvbiBkZXMgbm90ZXMgREUgTUFUQ0hTXG4gICAgICBjb25zdCByYXRpbmdEaXN0cmlidXRpb24gPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiA1IH0sIChfLCBpKSA9PiB7XG4gICAgICAgIGNvbnN0IHJhdGluZyA9IGkgKyAxXG4gICAgICAgIGNvbnN0IGNvdW50ID0gdXNlci5yYXRpbmdzLmZpbHRlcihyID0+IHIucmF0aW5nID09PSByYXRpbmcpLmxlbmd0aFxuICAgICAgICByZXR1cm4geyBcbiAgICAgICAgICByYXRpbmcsIFxuICAgICAgICAgIGNvdW50LCBcbiAgICAgICAgICBwZXJjZW50YWdlOiB0b3RhbFJhdGluZ3MgPiAwID8gKGNvdW50IC8gdG90YWxSYXRpbmdzKSAqIDEwMCA6IDAgXG4gICAgICAgIH1cbiAgICAgIH0pXG5cbiAgICAgIC8vIPCfhpUgUsOpcGFydGl0aW9uIGRlcyBub3RlcyBERSBKT1VFVVJTIChzdXIgMTApXG4gICAgICBjb25zdCBwbGF5ZXJSYXRpbmdEaXN0cmlidXRpb24gPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiAxMCB9LCAoXywgaSkgPT4ge1xuICAgICAgICBjb25zdCByYXRpbmcgPSBpICsgMVxuICAgICAgICBjb25zdCBjb3VudCA9IHVzZXIucGxheWVyUmF0aW5ncy5maWx0ZXIociA9PiByLnJhdGluZyA9PT0gcmF0aW5nKS5sZW5ndGhcbiAgICAgICAgcmV0dXJuIHsgXG4gICAgICAgICAgcmF0aW5nLCBcbiAgICAgICAgICBjb3VudCwgXG4gICAgICAgICAgcGVyY2VudGFnZTogdG90YWxQbGF5ZXJSYXRpbmdzID4gMCA/IChjb3VudCAvIHRvdGFsUGxheWVyUmF0aW5ncykgKiAxMDAgOiAwIFxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgICAvLyBDb21ww6l0aXRpb24gcHLDqWbDqXLDqWUgKGdsb2JhbGUpXG4gICAgICBjb25zdCBjb21wZXRpdGlvbkNvdW50czogUmVjb3JkPHN0cmluZywgbnVtYmVyPiA9IHt9XG4gICAgICB1c2VyLnJhdGluZ3MuZm9yRWFjaChyYXRpbmcgPT4ge1xuICAgICAgICBjb25zdCBjb21wID0gcmF0aW5nLm1hdGNoLmNvbXBldGl0aW9uXG4gICAgICAgIGNvbXBldGl0aW9uQ291bnRzW2NvbXBdID0gKGNvbXBldGl0aW9uQ291bnRzW2NvbXBdIHx8IDApICsgMVxuICAgICAgfSlcbiAgICAgIFxuICAgICAgY29uc3QgZmF2b3JpdGVDb21wZXRpdGlvbiA9IE9iamVjdC5lbnRyaWVzKGNvbXBldGl0aW9uQ291bnRzKVxuICAgICAgICAuc29ydCgoWyxhXSwgWyxiXSkgPT4gYiAtIGEpWzBdPy5bMF0gfHwgbnVsbFxuXG4gICAgICAvLyDwn4aVIEpvdWV1ciBsZSBtaWV1eCBub3TDqVxuICAgICAgY29uc3QgYmVzdFJhdGVkUGxheWVyID0gdXNlci5wbGF5ZXJSYXRpbmdzLmxlbmd0aCA+IDAgXG4gICAgICAgID8gdXNlci5wbGF5ZXJSYXRpbmdzLnJlZHVjZSgoYmVzdCwgY3VycmVudCkgPT4gXG4gICAgICAgICAgICBjdXJyZW50LnJhdGluZyA+IGJlc3QucmF0aW5nID8gY3VycmVudCA6IGJlc3RcbiAgICAgICAgICApXG4gICAgICAgIDogbnVsbFxuXG4gICAgICAvLyBBY3Rpdml0w6kgcsOpY2VudGVcbiAgICAgIGNvbnN0IHNpeE1vbnRoc0FnbyA9IG5ldyBEYXRlKClcbiAgICAgIHNpeE1vbnRoc0Fnby5zZXRNb250aChzaXhNb250aHNBZ28uZ2V0TW9udGgoKSAtIDYpXG4gICAgICBcbiAgICAgIGNvbnN0IHJlY2VudEFjdGl2aXR5ID0gdXNlci5yYXRpbmdzXG4gICAgICAgIC5maWx0ZXIociA9PiBuZXcgRGF0ZShyLmNyZWF0ZWRBdCkgPiBzaXhNb250aHNBZ28pXG4gICAgICAgIC5sZW5ndGhcbiAgICAgIFxuICAgICAgY29uc3QgcmVjZW50UGxheWVyQWN0aXZpdHkgPSB1c2VyLnBsYXllclJhdGluZ3NcbiAgICAgICAgLmZpbHRlcihyID0+IG5ldyBEYXRlKHIuY3JlYXRlZEF0KSA+IHNpeE1vbnRoc0FnbylcbiAgICAgICAgLmxlbmd0aFxuXG4gICAgICAvLyBFc3NheWVyIGRlIHLDqWN1cMOpcmVyIGxlcyDDqXF1aXBlcyBzdWl2aWVzXG4gICAgICBsZXQgZm9sbG93ZWRUZWFtcyA9IFtdXG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCB0ZWFtRm9sbG93cyA9IGF3YWl0IHByaXNtYS4kcXVlcnlSYXdgXG4gICAgICAgICAgU0VMRUNUIHRmLmNyZWF0ZWRfYXQgYXMgZm9sbG93ZWRfc2luY2UsIHQuKiBcbiAgICAgICAgICBGUk9NIHRlYW1fZm9sbG93cyB0ZlxuICAgICAgICAgIEpPSU4gdGVhbXMgdCBPTiB0Zi50ZWFtX2lkID0gdC5pZFxuICAgICAgICAgIFdIRVJFIHRmLnVzZXJfaWQgPSAke3RhcmdldFVzZXJJZH1cbiAgICAgICAgYCBhcyBhbnlbXVxuICAgICAgICBcbiAgICAgICAgZm9sbG93ZWRUZWFtcyA9IHRlYW1Gb2xsb3dzLm1hcCh0ZWFtID0+ICh7XG4gICAgICAgICAgaWQ6IHRlYW0uaWQsXG4gICAgICAgICAgbmFtZTogdGVhbS5uYW1lLFxuICAgICAgICAgIGxvZ286IHRlYW0ubG9nbyxcbiAgICAgICAgICBzcG9ydDogdGVhbS5zcG9ydD8udG9Mb3dlckNhc2UoKSB8fCAnZm9vdGJhbGwnLFxuICAgICAgICAgIGxlYWd1ZTogdGVhbS5sZWFndWUsXG4gICAgICAgICAgY291bnRyeTogdGVhbS5jb3VudHJ5LFxuICAgICAgICAgIGZvdW5kZWQ6IHRlYW0uZm91bmRlZCxcbiAgICAgICAgICB3ZWJzaXRlOiB0ZWFtLndlYnNpdGUsXG4gICAgICAgICAgZm9sbG93ZXJzQ291bnQ6IDAsXG4gICAgICAgICAgZm9sbG93ZWRTaW5jZTogdGVhbS5mb2xsb3dlZF9zaW5jZSxcbiAgICAgICAgICBpc0ZvbGxvd2VkOiB0cnVlXG4gICAgICAgIH0pKVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ+KaoO+4jyBUYWJsZXMgw6lxdWlwZXMgcGFzIGVuY29yZSBkaXNwb25pYmxlcycpXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHN0YXRzID0ge1xuICAgICAgICB0b3RhbFJhdGluZ3MsXG4gICAgICAgIHRvdGFsUGxheWVyUmF0aW5ncyxcbiAgICAgICAgYXZnUmF0aW5nOiBOdW1iZXIoYXZnUmF0aW5nLnRvRml4ZWQoMSkpLFxuICAgICAgICBhdmdQbGF5ZXJSYXRpbmc6IE51bWJlcihhdmdQbGF5ZXJSYXRpbmcudG9GaXhlZCgxKSksXG4gICAgICAgIHRvdGFsRnJpZW5kczogdXNlci5fY291bnQuc2VudEZyaWVuZHNoaXBzICsgdXNlci5fY291bnQucmVjZWl2ZWRGcmllbmRzaGlwcyxcbiAgICAgICAgZmF2b3JpdGVDb21wZXRpdGlvbixcbiAgICAgICAgYmVzdFJhdGVkUGxheWVyLFxuICAgICAgICByZWNlbnRBY3Rpdml0eSxcbiAgICAgICAgcmVjZW50UGxheWVyQWN0aXZpdHksXG4gICAgICAgIHRvcE1hdGNoZXMsXG4gICAgICAgIHRvcFBsYXllclJhdGluZ3MsXG4gICAgICAgIHJhdGluZ0Rpc3RyaWJ1dGlvbixcbiAgICAgICAgcGxheWVyUmF0aW5nRGlzdHJpYnV0aW9uLFxuICAgICAgICB0b3RhbFRlYW1zRm9sbG93ZWQ6IGZvbGxvd2VkVGVhbXMubGVuZ3RoLFxuICAgICAgICBmYXZvcml0ZVNwb3J0czogW10sXG4gICAgICAgIC8vIPCfhpUgU1RBVFMgUEFSIFNQT1JUXG4gICAgICAgIHN0YXRzQnlTcG9ydFxuICAgICAgfVxuXG4gICAgICBjb25zdCBwcm9maWxlRGF0YSA9IHtcbiAgICAgICAgdXNlcjoge1xuICAgICAgICAgIGlkOiB1c2VyLmlkLFxuICAgICAgICAgIG5hbWU6IHVzZXIubmFtZSxcbiAgICAgICAgICBlbWFpbDogdXNlci5lbWFpbCxcbiAgICAgICAgICB1c2VybmFtZTogdXNlci51c2VybmFtZSxcbiAgICAgICAgICBiaW86IHVzZXIuYmlvLFxuICAgICAgICAgIGltYWdlOiB1c2VyLmltYWdlLFxuICAgICAgICAgIGxvY2F0aW9uLFxuICAgICAgICAgIGZhdm9yaXRlQ2x1YixcbiAgICAgICAgICBjcmVhdGVkQXQ6IHVzZXIuY3JlYXRlZEF0XG4gICAgICAgIH0sXG4gICAgICAgIHN0YXRzLFxuICAgICAgICByZWNlbnRSYXRpbmdzOiB1c2VyLnJhdGluZ3Muc2xpY2UoMCwgMTApLFxuICAgICAgICByZWNlbnRQbGF5ZXJSYXRpbmdzOiB1c2VyLnBsYXllclJhdGluZ3Muc2xpY2UoMCwgMTApLFxuICAgICAgICBmb2xsb3dlZFRlYW1zXG4gICAgICB9XG5cbiAgICAgIGNvbnNvbGUubG9nKCfinIUgUHJvZmlsIGNvbXBsZXQgY29uc3RydWl0IGF2ZWMgc3VjY8OocycpXG4gICAgICBjb25zb2xlLmxvZyhg8J+TiiBTdGF0czogJHt0b3RhbFJhdGluZ3N9IG5vdGVzIG1hdGNocywgJHt0b3RhbFBsYXllclJhdGluZ3N9IG5vdGVzIGpvdWV1cnNgKVxuICAgICAgY29uc29sZS5sb2coYPCfj4YgU3RhdHMgcGFyIHNwb3J0IGNhbGN1bMOpZXMgcG91ciAke09iamVjdC5rZXlzKHN0YXRzQnlTcG9ydCkubGVuZ3RofSBzcG9ydHNgKVxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocHJvZmlsZURhdGEpXG5cbiAgICB9IGVsc2UgaWYgKHJlcS5tZXRob2QgPT09ICdQVVQnKSB7XG4gICAgICAvLyDwn4aVIE1pc2Ugw6Agam91ciBhbcOpbGlvcsOpZSBkdSBwcm9maWxcbiAgICAgIGNvbnN0IHsgbmFtZSwgdXNlcm5hbWUsIGJpbywgbG9jYXRpb24sIGZhdm9yaXRlQ2x1YiB9ID0gcmVxLmJvZHlcblxuICAgICAgY29uc29sZS5sb2coJ/Cfkr4gTWlzZSDDoCBqb3VyIHByb2ZpbDonLCB7IG5hbWUsIHVzZXJuYW1lLCBiaW8sIGxvY2F0aW9uLCBmYXZvcml0ZUNsdWIgfSlcblxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gTWlzZSDDoCBqb3VyIGRlcyBjb2xvbm5lcyBkZSBiYXNlIGF2ZWMgdmFsaWRhdGlvblxuICAgICAgICBjb25zdCB1cGRhdGVEYXRhOiBhbnkgPSB7fVxuICAgICAgICBcbiAgICAgICAgaWYgKG5hbWUgIT09IHVuZGVmaW5lZCkgdXBkYXRlRGF0YS5uYW1lID0gbmFtZS50cmltKCkuc2xpY2UoMCwgMTAwKSAvLyBMaW1pdGUgw6AgMTAwIGNhcmFjdMOocmVzXG4gICAgICAgIGlmICh1c2VybmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgLy8gVmFsaWRhdGlvbiB1c2VybmFtZTogYWxwaGFudW1lcmlxdWUgKyB1bmRlcnNjb3JlLCAzLTMwIGNhcmFjdMOocmVzXG4gICAgICAgICAgY29uc3QgY2xlYW5Vc2VybmFtZSA9IHVzZXJuYW1lLnRyaW0oKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1teYS16MC05X10vZywgJycpLnNsaWNlKDAsIDMwKVxuICAgICAgICAgIGlmIChjbGVhblVzZXJuYW1lLmxlbmd0aCA+PSAzKSB7XG4gICAgICAgICAgICAvLyBWw6lyaWZpZXIgbCd1bmljaXTDqSBkdSB1c2VybmFtZVxuICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgcHJpc21hLnVzZXIuZmluZEZpcnN0KHtcbiAgICAgICAgICAgICAgd2hlcmU6IHsgXG4gICAgICAgICAgICAgICAgdXNlcm5hbWU6IGNsZWFuVXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgaWQ6IHsgbm90OiBzZXNzaW9uLnVzZXIuaWQgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoZXhpc3RpbmdVc2VyKSB7XG4gICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IFxuICAgICAgICAgICAgICAgIGVycm9yOiAnQ2Ugbm9tIGRcXCd1dGlsaXNhdGV1ciBlc3QgZMOpasOgIHByaXMnLFxuICAgICAgICAgICAgICAgIGZpZWxkOiAndXNlcm5hbWUnXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHVwZGF0ZURhdGEudXNlcm5hbWUgPSBjbGVhblVzZXJuYW1lXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChiaW8gIT09IHVuZGVmaW5lZCkgdXBkYXRlRGF0YS5iaW8gPSBiaW8udHJpbSgpLnNsaWNlKDAsIDIwMCkgLy8gTGltaXRlIMOgIDIwMCBjYXJhY3TDqHJlc1xuXG4gICAgICAgIGNvbnN0IHVwZGF0ZWRVc2VyID0gYXdhaXQgcHJpc21hLnVzZXIudXBkYXRlKHtcbiAgICAgICAgICB3aGVyZTogeyBpZDogc2Vzc2lvbi51c2VyLmlkIH0sXG4gICAgICAgICAgZGF0YTogdXBkYXRlRGF0YSxcbiAgICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICAgIGlkOiB0cnVlLFxuICAgICAgICAgICAgbmFtZTogdHJ1ZSxcbiAgICAgICAgICAgIHVzZXJuYW1lOiB0cnVlLFxuICAgICAgICAgICAgYmlvOiB0cnVlLFxuICAgICAgICAgICAgZW1haWw6IHRydWUsXG4gICAgICAgICAgICBpbWFnZTogdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcblxuICAgICAgICAvLyBFc3NheWVyIGRlIG1ldHRyZSDDoCBqb3VyIGxlcyBub3V2ZWxsZXMgY29sb25uZXNcbiAgICAgICAgaWYgKGxvY2F0aW9uICE9PSB1bmRlZmluZWQgfHwgZmF2b3JpdGVDbHViICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgbG9jYXRpb25WYWx1ZSA9IGxvY2F0aW9uPy50cmltKCkuc2xpY2UoMCwgMTAwKSB8fCBudWxsXG4gICAgICAgICAgICBjb25zdCBmYXZvcml0ZUNsdWJWYWx1ZSA9IGZhdm9yaXRlQ2x1Yj8udHJpbSgpLnNsaWNlKDAsIDEwMCkgfHwgbnVsbFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBhd2FpdCBwcmlzbWEuJHF1ZXJ5UmF3YFxuICAgICAgICAgICAgICBVUERBVEUgdXNlcnMgXG4gICAgICAgICAgICAgIFNFVCBsb2NhdGlvbiA9ICR7bG9jYXRpb25WYWx1ZX0sIGZhdm9yaXRlX2NsdWIgPSAke2Zhdm9yaXRlQ2x1YlZhbHVlfVxuICAgICAgICAgICAgICBXSEVSRSBpZCA9ICR7c2Vzc2lvbi51c2VyLmlkfVxuICAgICAgICAgICAgYFxuICAgICAgICAgICAgY29uc29sZS5sb2coJ+KchSBDb2xvbm5lcyDDqXRlbmR1ZXMgbWlzZXMgw6Agam91cicpXG4gICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfimqDvuI8gQ29sb25uZXMgbG9jYXRpb24vZmF2b3JpdGVfY2x1YiBwYXMgZGlzcG9uaWJsZXMgcG91ciBsYSBtaXNlIMOgIGpvdXInKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnNvbGUubG9nKCfinIUgUHJvZmlsIG1pcyDDoCBqb3VyIGF2ZWMgc3VjY8OocycpXG4gICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgXG4gICAgICAgICAgdXNlcjogdXBkYXRlZFVzZXIsXG4gICAgICAgICAgbWVzc2FnZTogJ1Byb2ZpbCBtaXMgw6Agam91ciBhdmVjIHN1Y2PDqHMgISdcbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFcnJldXIgbWlzZSDDoCBqb3VyIHByb2ZpbDonLCBlcnJvcilcbiAgICAgICAgXG4gICAgICAgIGlmIChlcnJvci5jb2RlID09PSAnUDIwMDInICYmIGVycm9yLm1ldGE/LnRhcmdldD8uaW5jbHVkZXMoJ3VzZXJuYW1lJykpIHtcbiAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBcbiAgICAgICAgICAgIGVycm9yOiAnQ2Ugbm9tIGRcXCd1dGlsaXNhdGV1ciBlc3QgZMOpasOgIHByaXMnLFxuICAgICAgICAgICAgZmllbGQ6ICd1c2VybmFtZSdcbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IFxuICAgICAgICAgIGVycm9yOiAnRXJyZXVyIGxvcnMgZGUgbGEgbWlzZSDDoCBqb3VyIGR1IHByb2ZpbCcsXG4gICAgICAgICAgZGV0YWlsczogZXJyb3IubWVzc2FnZVxuICAgICAgICB9KVxuICAgICAgfVxuICAgICAgXG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcy5zZXRIZWFkZXIoJ0FsbG93JywgWydHRVQnLCAnUFVUJ10pXG4gICAgICByZXMuc3RhdHVzKDQwNSkuZW5kKGBNZXRob2QgJHtyZXEubWV0aG9kfSBOb3QgQWxsb3dlZGApXG4gICAgfVxuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcign8J+SpSBFUlJFVVIgQVBJIFBST0ZJTEU6JywgZXJyb3IpXG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBcbiAgICAgIGVycm9yOiAnRXJyZXVyIHNlcnZldXInLCBcbiAgICAgIGRldGFpbHM6IGVycm9yLm1lc3NhZ2VcbiAgICB9KVxuICB9XG59Il0sIm5hbWVzIjpbImdldFNlcnZlclNlc3Npb24iLCJhdXRoT3B0aW9ucyIsInByaXNtYSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJjb25zb2xlIiwibG9nIiwic2Vzc2lvbiIsInVzZXIiLCJpZCIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsIm1ldGhvZCIsInVzZXJJZCIsInF1ZXJ5IiwidGFyZ2V0VXNlcklkIiwiZmluZFVuaXF1ZSIsIndoZXJlIiwic2VsZWN0IiwibmFtZSIsImVtYWlsIiwidXNlcm5hbWUiLCJiaW8iLCJpbWFnZSIsImNyZWF0ZWRBdCIsInJhdGluZ3MiLCJpbmNsdWRlIiwibWF0Y2giLCJob21lVGVhbSIsImF3YXlUZWFtIiwiY29tcGV0aXRpb24iLCJkYXRlIiwiaG9tZVNjb3JlIiwiYXdheVNjb3JlIiwidmVudWUiLCJzcG9ydCIsIm9yZGVyQnkiLCJ0YWtlIiwicGxheWVyUmF0aW5ncyIsInBsYXllciIsIl9jb3VudCIsInNlbnRGcmllbmRzaGlwcyIsInJlY2VpdmVkRnJpZW5kc2hpcHMiLCJsZW5ndGgiLCJsb2NhdGlvbiIsImZhdm9yaXRlQ2x1YiIsImV4dHJhRGF0YSIsIiRxdWVyeVJhdyIsImZhdm9yaXRlX2NsdWIiLCJ0b3RhbFJhdGluZ3MiLCJ0b3RhbFBsYXllclJhdGluZ3MiLCJhdmdSYXRpbmciLCJyZWR1Y2UiLCJzdW0iLCJyIiwicmF0aW5nIiwiYXZnUGxheWVyUmF0aW5nIiwiZ2V0U3BvcnRGcm9tQ29tcGV0aXRpb24iLCJiYXNrZXRiYWxsQ29tcGV0aXRpb25zIiwibW1hQ29tcGV0aXRpb25zIiwicnVnYnlDb21wZXRpdGlvbnMiLCJmMUNvbXBldGl0aW9ucyIsInNvbWUiLCJjb21wIiwiaW5jbHVkZXMiLCJyYXRpbmdzQnlTcG9ydCIsInBsYXllclJhdGluZ3NCeVNwb3J0IiwiZm9yRWFjaCIsInRvTG93ZXJDYXNlIiwicHVzaCIsInN0YXRzQnlTcG9ydCIsImFsbFNwb3J0cyIsInNwb3J0UmF0aW5ncyIsInNwb3J0UGxheWVyUmF0aW5ncyIsInNwb3J0QXZnUmF0aW5nIiwic3BvcnRBdmdQbGF5ZXJSYXRpbmciLCJjb21wZXRpdGlvbkNvdW50cyIsImZhdm9yaXRlQ29tcGV0aXRpb24iLCJPYmplY3QiLCJlbnRyaWVzIiwic29ydCIsImEiLCJiIiwiTnVtYmVyIiwidG9GaXhlZCIsInRvcE1hdGNoZXMiLCJmaWx0ZXIiLCJzbGljZSIsInRvcFBsYXllclJhdGluZ3MiLCJyYXRpbmdEaXN0cmlidXRpb24iLCJBcnJheSIsImZyb20iLCJfIiwiaSIsImNvdW50IiwicGVyY2VudGFnZSIsInBsYXllclJhdGluZ0Rpc3RyaWJ1dGlvbiIsImJlc3RSYXRlZFBsYXllciIsImJlc3QiLCJjdXJyZW50Iiwic2l4TW9udGhzQWdvIiwiRGF0ZSIsInNldE1vbnRoIiwiZ2V0TW9udGgiLCJyZWNlbnRBY3Rpdml0eSIsInJlY2VudFBsYXllckFjdGl2aXR5IiwiZm9sbG93ZWRUZWFtcyIsInRlYW1Gb2xsb3dzIiwibWFwIiwidGVhbSIsImxvZ28iLCJsZWFndWUiLCJjb3VudHJ5IiwiZm91bmRlZCIsIndlYnNpdGUiLCJmb2xsb3dlcnNDb3VudCIsImZvbGxvd2VkU2luY2UiLCJmb2xsb3dlZF9zaW5jZSIsImlzRm9sbG93ZWQiLCJzdGF0cyIsInRvdGFsRnJpZW5kcyIsInRvdGFsVGVhbXNGb2xsb3dlZCIsImZhdm9yaXRlU3BvcnRzIiwicHJvZmlsZURhdGEiLCJyZWNlbnRSYXRpbmdzIiwicmVjZW50UGxheWVyUmF0aW5ncyIsImtleXMiLCJib2R5IiwidXBkYXRlRGF0YSIsInVuZGVmaW5lZCIsInRyaW0iLCJjbGVhblVzZXJuYW1lIiwicmVwbGFjZSIsImV4aXN0aW5nVXNlciIsImZpbmRGaXJzdCIsIm5vdCIsImZpZWxkIiwidXBkYXRlZFVzZXIiLCJ1cGRhdGUiLCJkYXRhIiwibG9jYXRpb25WYWx1ZSIsImZhdm9yaXRlQ2x1YlZhbHVlIiwibWVzc2FnZSIsImNvZGUiLCJtZXRhIiwidGFyZ2V0IiwiZGV0YWlscyIsInNldEhlYWRlciIsImVuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/profile.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprofile&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fprofile.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();