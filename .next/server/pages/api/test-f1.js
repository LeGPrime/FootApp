"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/test-f1";
exports.ids = ["pages/api/test-f1"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftest-f1&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftest-f1.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftest-f1&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftest-f1.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_test_f1_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/test-f1.ts */ \"(api)/./pages/api/test-f1.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_test_f1_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_test_f1_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/test-f1\",\n        pathname: \"/api/test-f1\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_test_f1_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnRlc3QtZjEmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRnRlc3QtZjEudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDbUQ7QUFDbkQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLGtEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxrREFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mb290cmF0ZS8/ZGE3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL3Rlc3QtZjEudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS90ZXN0LWYxXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdGVzdC1mMVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftest-f1&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftest-f1.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/f1-extension.ts":
/*!*****************************!*\
  !*** ./lib/f1-extension.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   f1Extension: () => (/* binding */ f1Extension)\n/* harmony export */ });\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prisma */ \"(api)/./lib/prisma.ts\");\n// lib/f1-extension.ts\n// Extension simple pour ajouter F1 √† ton syst√®me existant\n\nclass F1Extension {\n    // üèÅ IMPORT F1 COMPLET avec OpenF1 (gratuit)\n    async importF1Complete(includeLatest2024 = false) {\n        const stats = {\n            imported: 0,\n            skipped: 0,\n            errors: 0,\n            examples: []\n        };\n        console.log(\"\\uD83C\\uDFC1 Import F1 COMPLET d\\xe9marr\\xe9 (OpenF1 gratuit)...\");\n        const yearsToImport = [\n            \"2025\"\n        ];\n        if (includeLatest2024) {\n            yearsToImport.unshift(\"2024\") // Ajouter 2024 au d√©but\n            ;\n            console.log(\"\\uD83D\\uDCC5 Import 2024 ET 2025 demand\\xe9\");\n        }\n        try {\n            for (const year of yearsToImport){\n                console.log(`üìÜ Import ann√©e ${year}...`);\n                // 1. R√©cup√©rer les meetings de l'ann√©e\n                const meetingsUrl = `https://api.openf1.org/v1/meetings?year=${year}`;\n                const meetingsResponse = await fetch(meetingsUrl);\n                if (!meetingsResponse.ok) {\n                    console.error(`‚ùå Erreur r√©cup√©ration meetings ${year}: HTTP ${meetingsResponse.status}`);\n                    continue;\n                }\n                const meetings = await meetingsResponse.json();\n                console.log(`üìã ${meetings.length} Grands Prix trouv√©s pour ${year}`);\n                // 2. Pour chaque GP, r√©cup√©rer les sessions (TOUS LES GPs)\n                for (const meeting of meetings){\n                    try {\n                        const sessionsUrl = `https://api.openf1.org/v1/sessions?meeting_key=${meeting.meeting_key}`;\n                        const sessionsResponse = await fetch(sessionsUrl);\n                        if (!sessionsResponse.ok) continue;\n                        const sessions = await sessionsResponse.json();\n                        // 3. Cr√©er un √©v√©nement pour chaque session importante (TOUTES)\n                        for (const session of sessions){\n                            // Garder TOUTES les sessions importantes\n                            if (![\n                                \"Practice 1\",\n                                \"Practice 2\",\n                                \"Practice 3\",\n                                \"Qualifying\",\n                                \"Sprint Qualifying\",\n                                \"Sprint\",\n                                \"Race\"\n                            ].includes(session.session_name)) {\n                                continue;\n                            }\n                            try {\n                                const existingEvent = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.match.findFirst({\n                                    where: {\n                                        apiMatchId: `f1_${session.session_key}`\n                                    }\n                                });\n                                if (existingEvent) {\n                                    stats.skipped++;\n                                    continue;\n                                }\n                                // Cr√©er l'√©v√©nement F1 (compatible avec ton sch√©ma existant)\n                                await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.match.create({\n                                    data: {\n                                        apiMatchId: `f1_${session.session_key}`,\n                                        sport: \"F1\",\n                                        homeTeam: meeting.meeting_name,\n                                        awayTeam: session.session_name,\n                                        homeScore: 0,\n                                        awayScore: 0,\n                                        date: new Date(session.date_start),\n                                        status: new Date(session.date_end) < new Date() ? \"FINISHED\" : \"SCHEDULED\",\n                                        competition: \"Formula 1 World Championship\",\n                                        season: year,\n                                        venue: meeting.location || \"Circuit\",\n                                        // Utiliser le champ details pour stocker les infos F1\n                                        details: {\n                                            meetingKey: meeting.meeting_key,\n                                            sessionKey: session.session_key,\n                                            circuitName: session.circuit_short_name,\n                                            sessionType: session.session_type,\n                                            countryCode: session.country_code,\n                                            countryName: session.country_name,\n                                            officialName: meeting.meeting_official_name,\n                                            year: year\n                                        }\n                                    }\n                                });\n                                stats.imported++;\n                                if (stats.examples.length < 3) {\n                                    stats.examples.push(`${meeting.meeting_name} - ${session.session_name}`);\n                                }\n                                console.log(`‚úÖ F1 ${year}: ${meeting.meeting_name} - ${session.session_name}`);\n                            } catch (error) {\n                                stats.errors++;\n                                console.error(`‚ùå Erreur session ${session.session_key}:`, error);\n                            }\n                        }\n                        // Pause entre requ√™tes (r√©duite car OpenF1 est gratuit)\n                        await this.sleep(300) // ‚Üê ENCORE R√âDUIT POUR ALLER PLUS VITE\n                        ;\n                    } catch (error) {\n                        stats.errors++;\n                        console.error(`‚ùå Erreur meeting ${meeting.meeting_key}:`, error);\n                    }\n                }\n                console.log(`üìÜ Ann√©e ${year} termin√©e: ${stats.imported} √©v√©nements import√©s jusqu'ici`);\n            }\n        } catch (error) {\n            stats.errors++;\n            console.error(\"‚ùå Erreur g\\xe9n\\xe9rale F1:\", error);\n        }\n        console.log(`üèÅ F1 COMPLET termin√©: ${stats.imported} √©v√©nements import√©s`);\n        return stats;\n    }\n    // üèÅ IMPORT F1 SIMPLE (garde l'ancienne m√©thode pour compatibilit√©)\n    async importF1Simple() {\n        // Appelle la nouvelle m√©thode avec seulement 2025\n        return this.importF1Complete(false);\n    }\n    // üîç Test simple de connexion F1\n    async testF1Connection() {\n        try {\n            console.log(\"\\uD83D\\uDD0D Test OpenF1...\");\n            const response = await fetch(\"https://api.openf1.org/v1/meetings?year=2025\");\n            if (!response.ok) {\n                return {\n                    success: false,\n                    message: `HTTP ${response.status}: ${response.statusText}`\n                };\n            }\n            const data = await response.json();\n            if (Array.isArray(data) && data.length > 0) {\n                return {\n                    success: true,\n                    message: `‚úÖ OpenF1 connect√© - ${data.length} Grands Prix disponibles`,\n                    details: {\n                        meetings: data.length,\n                        example: data[0]?.meeting_name,\n                        status: \"OK\"\n                    }\n                };\n            } else {\n                return {\n                    success: false,\n                    message: \"Aucune donn\\xe9e F1 trouv\\xe9e\"\n                };\n            }\n        } catch (error) {\n            return {\n                success: false,\n                message: `Erreur: ${error.message}`\n            };\n        }\n    }\n    async sleep(ms) {\n        return new Promise((resolve)=>setTimeout(resolve, ms));\n    }\n    constructor(){\n        this.requestCount = 0;\n    }\n}\nconst f1Extension = new F1Extension();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/f1-extension.ts\n");

/***/ }),

/***/ "(api)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUU3QyxNQUFNQyxrQkFBa0JDO0FBSWpCLE1BQU1DLFNBQVNGLGdCQUFnQkUsTUFBTSxJQUFJLElBQUlILHdEQUFZQSxHQUFFO0FBRWxFLElBQUlJLElBQXlCLEVBQWNILGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zvb3RyYXRlLy4vbGliL3ByaXNtYS50cz85ODIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50J1xuXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWxUaGlzIGFzIHVua25vd24gYXMge1xuICBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxufVxuXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/PyBuZXcgUHJpc21hQ2xpZW50KClcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWFcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwicHJpc21hIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/prisma.ts\n");

/***/ }),

/***/ "(api)/./pages/api/test-f1.ts":
/*!******************************!*\
  !*** ./pages/api/test-f1.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_f1_extension__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/f1-extension */ \"(api)/./lib/f1-extension.ts\");\n// pages/api/test-f1.ts\n// API simple pour tester et importer F1\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            success: false,\n            message: \"M\\xe9thode non autoris\\xe9e\"\n        });\n    }\n    const { action } = req.body;\n    try {\n        switch(action){\n            case \"test_connection\":\n                console.log(\"\\uD83D\\uDD0D Test connexion F1...\");\n                const testResult = await _lib_f1_extension__WEBPACK_IMPORTED_MODULE_0__.f1Extension.testF1Connection();\n                return res.status(200).json({\n                    success: testResult.success,\n                    message: testResult.message,\n                    data: testResult.details\n                });\n            case \"import_f1\":\n                console.log(\"\\uD83C\\uDFC1 Import F1 d\\xe9marr\\xe9...\");\n                const importResult = await _lib_f1_extension__WEBPACK_IMPORTED_MODULE_0__.f1Extension.importF1Simple();\n                return res.status(200).json({\n                    success: true,\n                    message: `F1 import√©: ${importResult.imported} √©v√©nements`,\n                    data: {\n                        imported: importResult.imported,\n                        skipped: importResult.skipped,\n                        errors: importResult.errors,\n                        examples: importResult.examples\n                    }\n                });\n            case \"import_f1_complete\":\n                console.log(\"\\uD83C\\uDFC1 Import F1 COMPLET d\\xe9marr\\xe9 (2025 + fin 2024)...\");\n                const completeResult = await _lib_f1_extension__WEBPACK_IMPORTED_MODULE_0__.f1Extension.importF1Complete(true);\n                return res.status(200).json({\n                    success: true,\n                    message: `F1 COMPLET import√©: ${completeResult.imported} √©v√©nements`,\n                    data: {\n                        imported: completeResult.imported,\n                        skipped: completeResult.skipped,\n                        errors: completeResult.errors,\n                        examples: completeResult.examples\n                    }\n                });\n            case \"import_f1_2025_only\":\n                console.log(\"\\uD83C\\uDFC1 Import F1 2025 SEULEMENT...\");\n                const f1Only2025 = await _lib_f1_extension__WEBPACK_IMPORTED_MODULE_0__.f1Extension.importF1Complete(false);\n                return res.status(200).json({\n                    success: true,\n                    message: `F1 2025 import√©: ${f1Only2025.imported} √©v√©nements`,\n                    data: {\n                        imported: f1Only2025.imported,\n                        skipped: f1Only2025.skipped,\n                        errors: f1Only2025.errors,\n                        examples: f1Only2025.examples\n                    }\n                });\n            default:\n                return res.status(400).json({\n                    success: false,\n                    message: \"Action non reconnue. Utilisez: test_connection, import_f1, import_f1_complete, ou import_f1_2025_only\"\n                });\n        }\n    } catch (error) {\n        console.error(\"‚ùå Erreur API F1:\", error);\n        return res.status(500).json({\n            success: false,\n            message: \"Erreur serveur\",\n            error: error.message\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvdGVzdC1mMS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHVCQUF1QjtBQUN2Qix3Q0FBd0M7QUFHWTtBQVNyQyxlQUFlQyxRQUM1QkMsR0FBbUIsRUFDbkJDLEdBQWlDO0lBRWpDLElBQUlELElBQUlFLE1BQU0sS0FBSyxRQUFRO1FBQ3pCLE9BQU9ELElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDMUJDLFNBQVM7WUFDVEMsU0FBUztRQUNYO0lBQ0Y7SUFFQSxNQUFNLEVBQUVDLE1BQU0sRUFBRSxHQUFHUCxJQUFJUSxJQUFJO0lBRTNCLElBQUk7UUFDRixPQUFRRDtZQUNOLEtBQUs7Z0JBQ0hFLFFBQVFDLEdBQUcsQ0FBQztnQkFDWixNQUFNQyxhQUFhLE1BQU1iLDBEQUFXQSxDQUFDYyxnQkFBZ0I7Z0JBRXJELE9BQU9YLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7b0JBQzFCQyxTQUFTTSxXQUFXTixPQUFPO29CQUMzQkMsU0FBU0ssV0FBV0wsT0FBTztvQkFDM0JPLE1BQU1GLFdBQVdHLE9BQU87Z0JBQzFCO1lBRUYsS0FBSztnQkFDSEwsUUFBUUMsR0FBRyxDQUFDO2dCQUNaLE1BQU1LLGVBQWUsTUFBTWpCLDBEQUFXQSxDQUFDa0IsY0FBYztnQkFFckQsT0FBT2YsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztvQkFDMUJDLFNBQVM7b0JBQ1RDLFNBQVMsQ0FBQyxZQUFZLEVBQUVTLGFBQWFFLFFBQVEsQ0FBQyxXQUFXLENBQUM7b0JBQzFESixNQUFNO3dCQUNKSSxVQUFVRixhQUFhRSxRQUFRO3dCQUMvQkMsU0FBU0gsYUFBYUcsT0FBTzt3QkFDN0JDLFFBQVFKLGFBQWFJLE1BQU07d0JBQzNCQyxVQUFVTCxhQUFhSyxRQUFRO29CQUNqQztnQkFDRjtZQUVGLEtBQUs7Z0JBQ0hYLFFBQVFDLEdBQUcsQ0FBQztnQkFDWixNQUFNVyxpQkFBaUIsTUFBTXZCLDBEQUFXQSxDQUFDd0IsZ0JBQWdCLENBQUM7Z0JBRTFELE9BQU9yQixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO29CQUMxQkMsU0FBUztvQkFDVEMsU0FBUyxDQUFDLG9CQUFvQixFQUFFZSxlQUFlSixRQUFRLENBQUMsV0FBVyxDQUFDO29CQUNwRUosTUFBTTt3QkFDSkksVUFBVUksZUFBZUosUUFBUTt3QkFDakNDLFNBQVNHLGVBQWVILE9BQU87d0JBQy9CQyxRQUFRRSxlQUFlRixNQUFNO3dCQUM3QkMsVUFBVUMsZUFBZUQsUUFBUTtvQkFDbkM7Z0JBQ0Y7WUFFRixLQUFLO2dCQUNIWCxRQUFRQyxHQUFHLENBQUM7Z0JBQ1osTUFBTWEsYUFBYSxNQUFNekIsMERBQVdBLENBQUN3QixnQkFBZ0IsQ0FBQztnQkFFdEQsT0FBT3JCLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7b0JBQzFCQyxTQUFTO29CQUNUQyxTQUFTLENBQUMsaUJBQWlCLEVBQUVpQixXQUFXTixRQUFRLENBQUMsV0FBVyxDQUFDO29CQUM3REosTUFBTTt3QkFDSkksVUFBVU0sV0FBV04sUUFBUTt3QkFDN0JDLFNBQVNLLFdBQVdMLE9BQU87d0JBQzNCQyxRQUFRSSxXQUFXSixNQUFNO3dCQUN6QkMsVUFBVUcsV0FBV0gsUUFBUTtvQkFDL0I7Z0JBQ0Y7WUFFRjtnQkFDRSxPQUFPbkIsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztvQkFDMUJDLFNBQVM7b0JBQ1RDLFNBQVM7Z0JBQ1g7UUFDSjtJQUNGLEVBQUUsT0FBT2tCLE9BQVk7UUFDbkJmLFFBQVFlLEtBQUssQ0FBQyxvQkFBb0JBO1FBQ2xDLE9BQU92QixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQzFCQyxTQUFTO1lBQ1RDLFNBQVM7WUFDVGtCLE9BQU9BLE1BQU1sQixPQUFPO1FBQ3RCO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zvb3RyYXRlLy4vcGFnZXMvYXBpL3Rlc3QtZjEudHM/YmQ2OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWdlcy9hcGkvdGVzdC1mMS50c1xuLy8gQVBJIHNpbXBsZSBwb3VyIHRlc3RlciBldCBpbXBvcnRlciBGMVxuXG5pbXBvcnQgdHlwZSB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0J1xuaW1wb3J0IHsgZjFFeHRlbnNpb24gfSBmcm9tICcuLi8uLi9saWIvZjEtZXh0ZW5zaW9uJ1xuXG5pbnRlcmZhY2UgQXBpUmVzcG9uc2Uge1xuICBzdWNjZXNzOiBib29sZWFuXG4gIG1lc3NhZ2U6IHN0cmluZ1xuICBkYXRhPzogYW55XG4gIGVycm9yPzogc3RyaW5nXG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIoXG4gIHJlcTogTmV4dEFwaVJlcXVlc3QsXG4gIHJlczogTmV4dEFwaVJlc3BvbnNlPEFwaVJlc3BvbnNlPlxuKSB7XG4gIGlmIChyZXEubWV0aG9kICE9PSAnUE9TVCcpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBtZXNzYWdlOiAnTcOpdGhvZGUgbm9uIGF1dG9yaXPDqWUnXG4gICAgfSlcbiAgfVxuXG4gIGNvbnN0IHsgYWN0aW9uIH0gPSByZXEuYm9keVxuXG4gIHRyeSB7XG4gICAgc3dpdGNoIChhY3Rpb24pIHtcbiAgICAgIGNhc2UgJ3Rlc3RfY29ubmVjdGlvbic6XG4gICAgICAgIGNvbnNvbGUubG9nKCfwn5SNIFRlc3QgY29ubmV4aW9uIEYxLi4uJylcbiAgICAgICAgY29uc3QgdGVzdFJlc3VsdCA9IGF3YWl0IGYxRXh0ZW5zaW9uLnRlc3RGMUNvbm5lY3Rpb24oKVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICBzdWNjZXNzOiB0ZXN0UmVzdWx0LnN1Y2Nlc3MsXG4gICAgICAgICAgbWVzc2FnZTogdGVzdFJlc3VsdC5tZXNzYWdlLFxuICAgICAgICAgIGRhdGE6IHRlc3RSZXN1bHQuZGV0YWlsc1xuICAgICAgICB9KVxuXG4gICAgICBjYXNlICdpbXBvcnRfZjEnOlxuICAgICAgICBjb25zb2xlLmxvZygn8J+PgSBJbXBvcnQgRjEgZMOpbWFycsOpLi4uJylcbiAgICAgICAgY29uc3QgaW1wb3J0UmVzdWx0ID0gYXdhaXQgZjFFeHRlbnNpb24uaW1wb3J0RjFTaW1wbGUoKVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgIG1lc3NhZ2U6IGBGMSBpbXBvcnTDqTogJHtpbXBvcnRSZXN1bHQuaW1wb3J0ZWR9IMOpdsOpbmVtZW50c2AsXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgaW1wb3J0ZWQ6IGltcG9ydFJlc3VsdC5pbXBvcnRlZCxcbiAgICAgICAgICAgIHNraXBwZWQ6IGltcG9ydFJlc3VsdC5za2lwcGVkLFxuICAgICAgICAgICAgZXJyb3JzOiBpbXBvcnRSZXN1bHQuZXJyb3JzLFxuICAgICAgICAgICAgZXhhbXBsZXM6IGltcG9ydFJlc3VsdC5leGFtcGxlc1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcblxuICAgICAgY2FzZSAnaW1wb3J0X2YxX2NvbXBsZXRlJzpcbiAgICAgICAgY29uc29sZS5sb2coJ/Cfj4EgSW1wb3J0IEYxIENPTVBMRVQgZMOpbWFycsOpICgyMDI1ICsgZmluIDIwMjQpLi4uJylcbiAgICAgICAgY29uc3QgY29tcGxldGVSZXN1bHQgPSBhd2FpdCBmMUV4dGVuc2lvbi5pbXBvcnRGMUNvbXBsZXRlKHRydWUpXG4gICAgICAgIFxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgbWVzc2FnZTogYEYxIENPTVBMRVQgaW1wb3J0w6k6ICR7Y29tcGxldGVSZXN1bHQuaW1wb3J0ZWR9IMOpdsOpbmVtZW50c2AsXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgaW1wb3J0ZWQ6IGNvbXBsZXRlUmVzdWx0LmltcG9ydGVkLFxuICAgICAgICAgICAgc2tpcHBlZDogY29tcGxldGVSZXN1bHQuc2tpcHBlZCxcbiAgICAgICAgICAgIGVycm9yczogY29tcGxldGVSZXN1bHQuZXJyb3JzLFxuICAgICAgICAgICAgZXhhbXBsZXM6IGNvbXBsZXRlUmVzdWx0LmV4YW1wbGVzXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICBjYXNlICdpbXBvcnRfZjFfMjAyNV9vbmx5JzpcbiAgICAgICAgY29uc29sZS5sb2coJ/Cfj4EgSW1wb3J0IEYxIDIwMjUgU0VVTEVNRU5ULi4uJylcbiAgICAgICAgY29uc3QgZjFPbmx5MjAyNSA9IGF3YWl0IGYxRXh0ZW5zaW9uLmltcG9ydEYxQ29tcGxldGUoZmFsc2UpXG4gICAgICAgIFxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgbWVzc2FnZTogYEYxIDIwMjUgaW1wb3J0w6k6ICR7ZjFPbmx5MjAyNS5pbXBvcnRlZH0gw6l2w6luZW1lbnRzYCxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBpbXBvcnRlZDogZjFPbmx5MjAyNS5pbXBvcnRlZCxcbiAgICAgICAgICAgIHNraXBwZWQ6IGYxT25seTIwMjUuc2tpcHBlZCxcbiAgICAgICAgICAgIGVycm9yczogZjFPbmx5MjAyNS5lcnJvcnMsXG4gICAgICAgICAgICBleGFtcGxlczogZjFPbmx5MjAyNS5leGFtcGxlc1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICBtZXNzYWdlOiAnQWN0aW9uIG5vbiByZWNvbm51ZS4gVXRpbGlzZXo6IHRlc3RfY29ubmVjdGlvbiwgaW1wb3J0X2YxLCBpbXBvcnRfZjFfY29tcGxldGUsIG91IGltcG9ydF9mMV8yMDI1X29ubHknXG4gICAgICAgIH0pXG4gICAgfVxuICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgY29uc29sZS5lcnJvcign4p2MIEVycmV1ciBBUEkgRjE6JywgZXJyb3IpXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgbWVzc2FnZTogJ0VycmV1ciBzZXJ2ZXVyJyxcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgfSlcbiAgfVxufSJdLCJuYW1lcyI6WyJmMUV4dGVuc2lvbiIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJhY3Rpb24iLCJib2R5IiwiY29uc29sZSIsImxvZyIsInRlc3RSZXN1bHQiLCJ0ZXN0RjFDb25uZWN0aW9uIiwiZGF0YSIsImRldGFpbHMiLCJpbXBvcnRSZXN1bHQiLCJpbXBvcnRGMVNpbXBsZSIsImltcG9ydGVkIiwic2tpcHBlZCIsImVycm9ycyIsImV4YW1wbGVzIiwiY29tcGxldGVSZXN1bHQiLCJpbXBvcnRGMUNvbXBsZXRlIiwiZjFPbmx5MjAyNSIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/test-f1.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftest-f1&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftest-f1.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();